<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>池建强的文章</title><link>http://www.zhihu.com/people/sagacity</link><description>青峰之巅，山外之山</description><pubDate>Wed, 04 May 2016 21:14:01 GMT</pubDate><generator>PyRSS2Gen-1.1.0</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>聊聊职场规划那些事儿</title><link>http://zhuanlan.zhihu.com/p/20602131</link><description>&lt;p&gt;去年的现在，我还在亚龙湾的躺椅上就着蓝汪汪的水和蓝瓦瓦的天阅读王小波的杂文集「你为什么活着」。王老师说：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;我现在已经活到了人生的中途，拿一日来比喻人的一生，现在正是中午。人在童年时从朦胧中醒来，需要一些时间来克服清晨的软弱，然后就要投入工作；在正午时分，他的精力最为充沛，但已隐隐感到疲惫；到了黄昏时节，就要总结一日的工作，准备沉入永恒的休息。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;如此说来，工作才是人一生的主题。那么我们今天就来聊聊「职场规划那些事儿」。我已经上班了，上的生龙活虎，虎虎生风，所以不是我聊，忙了一整天的我断然不可能像变魔术一样写出这么多文字，这是我的好朋友王勇睿老师在我的「攻城狮群」的一次分享，相对公开，授权发布。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;有时候我还是很感谢这个群的，没有它，这些深藏功与名的大牛们怎么可能把压箱底的技术和励志小故事都抖露出来呢？而且一下就是4个！&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;—————————————————————————————————————&lt;/p&gt;&lt;p&gt;大家好，我是王勇睿，目前在一家做互联网金融的公司工作。这是我在池老师的社区第二次做分享，谢谢大家捧场。上次我给大家分享了一篇讲述淘宝广告系统从无到有过程的文章，今天就不说技术了，跟大家聊聊职场规划的事情。最近这15年，是中国互联网江湖巨变的15年，互联网深刻且不可逆的影响了中国人的生存方式和生活方式。同时，加入互联网大军的人越来越多，很多同学都想在互联网公司一展拳脚，走上人生巅峰。那么，应该怎么规划自己的职业生涯呢？有什么需要注意的地方呢？我们今天就来聊聊这个话题。当然，我不是人生规划师，我今天只是给大家讲4个小故事，希望能够引起大家的思考，最好能得出自己的结论，谢谢。&lt;/p&gt;&lt;p&gt;第一个故事，是我自己的故事。我2005年从中科院计算所硕士毕业，加入了百度，后来去了搜狗，一直在做搜索方面的技术。在2010年初的时候，我加入了淘宝，负责定向广告算法，五年之后离开淘宝，开始做目前的事情。我要说的重点就是我为什么在2010年选择加入淘宝。在2009年末的时候，我已经决定要离开搜狗，所以就陆续接触了一些公司，也拿到了若干的offer，并最终选择了淘宝。这个过程现在来看是很顺的，但是在2010年初我拿着几个offer进行选择的时候，却并没有那么的容易。因为淘宝给我的offer，薪水部分是最低的。低到什么程度呢？比倒数第二的offer一个月少1万块人民币。在2010年的时候，一个月一万，意味着如果正常一年15个月薪水的话，一年少赚15万。对当时的我来说，这不是一笔轻易可以放弃的财富。更何况，其它公司也给了我期权。&lt;/p&gt;&lt;p&gt;当时我拿到的offer里面，有些是公司创始人直接找我谈的，title也很光鲜，什么首席架构师之类的，算是给足了我面子；有些是大公司，收入稳定，待遇也很好；有一个公司在我加入淘宝之后1年就上市了，算是很优质的公司。我当时很纠结，所以找了一些当时我认为很有见识的人聊了一下，目前来看这些人还是挺靠谱的，从一个侧面说明朋友圈是多么重要。话题说回来，大多数人给我的建议是：要看公司的长远发展。当时阿里巴巴给我的股票，公允价格只有不到10美金，而且还有将近5美金的成本，股票部分如果静止的看，基本可以算不赚钱，我也根本不知道未来会涨到多少。我只是觉得这个平台的发展速度非常快，我去打听了一下淘宝广告的业务发展情况，基本业绩每年翻3倍，而且淘宝矩阵的各项生态指标，包括GMV、开店数等等，都协同快速增长，整个淘宝处于一个蒸蒸日上的快速增长期。我比较了一圈各个公司的发展状况之后，心里就有底了，最终跳上了淘宝这条船。&lt;/p&gt;&lt;p&gt;从现在回过头去看当时的选择，我觉得基本上是选对了。这个选对了，不仅仅指的是世俗意义上的财务收入，因为众所周知，最后阿里整体上市了，我们员工都或多或少赚了一笔；更指的是我眼界的提升、人脉的提升和个人修为的提升。这就要说到在大平台工作的优势了。大平台业务量大，碰到的技术问题、管理问题、业务问题都很多，而且这些问题都涉及比较大的规模和流量。如果认真工作，需要你投入的思考会更多，更加考验你全面的素质和能力，逼着你快速提升自己，尽快成熟坚强起来。这方面，是大平台锻炼人的地方，也是优势之一。这也是我为什么非常推荐「新毕业的同学先去大公司工作几年，再出来创业不迟」的道理。另一方面，大公司环境虽然相对正规一些，但是林子大了什么人都有，所以特别锻炼跟别人相处的能力。这个能力是情商的一部分，身处职场还是挺重要的。这不是说让大家都曲意逢迎别人，而是要有自己的原则和执行方向，但是又能最大限度的整合资源，争取更多的支持。切记，千万别觉得自己个人能力强就目空一切，这在需要高度协作化工作的互联网公司可能会给你造成较大伤害。&lt;/p&gt;&lt;p&gt;淘宝的广告业务规模不仅大，更重要的是快。当时的淘宝广告业务飞速发展，连续的高增长，遇到了很多的技术问题，有些问题很前沿，需要我们使出全部功力才能涉险过关。这种经常逼着自己向前突破自己能力边界的过程，是很刺激的。大家细心观察一下，在那些业务发展停滞，暮气沉沉的公司里，员工的精神状态都不是特别兴奋，工作内容和性质长时间没有实质性的改变，这样的环境对于自己的能力提升是不利的。在一个快速发展的环境里，只有跑得更快才能不掉队，这种锻炼机会我反正觉得挺珍贵的。说句实话，淘宝广告技术，起点并不高，但是业务的快速发展倒逼着技术架构要不停的升级，从海量存储到网络高并发，从离线模型到在线实时预估体系，这些我以前都没做过，但是不得不逼着自己看论文、问专家，最后把自己逼成一个专家，这个过程既艰苦又兴奋，回过头来看是要感谢那段岁月的。我们出来工作，应该都不是奔着每天喝茶看报的工作岗位的，都是想快速提升自己的，那么，快速发展的公司是非常适合的。&lt;/p&gt;&lt;p&gt;人脉方面，我在这几年通过一些会议、聚会等等机会，结识了很多技术圈的朋友，不但学习到了很多的前沿技术，也更加扩展了自己的见闻和眼界。而我能够很荣幸的加入这些场合，不能不说是有大公司光环的帮助的。对了，我跟我目前工作的公司的创始人就是相识于一次淘宝赞助的技术大会，我作为公司代表出席了那次会议，人生的际遇真是奇妙。至于我写的那本书，那更是沾了这些年在淘宝技术部的光，不然哪有机会接触这些技术方向呢。&lt;/p&gt;&lt;p&gt;第一个故事讲完了，我个人的感觉是，如果初入职场不太久，5年左右或者5年以下吧，尽量选择快速发展的平台，尽量选择行业的领头羊。当然，任何规律都有例外，各种大神天才就不用我考虑了。&lt;/p&gt;&lt;p&gt;第二个故事是关于我的一个朋友的。他跟我一样，从本科开始就是读计算机的，后来硕士毕业之后在一家中等规模的互联网公司工作。在2006和2007年两年的中国股市高潮过后，他很沉痛的跟我聊了一次。他觉得他选错行业了，应该去搞金融，因为在那几年，三流证券公司的IT部门员工也有几十万的年底奖金，好的公司有大几十万甚至上百万。我作为一个刚工作2年的互联网屌丝青年，听了之后也咽了一口羡慕的口水。但是我隐隐的觉得，金融的市场情况我不了解，金融的逻辑我也只是粗浅的知道些皮毛，而且金融公司内部啥样我都不知道，我不可能贸然跨行跳槽。但是这个哥们执行力很强，很快就跳槽了，然后就赶上了中国股市大崩盘之后的寒冬，他跟我讲收益不咋地，有点后悔。他在金融IT部门呆了几年之后，又觉得很无聊，而且觉得中国的运营商很牛逼，就加入了一家运营商下属的公司，但是后来运营商对应的业务受到互联网影响明显下滑，那个公司也没啥起色。再后来又去尝试在一个创业公司做运营负责人，去年资本寒冬下公司也没挺过来。&lt;/p&gt;&lt;p&gt;这个哥们在不同的公司，做的事情都有些区别，甚至最后干脆不做技术了。我最近一次跟他聊天是在2015年秋天，他有些沮丧，感觉自己这10年一直没碰上好机会，而且由于在技术方面没有长期的积累，所以现在也没法再在大公司谋一个自己满意的技术岗位，只能再看看有没有创业公司去赌一把。这个哥们刚出道的时候技术还是很不错的，而且也是名牌大学的硕士。我在想，也许他要是在公司里面积累的时间长一点，就会躲过金融危机，以后也就断了换行的念头；也许他在金融公司再忍耐几年，就会熬过经济周期，享受到后来这几年证券公司复苏的收益。后来我明白了，这哥们不是没碰到好机会，是他自己太躁动了，没法在一个领域或者一个环境深入的工作下去。这个时代虽然是一个社会高速发展，什么都讲快餐的时代，但是对于人才，尤其是高级人才，还是越有积淀越吃香。如果一个人什么都懂，什么都稀松平常，那就很难体现出自己的竞争优势。&lt;/p&gt;&lt;p&gt;另外一个问题就是这个总想赌一把的思维方式。一开始觉得自己有年轻和能力的资本，就想赌一把，换到另一个行业去。结果遇到行业大环境的问题，就不想等待了，急吼吼的开始下一次的赌博，结果又是输掉，接着循环。一次又一次的赌博，让自己没有积累起最有价值的筹码，这个筹码就是自己的价值。在任何时候，投资自己永远是投资收益比最高的，所以永远要投资自己，充实自己，让自己有价值之后才能变现价值，否则就是自己的一厢情愿，最后就变成一肚子的委屈和不解。自己有了价值，才会有更多的机会找上门来，才会有更多人欣赏你，你才会感觉到周围到处都是好机会等着你去挑，而且有了机会之后才能真正抓住机会。&lt;/p&gt;&lt;p&gt;还有一个问题，就是怎么看待不同行业的收益的问题。这个问题我是这么看的，我觉得根本就不用太去理睬这个问题，平时跟朋友聊天的时候八卦一下就算了，真的别以为自己了解别的行业就贸然过去。别的行业的人也不傻，你过去也不一定有啥优势，还不如先在自己的方向搞出一些名堂，先让自己成为专家，然后再去考虑别的问题。我还是挺喜欢一万小时这个法则的，不管这个社会怎么变化，人接受知识并转化为自己的智慧的能力没有本质的提升，仍然还是需要大量的学习、练习、反思，才能最终成为一个靠谱的人。在一个领域积累的时间长了，最终会迎来一个或者多个爆发点的，因为在中国，不仅仅是互联网行业，各行业都极度缺乏高级人才。&lt;/p&gt;&lt;p&gt;第二个故事讲完了，我个人的意思是，大家还是应该争取在自己的专业领域一定要有所积累，然后再做扩展，这样更稳妥一些。我不希望大家简单的认为我是一个反感换行业的人，因为凡事都有例外，只有从自己的具体情况出发做出的决定才是最终适合你的。&lt;/p&gt;&lt;br&gt;&lt;p&gt;第三个故事也是我的一个朋友，他现在仍然在阿里巴巴，他很神奇。他并不是一个科班出身的计算机学生，相反，这哥们的大学同等学力文凭是一个很不靠谱的培训学校，名字我记不清了。这哥们现在是一个技术大牛，但是在初入职场的时候，他的工作是一个电脑城里面卖电脑的。他当时在南方一个小城市的电脑城里面天天卖电脑，一个月拿几百块钱的工资，屌丝的一塌糊涂，对计算机编程更是一窍不通。无论从哪个方面看，这个小镇青年跟现在的研发总监，开源社区负责人的title根本搭不上边。但是，命运在那一年神奇的击中了他一次，并且彻底改变了他的人生轨迹。说起来，原因特别简单，就是太穷了，穷则思变。即使是在那样一个落后的小城市，几百块钱仍然要被打上一个低收入阶层的标签。我这个朋友做了两年之后感觉人生渺茫，正在郁闷，突然有一次跟他的一个朋友聊天的时候知道有编程序写软件这个事情。他回忆说，他第一次听说写东西可以一个月赚几千块钱，他当时就震惊了，眼前浮现出一条金光大道。他说他一分钟都不想再浪费在这个电脑城了，立刻去买了几本书开始自学。&lt;/p&gt;&lt;p&gt;可能是我这个朋友真的有点小天才吧，他不但不抵触，居然自学的还可以，可以编写Hello World了。这是一个巨大的进步，但是他打听了一下，这个程度是不能一个月赚几千块钱的。所以，他又听人介绍，一咬牙一跺脚交了几千块钱进入一个培训机构去正规的学习编程。他说他那个时候开始迷上了写程序，这一迷就是10多年。就是这样起步，他拼尽自己的全部能力，几年之内就在北京一家做通讯软件的公司做了程序员，并且，最终成为这个公司的最核心的后端工程师和架构师。他不但架构和工程有了长足的进步，而且在通讯领域有了很深的积累，成为了这个方面的一个年轻的小专家。这个公司时至今日已经没落了，但是有时候我这个朋友还会在我们聚会的时候，打开这个公司的网页，指着这个公司的通讯产品，说哪些是他当时负责做的，这是他最开始作为职业程序员起步的地方。&lt;/p&gt;&lt;p&gt;后来，由于他在通讯技术方面的小名气，有很多公司来挖他，他的薪水每两年翻一番，并且最终被阿里巴巴相中，在2010年进入阿里巴巴，负责某个产品的部分后端技术，最终成为后端总负责人。不到3年时间，从工程专家升为研发总监，并且负责某些开源社区的工作。我后来经常开他的玩笑，说他是个天才，他每次都是很憨厚的跟我很认真的说：并不是这样的，我很笨，只是喜欢计算机，并且肯吃苦罢了。&lt;/p&gt;&lt;p&gt;我这个朋友当年在北京工作的地方，离我现在住的地方很近，但是那个时候我俩还不认识。他说他当年工作的时候，骑着自行车，在尘土飞扬的马路上飞奔，每天回到家有时间就研究技术文章，上网看别人的技术博客和文章，然后把所有能拿到的开源的代码都读一遍，这是他一生中最快乐的时光之一。后来他去上海工作，再后来去了阿里巴巴就搬到了杭州，并最终定居在杭州，仍然保持着每天看代码的习惯。直到后来当了总监了，我们聚会的时候，他还在等菜的时候看代码。这样的职业素养，比一些所谓名牌大学毕业的同学要高出不少。而且，这个哥们为人非常谦和，经常帮助兄弟部门解决技术问题，口碑好的一塌糊涂。&lt;/p&gt;&lt;p&gt;抛开其它因素，我今天想聊的是他的这份坚持。我以前参加校园招聘的时候，有时候会碰到一些同学问我怎样才能走捷径，怎样涨工资快。这往往让我不知道怎么回答。我们可能听说过哪个同学在百度一年升一级，都快T10了；也听说过哪个同学毕业就40多万的薪水。但是，这样的人毕竟是少数，而且也有他们这么值钱的逻辑，只是这个逻辑肯定不适合大多数人。但是我这个朋友的故事真的是可以借鉴的。你看，你们有多少人起点比他低——从一个卖电脑的小职员开始工作；你们有多少人起步比他晚——20多岁还不知道啥是编程。我可以向你保证，这个朋友的智商属于正常水平，不是个天才，但是拼搏程度超过我见过的大多数人，为人谦逊好学的习惯也一直保持。到了最后，优秀说白了就是一种习惯。我们在公司聊天的时候，经常会说某某人技术特别厉害，但是仔细想想也不是不可追赶的，只是自己懒罢了。大多数情况下，我们努力程度是如此之低，以至于根本轮不到拼天赋的程度。&lt;/p&gt;&lt;p&gt;第三个故事讲完了，我这个哥们除了开心的工作之外，又开始研究生物技术了，谁知道他以后会搞出什么花样来，但是有这种做事的态度，做啥都是靠谱的。&lt;/p&gt;&lt;p&gt;第四个故事是关于我的一个同学的。这个哥们跟我是研究生同班同学，主攻的是图形学，研究生期间在微软亚洲研究院做实习，最终在研究院的图形组工作，2012年前成为资深研究员，在顶级会议Siggraph上面连续10几年发表了10几篇文章，还因为研究成果出色被奖励去过一次比尔盖茨家里吃饭。我想着重说的是他刚开始在研究院做图形学研究的时候，是怎么当上一个小负责人的。如果大家了解微软研究院的做事方法，应该明白写一篇目标是顶级会议的paper，就好像是启动了一个大项目，这个项目是很多人一起完成的，类似于一个互联网公司的大项目，会有各个部门都参与进来。Siggraph是世界顶级会议，微软亚洲研究院的院长之一又是图形学权威沈向阳，所以自然格外重视，要保证一击必中，要让世界权威专家看到创新的地方，同时没有任何的纰漏。期间，整个项目组要阅读大量的最新研究成果，做大量的实验，写大量的程序，做大量的效果比较，最终还要请数学方面的专家核对理论部分是否有数学方面的问题，就连最后paper的文字部分都是由专业的美国研究员润色语言，因为中国人的母语不是英语，写出来的效果还是有些差距。&lt;/p&gt;&lt;p&gt;Siggraph的一篇文章，要牵扯不同的人，上至资深研究员，下至普通实习生，过程繁杂，工作量巨大。我这个同学在最忙的时候，一个星期要写一万行有效代码，连续三四个星期，同时还得每天开10几个会议商量问题，同时每天睡眠时间平均少于6个小时，偶尔两三天不睡觉也是有的。能够完成自己的份内工作已经实属不易，听说很多实习生坚持不下来就放弃了。我这个同学当时的MSN的签名是「四个寡妇」，这个签名跟Siggraph的发音相似，另一方面，也是自嘲一旦进入这个项目组，自己的女朋友就跟寡妇一样，看不到自己男朋友了。他基本上两个月下来就要减重10斤左右。当然，他们项目组也有人胖10斤的。&lt;/p&gt;&lt;p&gt;最后，他们肯定是成功了，因为微软研究院的实力还是够强的。我这个同学也成了一个小的负责人，这个时候他还没博士毕业，这个挺让我惊讶的。我就问他怎么这么牛逼呢，他目光呆滞的说：我就是个操心的命，除了完成自己的事情，啥都想了解一点，啥都帮着张罗一点。&lt;/p&gt;&lt;p&gt;多年以后，我在一篇文章里面看到有人写自己在互联网公司工作的精神状态，叫做「把这份工作当成是创业」。我突然很受启发，觉得这句话跟我的同学当年说的是一个道理。如果一个人把自己的工作当成是创业，那他必然是不但要保质保量完成自己的份内之事，还要争取再多干一点事情，为了让整个大的事业的成功概率增加一点点。而这种人，不正是近期创业大潮里面所说的那种有合伙人心态的员工吗？把这份工作当成是创业，那就是把自己的命运绑在这个组织上，高度认同这个事业，有主人翁意识，愿意干脏活累活，愿意根据事情的进展额外付出……这样的人，怎么可能不让人喜欢呢？&lt;/p&gt;&lt;p&gt;换句话说，如果一个人有这种创业的心态，那他就自然的站在了一个更高的角度来看问题，相对容易能够看出事情的优先级和各种问题的真正原因，也就更有可能知道怎样推进事情才是更合理的。我承认现在有些公司的各级主管不分是非、任人唯亲，搞得乌烟瘴气的。但是，在这个快速发展的时代，总有很多优秀公司，或者是大公司的优秀部门是需要有这种创业心态的人加入的，而这种创业心态也会让你变得更有洞察力和大局观，即使是当作一种思维方式，都是值得去尝试的。&lt;/p&gt;&lt;p&gt;第四个故事讲完了，我这个同学刚刚离开微软，开始了创业之路，祝福他。&lt;/p&gt;&lt;p&gt;四个故事都讲完了，对你有没有启发我不知道，反正我就当闲聊了。我想最后说的是，目前是中国近一百年最好的时代，因为思想启蒙在一定程度上进行着，科学启蒙也有了苗头，同时经济大发展，个人财富迅速增加，阶层的流动性还比较好，机会还很多；同时也是最坏的时代，沉渣泛起，恶劣的博弈随处上演，你的三观将接受最严酷的考验，同时你如果不想与时代脱节，就要拼命获取信息，提升自己的洞察力，否则就会掉队。职场是一个考验人的地方，但是永远不要把自己的幸福完全建立在自己的事业是否成功，赚的钱是否比别人多的基础之上，要逐渐接受多元化的幸福观。你的健康，你的家庭，你的亲人，你的好朋友，你的知识，你的品味，这些都是你获取幸福的地方，职场只是其中之一而已，保持心态平和很重要。&lt;/p&gt;&lt;p&gt;这次的分享就这些内容，祝大家新的一年身体健康，平安喜乐。谢谢大家。&lt;/p&gt;</description><pubDate>2016-02-26T14:04:12+08:00</pubDate></item><item><title>善良比聪明重要</title><link>http://zhuanlan.zhihu.com/p/20519994</link><description>这篇文章是知乎专栏第一百篇，是为记！&lt;blockquote&gt;&lt;p&gt;百度做为一个热气腾腾的拼盘被拆了拼，拼了拆，反复烘烤调制，时至今日，差不多已经凉下来了。我想，我终于可以写两句百度了。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;最早知道百度是在2001年，那时我正处于职业生涯最为惬意的一段时期，洪恩软件聚集了大量软件领域的编程奇才，身边牛人比比皆是，大量清华北大的学子毕业后都加入了洪恩，我们梦想着十年以后洪恩成为中国最伟大的软件公司之一，并不分昼夜在花花绿绿的屏幕旁边敲打键盘，希望做出传世之作。&lt;/p&gt;&lt;p&gt;有一天我们团队的一位朋友告诉我，他的一个朋友想来洪恩面试，我问原来在哪工作，他说用友，啊，居然差到了去企业软件公司，看在你的面子上见见吧。&lt;/p&gt;&lt;p&gt;这是一个非常典型的程序员，格子衫，双肩挎，面容憔悴气质差，整个人松松垮垮，不过毕竟有我们程序员的素质，领到电脑面前立刻跟换了个人似的，屏幕在前，键盘在手，眼中充满了睥睨天下的气势。做了几道上线题，看着基础知识还不错，于是拉到会议室开始面谈。这孩子离开电脑又恢复了灰头土脸的气色，说话有条理，但是气若游丝，聊天的时候你总是要忍住往他手里递个麦克风的冲动。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;为什么离开用友？&lt;br&gt;感觉做企业软件没啥意思。&lt;br&gt;确实，你怎么会去用友呢，在那用什么语言？（5年后我加入了用友软件……）&lt;br&gt;VB。说完他非常不好意思的低下了头。&lt;br&gt;还会什么语言？我撇了撇嘴。&lt;br&gt;PHP。他再次低下了头。&lt;br&gt;我们用 Perl。我再次撇了撇嘴（难以想象，在那个年代， VB 和 PHP 已经处于鄙视链的最低端了）&lt;br&gt;……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;面试之后的结果就是基础不错，但技能不大匹配。当我告诉了他这个结果之后，他流露出非常遗憾的表情，告诉我，不能来洪恩的话，他就只能去百度了，那时他已经拿到了百度的 Offer。&lt;/p&gt;&lt;p&gt;我说百度是什么东西，他说是一个在互联网上搜东西的公司。&lt;br&gt;我说不是有 Google 和 Yahoo 吗？他说百度的人也用 Google，哎。&lt;/p&gt;&lt;p&gt;于是他就去了百度。&lt;br&gt;2005年百度就上市了。&lt;br&gt;百度的扫地大妈都有了股份。&lt;/p&gt;&lt;p&gt;2006年他离开了百度去了硅谷，然后音讯全无。走之前我们三个还见了一面，他真情流露，紧紧的握着我的手说：大哥，非常感谢你当时让我去了百度，没有你就没有我的今天。我：……这是我……应该做的……&lt;/p&gt;&lt;p&gt;百度可以说是中国互联网的一个传奇，他们在初创的年代，迎着蓬勃而来的互联网浪潮，年轻而无谓，锐意进取，相信技术的力量，给了产品经理和程序员们最大的空间，并成长为中国最大的互联网搜索公司，很多年轻的程序员因为百度一战成名，也因为百度摆脱了财富的束缚，展翅高飞。&lt;/p&gt;&lt;p&gt;我怀念那个时代的百度，并为自己错过这样的公司表示遗憾。&lt;/p&gt;&lt;p&gt;百度怎么就变成了现在这个样子了呢？在铺天盖地的互联网文章剖析百度肢解百度的时候，我常常问自己这样问题。我想这个分水岭应该是 Google 被迫离开中国开始的。当一个最强的竞争对手消失了之后，百度的善恶天平发生了缓慢的倾斜。这就像世间最强的两个剑客激战正酣，突然裁判跑进来说，谷先生你练的剑法没有通过我们的审查，你输了。于是谷先生黯然离场，百先生突然发现自己成了中国的搜索老大，惊喜过后是啥？茫然若失！&lt;/p&gt;&lt;p&gt;百度开始在逐利的战场上远走越远，以至于完全迷失了自己。不说竞价排名，不说虚假医疗广告，不说全家桶，就说百度贴吧事件，很难想象这是一个商业公司的逐利行为。最开始我并不了解事情的来龙去脉，还以为是百度贴吧的吧主之间发生了转让和利益纷争。不是这样，事情的经过简单来说是这样的：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;百度贴吧转型，将各贴吧吧主位置售卖给相关商业机构。如血友病吧吧主位置卖给一家民营医院(吧友发现其是骗子)，又把原吧主全部清出。血友病吧原吧主为该贴吧贡献极大，为病友贡献了珍贵的救命信息。有人发文控诉，进而引发群怒，最后扩大为全网对百度的声讨。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;你能想象这是一个稍微有点商业头脑公司的商业行为吗？引申一下，这就像你在微信公众平台上运营了一个公众号，写了很多年，有了很多读者，有一天微信的人跑过来说，哦，这个号归为腾有，你不用管了。然后转手把这个号卖个了另一家科技公司……&lt;/p&gt;&lt;p&gt;做为一个巨型平台公司，不仅不能去做这样恶劣的商业行为，还应该去维护善，惩戒恶。当年盗版在百度平台泛滥的时候，中国作家声讨百度书虽然闹得沸沸扬扬，但是并未动摇百度的根基，最终以百度赔偿作家17.3万元了事。17.3万，在百度看来九牛一毛都算不上。李彦宏说，百度是个中立的平台，技术中立，平台中立。那么我们看看微信在微信平台上做了什么。微信平台在不断前行的过程中创建了一套非常简单易行的原创和举报方式，基本上从根本上保证了原创作者的利益。&lt;/p&gt;&lt;p&gt;一切以用户价值为依归，这句话不是说说就完了。张小龙说：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;关于用户价值，我有一天分享过亚马逊CEO的一个文章，他的文章标题叫做《善良比聪明更重要》。我相信在座的人都是很聪明的人，因为大家会想到很多很多的方法去欺骗用户，欺骗用户是最容易做的事情，因为只需要聪明就可以了，这是不对的，因为欺骗用户虽然很容易获得流量，可以获得用户的点击，但是最终会把用户给赶跑了。所以这篇文章写的非常好，善良比聪明更重要，怎么样对用户是好的——这个会聪明会更重要一些。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;用聪明的方式欺骗用户，总有一天所有的优质用户都会离你而去。&lt;/p&gt;&lt;p&gt;那么百度有没有好的产品？当然有，否则百度也不会做的这么大。很多人骂完百度连百度的产品都不用了，我不会这样，我希望百度好，希望百度能重新变成一个优秀的公司，所以还是要说说我用的几款百度产品，不多，但有几个。&lt;/p&gt;&lt;p&gt;第一个是 Mac 下的百度输入法，这个输入法保持了我所有从 Windows 平台带来的输入习惯，转换基本没有任何成本，另外，百度输入法提供了一个最方便的配置可以打出直角引号「」，这一点基本上是我始终使用百度输入法的原因。&lt;/p&gt;&lt;p&gt;第二个是百度地图，这是一款罕见的非常干净的百度产品，而且进化速度很快，无论是 iOS 还是 Android 平台，都算是导航里不错的产品。&lt;/p&gt;&lt;p&gt;第三个是百度云盘，主要用来与国内的第三方朋友分享一些文件，因为你很难用 Dropbox 分享完了再教朋友怎么翻越长城，能累死。&lt;/p&gt;&lt;p&gt;第四个是偶尔会用到百度搜索，比如搜一下我做不出来的三年级奥数作业。百度搜索能不能用，偶尔能，比如搜索「坚果手机」，出来的结果是直降200，京东现货。是锤子科技做的推广，有没有虚假宣传？没有。&lt;/p&gt;&lt;p&gt;但是搜索产品经理，排在前面的都是一些产品经理培训机构，你觉得产品经理是培训出来的吗？你会觉得这个行业太浮躁了，谁的错？我觉得不是竞价排名的错，而是百度有责任保证投放的厂商的信息的真实性。有取有舍才会阔步前行。没有这样的机制，那么竞价排名就会产生出各种恶。&lt;/p&gt;&lt;p&gt;至于在百度里搜索医疗信息……你怎么能在百度搜医疗信息呢，你应该直接去下个丁香园的「丁香医生」啊！&lt;/p&gt;&lt;p&gt;这篇文章早就想写，但是没有选择在那个热火朝天的时段写，因为很容易被骂成站队、洗地。现在大家冷静下来了，我也可以写一些心平气静的文字出来，并时时提醒自己：善良比聪明更重要！&lt;/p&gt;&lt;p&gt;共勉！&lt;/p&gt;&lt;img src="https://pic3.zhimg.com/735fcc8fc7684be5a408215ecd7f992e_b.jpg" data-rawwidth="1280" data-rawheight="1280" class="origin_image zh-lightbox-thumb" width="1280" data-original="https://pic3.zhimg.com/735fcc8fc7684be5a408215ecd7f992e_r.jpg"&gt;&lt;br&gt;&lt;p&gt;微信扫描关注原创文章。&lt;/p&gt;</description><pubDate>2016-01-21T15:55:50+08:00</pubDate></item><item><title>你说说什么产品才是好产品</title><link>http://zhuanlan.zhihu.com/p/20426307</link><description>&lt;p&gt;上周接受了人民邮电出版社异步社区[ &lt;a href="https://link.zhihu.com/?target=http%3A//www.epubit.com.cn/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;异步社区&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; ]的一次文字采访，关于产品、微信、写作、书等内容，还有极为尖锐的「经济问题」。一字不改，呈现个大家。&lt;/p&gt;&lt;p&gt;1、首先，谈到「价值」，联想到我们目前所处的互联网行业，想问你的第一个问题是：一个好产品的价值取决于哪些因素或是衡量标准？一个优秀的技术团队呢？&lt;/p&gt;&lt;p&gt;好产品的价值应该取决于多重因素。首先一个产品应该是用来满足需求、解决问题的。产品能够满足某个领域某一部分用户的需求、解决了某些用户的问题，才有价值，才会有生命力，企业才能活下来。这种需求有可能是已经存在的，比如滴滴、Uber、Airbnb 就是通过共享经济解决人们的衣食住行问题。也可能是潜在的，比如马车时代，人们只想更舒服更快捷的旅行，但不会想到汽车；非智能机时代，人们只想更方便的上网、阅读、交流，但不会想到 iPhone。革命性的产品会引导和满足这些潜在的需求。&lt;/p&gt;&lt;p&gt;但是从根本上来讲，就是有用。&lt;/p&gt;&lt;p&gt;在有用的基础上，好产品还能够做到的就是好用。同类产品中，比竞争对手好一倍，你就可能存活下来，如果能做到好用十倍呢，一百倍呢，基本上就无敌了。&lt;/p&gt;&lt;p&gt;除了有用，好用，一个好的产品还应该有趣，有品位，有灵魂。iPhone、微信应该属于这一类的产品。关于产品的灵魂，我常常举 Smartisan OS 的一个例子。当系统锁屏的时候，锁屏壁纸下部的「显示时间、电话短信和相机的快捷方式」其实是一直在呼吸起伏的，频率大致为1s一次，这个功能是需要用户发现的。当第一次感受到了这个功能的时候，我大惊失色，对自己手里的硬件刮目相看，原来这部手机是有生命的！&lt;/p&gt;&lt;p&gt;一个优秀的技术团队就是能够做出这种好产品的团队！&lt;/p&gt;&lt;p&gt;2、微信目前在大家的生活中不可获缺，它是一款优秀的产品，也是信息传播的媒介和渠道；你作为一个内容生产者，在微信的公众平台上发表内容，与经过出版社而出版一本图书相比，能否谈谈二者的不同之处？&lt;/p&gt;&lt;p&gt;微信公众号是一种即时的阅读体验，你可以在微信上创造一个烟熏火燎的小酒馆，烛光闪烁的咖啡屋，或者书香四溢的阅览室。读者人来人往，人去楼空，很多内容就沉下去了，无论是多好的文章，10万+的阅读人数，几天之后就没人再看了。很多非常有价值的，尤其是那些不追逐热点的深度思考产生的内容就会像石头一样沉入深深的静水河底，再也没人翻看。&lt;/p&gt;&lt;p&gt;图书就是把这些优质的内容捞出来，以另一种形式呈现给读者。而书的受众和微信文章的受众不会完全重叠，喜欢深度阅读和思考的读者，可能更喜欢捧着一本书读一个下午。好的内容会反复阅读和揣摩，微信就很难让人做到这一点，因为你常常会被打扰和打断。&lt;/p&gt;&lt;p&gt;我写了两本书，大体上也是这个考虑吧。&lt;/p&gt;&lt;p&gt;3、现在大家都容易浮躁，一些人表示“读书无用”，很多人读书都是带着功利性的目的，为了职场晋升，为了学习一项技能，为了通过面试，为了丰富谈资……当然也仍然有人坚持着对知识的渴求，以及单纯的精神乐趣。你觉得读书，除了一份「情怀」（开个玩笑:-P），还应该追求什么？&lt;/p&gt;&lt;p&gt;书差不多是这个世界上最好的几件事情之一吧。图书记录了每个时代人们的情感，这些对情感和生活经历的记录，形成了一个民族留存到今天的最大依据。所以，除了工具书、科技书，我建议大家更多的去读人文、历史、小说、杂文、诗歌，你会获得更充分的生长，因为你更好的认识了这个世界。&lt;/p&gt;&lt;p&gt;什么文字是好文字呢？王小波的文字就是好文字！简洁有力智慧，仿佛「钻石着光，春花带露，灿烂无比」，同时兼具黑色幽默，读来回味悠长。很多人不喜欢王小波的作品，没关系，找到你喜欢的伟大作家，读他们的作品，体味昆仑山巅一株草的孤独和成长。&lt;/p&gt;&lt;p&gt;青峰之巅，山外之山！&lt;/p&gt;&lt;p&gt;4、谈到“价值”自然少不了提经济价值——“物质”和“钱”。前一阵子，一篇关于“前妻”如何从底层草根学编程而后走上光明前途的文章非常火爆，作者仅凭一篇文章获得的打赏颇丰。你的微信公众号运营的那么好，可能出书在一些人眼里是一件“性价比”很低的事情。（这个问题可能比较功利性）除了经常督促你写作的海玲老师，你费时费神地写书，动力何在？&lt;/p&gt;&lt;p&gt;一个优秀的原创微信公众号获得经济回报的来源是很多的，赞赏算一种，但是只占其中一小部分。无论是什么方式，写作者输出了优质内容，获得相应的回报，我觉得这是天经地义的事情。所以，如果你看到喜欢的作者发了一个推荐或一篇广告应该开心才对，因为他有动力去输出更多的内容了。&lt;/p&gt;&lt;p&gt;关于写书的动力，其实我在第二个问题里已经提到了，希望一些看起来优质的内容，以另一种形式呈现给读者。另外，印了作者名字的纸书，对于作者本身来说，也是一种存留和念想。至于性价比，不会去考虑太多了。&lt;/p&gt;&lt;p&gt;但行好事，莫问前程。&lt;/p&gt;&lt;p&gt;5、不同的事物对不同的人而言，有不同的价值。有些价值显而易见，容易衡量，而有些抽象的价值隐含其中，不易通过语言简单描述出来，这时大家会说这个事物是「无价」的，比如文化或精神。这本新书《MacTalk·跨越边界》对你来说有哪些价值所在？对于读者来说，又有哪些价值值得挖掘？&lt;/p&gt;&lt;p&gt;跨越边界这本书本质上就是一个随笔文集，虽然勉强划分了五个主题，但它还是一本杂文集，就像一盘清脆的萝卜拼盘，好吃，有营养，但不是浪潮之巅那样的宏大著作。&lt;/p&gt;&lt;p&gt;书里有我对生活的思考，对边界的探寻，有我身边的人和他们的故事，其中的一些文字还记录了这个时代的某个剪影，或某段情感。在有趣之余，我在书中又融入了一点力量，比第一本更加沉稳，力图追求简洁有力，朴实无华。书中的文字对我意义非凡，它们能够帮助我探索、梳理和记录生活。希望你在阅读这本书的时候，也能获得这样的乐趣和感受。&lt;/p&gt;&lt;p&gt;可以说这本书适合互联网里各个领域的人群阅读，就连三表龙门阵里的三表也不用担心看不懂书中的内容了。至于看完有什么价值，任由读者评说吧。&lt;/p&gt;&lt;p&gt;&lt;img src="https://pic3.zhimg.com/735fcc8fc7684be5a408215ecd7f992e_b.jpg" data-rawwidth="1280" data-rawheight="1280" class="origin_image zh-lightbox-thumb" width="1280" data-original="https://pic3.zhimg.com/735fcc8fc7684be5a408215ecd7f992e_r.jpg"&gt;微信扫描关注原创文章。&lt;/p&gt;</description><pubDate>2015-12-17T22:33:21+08:00</pubDate></item><item><title>影响了我二十年的三个原则</title><link>http://zhuanlan.zhihu.com/p/20395484</link><description>&lt;p&gt;年纪大的好处就是，有时候工作久了累了，会有年轻人逗你穷开心：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;池哥，你说说你是怎么变得这么牛的？&lt;/p&gt;&lt;p&gt;怎么可能，世上牛人多了去了，轮不到我。我只是喜欢写点东西而已。&lt;/p&gt;&lt;p&gt;也是，我觉得你并没有变得更牛，你是本来就这么牛，只是有个渠道让别人知道了而已。知乎里不是有个问题嘛，为什么在学校里同学们看起来差不多，走进工作岗位几年后差这么大？真相就是「你搞错了，你们本来差距就这么大，不过在学校的环境里看不太出来而已」。&lt;br&gt;&lt;/p&gt;&lt;p&gt;给我滚！&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;我当然不是牛人，不过值得庆幸的是我一直在自我成长，对于我们这些普通人来说，有进步就是希望。行走江湖，每个人都有自己的处事原则，有些原则只适合自己，有些可能普适大众，有些是好原则，有些是坏习惯，如人饮水，冷暖自知。我当然也有自己的原则，甚至其中的几个原则在我的前半生发挥了极为重要的作用，这几个原则就像古老的魔法歌谣，五年、十年、二十年的给我带来潜移默化的改变。这些原则又是如此的简单，以至于大部分人都知道并在轻易的将它们忽略了。&lt;/p&gt;&lt;h4&gt;一、闭环原则。&lt;/h4&gt;&lt;p&gt;由于个性使然，这个原则我工作没多久就发现了。如果你能够在完成自己工作任务的过程中，及时的把自己的工作成果反馈给你的 Leader，总能够带来各种惊喜。你的反馈或许提升了团队效率，也可能改变了产品决策，同时你会因为持续的反馈获得更为重要的任务和职责，因为你是一个能够让事情形成闭环的家伙，一个脱离了低级趣味的人，一个靠谱的人，&lt;/p&gt;&lt;p&gt;闭环和反馈可以从控制论说起，但是我不懂控制论，所以只能从简单说起，闭环就是让事情有始有终，任务从启动到结束，形成一个完整的链条。CTO 给你安排了一个技术预研任务，你应该定期反馈的工作包括：技术选型，遇到的困难，解决的办法，最终的预研结果等等。任务的最后，你应该提交一份技术预研报告，并针对这样一个结果发起一次评审。可惜的是，很多技术人员只对技术有热情，对反馈毫无概念。接到任务之后默默预研，完成之后默默等待下一个任务的降临，只要没人问，就一直牙关紧咬，目光坚毅，打死也不说。如果分配任务的人疏忽了，这个任务可能无疾而终了。&lt;/p&gt;&lt;p&gt;写到这就有人会说了，很多项目管理工具会通过各种方式强制你进行反馈，比如「夺命追魂钉」，谁用谁知道。但是，从一个独立的自我来说，具备这种反馈意识，迈出主动让事情闭环的第一步，你会发现，世界完全不同了。&lt;/p&gt;&lt;p&gt;这种闭环不仅仅针对人，还包括事。产品发布了，你要去看产品和用户的统计数据；做了市场活动，要有转化率和市场份额分析；发了篇文章，要去看看评论和赞赏率。有了反馈，我们才能把事情做的更好，否则就会演化成纯粹为了做事而做事。&lt;/p&gt;&lt;p&gt;这个道理就像「运动和良好的饮食可以帮助我们保持健康和身材」一样，几乎所有人都知道，但少有人做到。&lt;/p&gt;&lt;h4&gt;二、谁难受谁推进原则&lt;/h4&gt;&lt;p&gt;这个原则我是工作了一段时间之后才悟出来的，掌握了之后，天下再没有难以合作的团队，无论在哪个公司，我的团队都是最好协作对象。那么啥叫「谁难受谁推进原则」呢？&lt;/p&gt;&lt;p&gt;无论是谁，工作中总会涉及到大量的协作任务。A 依赖 B，B 依赖 C， C 依赖 A，好了，看起来这是个死循环，到底该谁去推进这件事呢？有的领导会再设置一个 D，去协调 A B C 的工作，结果 A B C D 攒一桌开始打麻将了。真的需要那么多的协调者么？并不是！&lt;/p&gt;&lt;p&gt;在跨部门或多组协作的时候，到底谁去推进工作，谁在观望等待？这里面有个简单的处理原则，如果这件事不做，你自己的部门或组会非常难受，那么就毫不犹豫的去主动推进这件事。&lt;/p&gt;&lt;p&gt;发布会临近，如果设计师没有提供设计图，产品经理没有提供产品规格，谁最着急？程序员们！这件事的最终结果是发布会期间必须上线新网站，设计可以慢一点，需求可以缓一缓，但后果是程序员们进行技术实现的时间会越来越少，程序员才是最难受的！所以技术组必须不断的催促设计师提供最终的设计稿，产品经理尽快提供参数规格，最终网站才能顺利的上线。&lt;/p&gt;&lt;p&gt;如果技术等设计、设计等产品、产品等技术，是做不好事情的。让美好的事情持续发生，这一点说起来容易，做到真的很难！&lt;/p&gt;&lt;h4&gt;三、Think bigger&lt;/h4&gt;&lt;p&gt;总是从更大的层面考虑问题，这一点是我最近几年才慢慢认识到的。现在我在做一件事情的时候，往往会下意识的从更大的范围来考虑它。Think bigger！无论是什么，从更大的尺度去考虑，看看它会变成什么样。&lt;/p&gt;&lt;p&gt;如果你的产品已经比同行好一倍了，如果能够做到好十倍，一百倍，会是什么效果，能做到吗？你运营了一个公众号，每天一篇原创，写了两个月了，似乎没什么效果。那么拉长时间的维度，如果你坚持写，写了一年，写了十年，会是什么局面？&lt;/p&gt;&lt;p&gt;之前给部分读者发过一条回复，介绍万试万灵的学习秘诀，其实很简单：定好一个学习目标，无论什么情况，每天花费一个小时在这个领域，半年后看效果。十年呢？&lt;/p&gt;&lt;p&gt;很多时候，当你用一百倍的尺度思考了某个问题、产品和行为之后，你会发现生活的真正面目，有时候你会被自己吓一跳的。&lt;/p&gt;&lt;p&gt;这些原则对我当然意义非凡，对你们有什么意义呢？也许会有一点。&lt;/p&gt;&lt;p&gt;——————————&lt;/p&gt;&lt;p&gt;说个和李笑来老师相关的事情，我是笑来老师的铁杆读者，他的作品《把时间当做朋友》天下尽知，我反反复复读过多遍。我们相识于推特，那一年他三十多，我也三十多，于是开始邮件互通有无，协作写作。一晃这么多年过去了，真正网下相识，居然是在今年。&lt;/p&gt;&lt;p&gt;前些日子相见，聊了很多成长、投资、微信、写作和社区的事情，他现在主要的工作就是投资和写作，并且帮助大家建立连接。他说，我们只是这么写不是个「Think bigger」的事情，何不做个社群，帮助新人一起成长。于是做了这样一个尝试，共同建立一个收费群，群名「攻城狮之路」，年费1024元，我和笑来老师会利用自己的资源为群内的成员建立连接，提供各种机会，或者写一些不同的内容，同时邀请各个领域的牛人定期进行线上分享。为了把事情做的稳妥一些，我们简单定了一下群规：&lt;/p&gt;&lt;p&gt;1、加入群的费用为 1024 元/年；&lt;br&gt;2、入群后的冷静期为 7 天，7天内随时退群退费。冷静期过后，退群不退费；&lt;br&gt;3、入群后把昵称改为真实姓名；&lt;br&gt;4、群内不闲聊，大家都时间宝贵；&lt;br&gt;5、群内允许讨论（以让自己更明白为目标），但不允许争论（以说服、打败对方为目标）；绝不允许出现相互谩骂；相互攻击者，无仲裁，双方都将被直接移出；&lt;br&gt;6、群内不许发红包，不许发广告；&lt;br&gt;7、鼓励相互认识，鼓励私聊。&lt;br&gt;8、群规将在运营过程中逐步完善。&lt;/p&gt;&lt;img src="https://pic1.zhimg.com/49cfc7fe5eb5ddc01bd202fdc20883d0_b.jpg" data-rawwidth="1110" data-rawheight="1539" class="origin_image zh-lightbox-thumb" width="1110" data-original="https://pic1.zhimg.com/49cfc7fe5eb5ddc01bd202fdc20883d0_r.jpg"&gt;&lt;p&gt;请长按以上二维码图片，保存至相册，然后用支付宝识别，付费入群。&lt;/p&gt;&lt;p&gt;群成员目前已经超过300人，下周启动第一次线上分享。&lt;/p&gt;</description><pubDate>2015-12-06T12:37:53+08:00</pubDate></item><item><title>1024，程序员中枪的日子</title><link>http://zhuanlan.zhihu.com/p/20294131</link><description>&lt;p&gt;昨天是10月24日，为程序员写了一篇文章，同步到知乎专栏。&lt;/p&gt;&lt;p&gt;————————————&lt;/p&gt;&lt;p&gt;平时很少周五周六发文章，根据大数据统计（其实就是看看我的阅读量），这两天人们都无心阅读，单身的程序员都去找女盆友了，有女朋友的程序员又在编程，谁会打开微信看文章呢？不过今天是10月24日，不知道什么时候这个毫无意义的日子被中国的程序员定义成了中国程序员的节日。于是微信后台很多读者来问：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;卖桃君可曾为程序员写了一些什么？&lt;br&gt;写过很多了呀！&lt;br&gt;那今天再写一点呗。&lt;br&gt;……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;那就再写一点，如果阅读量不好的话，以后还是「周六一图」更好。&lt;/p&gt;&lt;p&gt;学过计算机科学的人差不多都知道，1024Byte 等于 1KB，1024KB 等于 1MB，1024MB 等于 1GB，1024GB 等于 1TB，所以1024这个数字对程序员来说是一个常常要用到的计量单位，那10月24日被大家无中生有的设为程序员节，也就不足为奇了。但是1024在国内的流行，并不始于二进制。&lt;/p&gt;&lt;p&gt;我最早知道1024这个流行语是在草榴社区，一个非常有格调的、管理严格的社区。当年我作为一个新人初入草榴的时候，经常发现大家在回复中留言「1024」，于是百思不得其解，问前辈得来的答案是：1024M = 1G，而1G是「一级的」谐音，回复1024的意思就是「一级棒」。后来我才知道这个前辈也是个半瓶子醋，真实的原因是，在草榴社区，每隔1024秒才能回复一个帖子，在1024秒内回复的内容会统统显示成为1024。很多新手看到帖子激动不已，不管不顾1024的规定不停的回复新内容以表达鸡冻的心情，于是你就会看到很多1024的回帖，久而久之，1024就成了「支持」和「顶」的意思。&lt;/p&gt;&lt;p&gt;随后1024就迅速在程序员中流行开来，国内很多技术论坛都会见到1024的回帖。所以现在想一想，用1024作为程序员的节日，其实也是挺诡异的，我怎么觉得我们又中枪了呢？&lt;/p&gt;&lt;p&gt;今天从朋友圈看了不少文章，无一不是调侃程序员的，比如：程序员为什么提到工资时会说 K，因为1K 比1000多24元（我们有那么穷吗？）。比如，一个女生让他的程序员丈夫去附近的商店买些面包，如果有鸡蛋的话，就买6个回来。丈夫买了6个面包回来，他的妻子大吃一惊：你为什么买了6个面包？！程序员丈夫回答：因为有鸡蛋。&lt;/p&gt;&lt;p&gt;还有这样的：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;程序员问禅师：「大师，我身体健康，万事如意，为何偏偏找不到女朋友呢？」&lt;br&gt;禅师浅笑答曰：「原因很简单，不过你需先写一段java代码。」&lt;br&gt;青年略一沉吟，写完了。&lt;br&gt;再写一段Python，写完了。&lt;br&gt;再写一段Objective C，写完了。&lt;br&gt;再写一段Javascript，写完了。&lt;br&gt;再写一段世界上最好的语言 PHP 吧，写完了。&lt;br&gt;你看，这就是原因！&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;我们程序员真的有那么孤独、冷酷和不通世事吗？哦……我们是的，如果不读 MacTalk 的话：）&lt;/p&gt;&lt;p&gt;大部分程序员选择编程这个行业，是因为与面对很多人进行喋喋不休的交流相比，我们更喜欢和机器打交道。对于喜爱编程的人来说，编程是世界上最有趣的事，比打牌下棋看电影玩游戏有趣得多！在编程的世界里，你可以自己制订游戏规则，制定什么样的规则，也就会随之出现与此规则相符合的结果。对于优秀的编程者来说，在电脑世界中，你就是创世者，你对所发生的一切拥有最终的控制。如果你功力深厚，你可以是上帝――在某个较小的层面上。&lt;/p&gt;&lt;p&gt;所以，无论我们在编程上投入多少时间都是无可厚非的，但是，永远要记得，编程不是生活的全部。不要永远去阅读「Unix 环境高级编程」这样厚厚的技术图书，我们该抬起头去观察这个世界，探寻我们的爱好和潜力，游历，读书，观察人文，回溯历史，看更高的山，见更多的人，体验更多的情感。历史上那些优秀的程序员无不具有开阔的视野，伟大的创见和丰富多彩的人生，包括盖茨、沃兹、艾伦、林纳斯、拉里·佩奇、谢尔盖·布林、扎克伯格等等。&lt;/p&gt;&lt;p&gt;1024，不是生活的全部，编程也不是！&lt;/p&gt;&lt;p&gt;之前在 MacTalk 里我写了很多程序员相关的文章，今天借程序员节日，整理几篇送给大家：&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMjM5ODQ2MDIyMA%3D%3D%26mid%3D208435700%26idx%3D1%26sn%3D7c3cad4fcf2fa37881cffd5a30eaa9e1%26scene%3D21%23wechat_redirect" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;程序员很穷&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMjM5ODQ2MDIyMA%3D%3D%26mid%3D206342965%26idx%3D1%26sn%3Debabbcb28d9a5331d77f95f7c49d1e0c%26scene%3D21%23wechat_redirect" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;千万别惹程序员&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMjM5ODQ2MDIyMA%3D%3D%26mid%3D208142478%26idx%3D1%26sn%3D7251287d476932cc67ca8034c92abceb%26scene%3D21%23wechat_redirect" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;产品经理和程序员的爱恨情仇&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMjM5ODQ2MDIyMA%3D%3D%26mid%3D201504402%26idx%3D1%26sn%3D05d2b2b974371f6ee6601769028d38a1%26scene%3D21%23wechat_redirect" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;程序员真正的价值&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMjM5ODQ2MDIyMA%3D%3D%26mid%3D201251805%26idx%3D1%26sn%3Dc92e526daebe4db963b5a876f7853227%26scene%3D21%23wechat_redirect" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;当程序员老去&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;另外，1024还是著名计算机科学家约翰·麦卡锡的忌日。麦卡锡在1958年发明了著名的 Lisp 语言（该语言至今仍在人工智能领域广泛使用，号称程序语言的鼻祖），并于1960年将其设计发表在《美国计算机学会通讯》上。他因在人工智能领域的贡献而在1971年获得计算机界的最高奖项图灵奖，被称为人工智能之父。他在1991年还获得了美国国家科学奖章(National Medal of Science Award)，2003年获得富兰克林学院奖章。&lt;/p&gt;&lt;p&gt;2011年10月24日晚上，约翰·麦卡锡与世长辞，享年84岁。怀念这位计算机先驱！&lt;/p&gt;&lt;p&gt;&lt;img src="https://pic2.zhimg.com/0ffe7f61ac4c85c70b5cc26542306515_b.jpg" data-rawwidth="430" data-rawheight="430" class="origin_image zh-lightbox-thumb" width="430" data-original="https://pic2.zhimg.com/0ffe7f61ac4c85c70b5cc26542306515_r.jpg"&gt;文章首发于微信平台 MacTalk，微信扫描或搜索池建强，关注并获得及时推送。&lt;/p&gt;</description><pubDate>2015-10-25T12:54:46+08:00</pubDate></item><item><title>人生苦短，我用 Mac</title><link>http://zhuanlan.zhihu.com/p/20278296</link><description>&lt;p&gt;最近写了几期关于 OS X/iOS 的文章，微信后台不断有读者询问选购 Mac 的问题，不能一一答复，还是写篇文章吧。其实两年前曾经写过一篇「选择 Mac」的檄文，被使用 Mac 或即将使用 Mac 的人民群众广为传颂，如今时过境迁，也该更新一下了。&lt;/p&gt;&lt;p&gt;苹果目前 Mac 系列的产品线有 MacBook，MacBook Air，MacBook Pro，iMac，Mac Pro，Mac mini，一共六种武器，和之前相比，多了一种！&lt;/p&gt;&lt;h4&gt;MacBook&lt;/h4&gt;&lt;p&gt;首先来说说 MacBook，或者叫 New MacBook，这是苹果在2015年推出的全新品类 Mac，采用了全键盘、Force Touch、无风扇和全新的电池设计，苹果使出浑身解数，几乎把所有的新技术都用在了这款至轻至薄的笔记本上，号称轻于时代，先于时代，开启笔记本未来的先河。MacBook 是我目前在用的笔记本之一。&lt;/p&gt;&lt;p&gt;看到 MacBook，最容易让我想起的兵器是「小李飞刀」，纤薄，锐利，绚丽夺目，对电子产品爱好者有致命的吸引力。这款 MacBook 12英寸，键盘和屏幕宽度一致，显示分辨率可以达到1440 x 900（就是人眼看起来的分辨率），视网膜屏纤毫毕现，多彩多姿。这款笔记本的重量是920克，差不多是两个 iPad Air 2 的重量，作为一款笔记本来说，已经是薄到了极致，拿在手中如若无物。&lt;/p&gt;&lt;p&gt;毫无疑问，MacBook 的工作场景是移动办公。如果你的工作性质会让自己不停的移动，奔波于办公区之间，飞行在九天之上，穿梭于高铁之中，那么 MacBook 一定是你的最佳选择。清晰的屏幕、全键盘和 Force Touch 触控板会让你的移动办公效率非凡。不过，如果你想用 MacBook 来编写大型程序，完成动画或视频处理，编写极其庞大的 Keynote，那这把「小李飞刀」就有些力不从心了，事实上你也很难想象去用小李飞刀杀猪宰牛，毕竟硬件配置在那里摆着。一般性质的娱乐、协作、写作、阅读、编程等，还是毫无压力的。另外，MacBook 的无风扇设计和续航等特性与官网宣传的并无二致，发热、静音和使用时长都控制的十分精准。&lt;/p&gt;&lt;p&gt;至于被多人诟病的碟式设计键盘，键程确实偏短。当你的指尖在 MacBook 上飞舞，你期待找到机械键盘的快感和清脆的敲击声。作为过来人，我只能告诉你，放弃这个不切实际的想法吧，这么纤薄的机身上不可能再增加多余的键程了，你倒是可以想象一下手指在砖头上敲击的美妙场景，相信我，敲着敲着也就习惯了。&lt;/p&gt;&lt;p&gt;做为一个技术工作者，这款笔记本不可能成为我的工作主力，但工作中为辅，出差时为主，倒也是不错的选择和补充。至于你选不选这款产品，那要看看你的工作场景和钱袋里的银子了。&lt;/p&gt;&lt;h4&gt;MacBook Air&lt;/h4&gt;&lt;p&gt;再来说说 MacBook Air，Air 系列是介于轻薄和效率之间的产品，如果追求轻薄，可选11英寸系列，11英寸的键盘宽度和13英寸差不多，13英寸只是增加了屏幕高度，所以在输入性上二者并无太大区别，但在移动方面11寸比13寸轻了270克。Air系列的续航能力和 MacBook 差不多，11英寸款续航时间长达 9 小时，13英寸的可以使用12小时。全系列采用了 SSD硬盘，性能无需担心，打开程序文档基本秒开，所以不仅是商务人士和产品经理，程序员一样可以选择 Air，你可以随时随地拿出 11寸的 Air 进行编程、写作、浏览，无需担心热量、重量和续航。同时，如果需要使用大屏编程，接上蓝牙键盘、鼠标和外界显示器，即可打造一台强劲的台式电脑。&lt;/p&gt;&lt;p&gt;目前 MBA 全系列依然不支持Retina 显示屏，这也是我从来没有使用过 Air 系列电脑的原因之一。&lt;/p&gt;&lt;h4&gt;MacBook Pro&lt;/h4&gt;&lt;p&gt;MacBook Pro是 Mac 系列里的中坚力量，可以说是兵器谱中的倚天神剑，并不厚重，但威力十足，深得广大人民群众的喜爱。如果你想追求更强的性能、更好的体验、更清晰的画面，那么我推荐你购买配备了 Retina 显示屏的 MBP15，MBP 系列里的顶配，也就是传说中的 RMBP15，笔记本中的跑车，跑车里的战斗机！如果你选择了足够大的内存和硬盘，可谓一本在手走遍天下都有，画面之清晰性能之强悍让你恨不得贫贱不能移威武不能屈，你可以编程可以作画可以视频可以阅读可以运行各种大型程序，你还可以建三个虚拟机并且同时启动，然后搭一个夹杂着私有云和公有云的混合云，什么 Openresty、LVS、Docker、Hadoop、NoSql……能用的都给丫用上，当客户问你们的私有云有 demo 吗，你沉默着指着自己永恒的双肩挎，都在这里，无比的高端大气！&lt;/p&gt;&lt;p&gt;最新版本的 RMBP15 已经配置了Force Touch 触控板、10小时左右的电池使用时间和更快的闪存。总之，澎湃动力，尽在指尖。&lt;/p&gt;&lt;p&gt;RMBP15 的缺点是价位较高，稍重，虽然已经变得轻薄了，但依然不适合手提斜跨奔波街头。退而求其次是 RMBP13，屏幕、性能、CPU、重量、价位同步降级，也算个上选。旧版的 MBP 已经找不到了，我家里还保存了一台早些年的Macbook Pro，留作纪念。&lt;/p&gt;&lt;p&gt;目前 MacBook Pro 15 是我在用的主力笔记本。&lt;/p&gt;&lt;h4&gt;iMac&lt;/h4&gt;&lt;p&gt;iMac 是 Mac 的一体机，外观看上去就是一台帅到逆天的显示器，其中低调隐藏了主机和各种外设，屏幕分为21.5英寸和27英寸。和 iMac 首次谋面时，我放佛感到面前摆了一柄关老爷的青龙偃月刀，刀光闪烁，华丽无匹，眩人眼目。目前苹果为21.5寸和27寸的 iMac 分别配备了 Retina 4k 屏和 5k 屏，如此宽大的屏幕再加上细腻的显示效果，那简直是设计人员的天堂。关于苹果不断推出各种尺寸的视网膜屏和对色彩的追逐上，我的感觉是，每次以为已经到达巅峰的时候，丫都会蹦得更高，丫就是显示屏领域的迈克尔·乔丹啊！&lt;/p&gt;&lt;p&gt;目前 iMac 也可以选配 SSD 闪存作为存储介质了，一款定制的顶配 iMac 27 大概要花掉3万多元人民币。土豪们，颤抖吧，你们的银子有的放矢了。现在知道我之前为什么会写出那一篇「&lt;a href="http://zhuanlan.zhihu.com/mactalk/20171377" class="internal"&gt;程序员很穷 - MacTalk - 知乎专栏&lt;/a&gt;」了吧，别问我是怎么知道的……&lt;/p&gt;&lt;p&gt;购买 iMac 21 还是 27，我觉得主要看你自己的书房和书桌大小，在苹果店看起来不算什么的 iMac27，放到自己书房，就特么一个字，大！有了 iMac 27，神马双显示器，什么9个 Space 都弱爆了，你只要把自己的窗口平铺开放到屏幕上就行了，还是那个字，大！如果是穷人家的孩子，第一次用 iMac 会眩晕的，你会说妈妈我再也不用窗口最大化了，为什么 Split Viewer 只能进行两个窗口的分屏呢……&lt;/p&gt;&lt;p&gt;在工作室使用 iMac，绝对动力澎湃，艳丽多姿，实在是工作、泡妞和装逼之利器，如果再配合一个 12寸的 MacBook，几乎是完美的选择和搭配。这样有品位的程序员，即使你浑身都是优衣库，哪个姑娘会不动心呢？&lt;/p&gt;&lt;h4&gt;Mac Pro&lt;/h4&gt;&lt;p&gt;Mac Pro 是 Mac 系列中动力最为强劲的机型，可以说是兵器谱中的玄铁重剑，但这货是桶装的……它那忧郁的光泽，浑圆的腰身，神乎其技的性能和存储，还有那基于 Xeon E5芯片组的12核 CPU，都掩饰不住 Mac Pro 的出众，它可能代表了专业台式电脑的未来……定制顶配，5万元起，感受一下。&lt;/p&gt;&lt;p&gt;把 Mac Pro 吹成这样，其实现实生活中我没见过几个用这货的，只有一个那就是传说中的大别 @ibuick。他为 Mac Pro 定制了一款双肩夸，出行时就把那个桶状的 Mac Pro 塞到包里，然后再带上一块从 RMBP 上拆下来的 Retina 的显示屏。用的时候拿出「全家桶」，用排线接上显示屏，拿出蓝牙键盘，旁若无人般噼噼啪啪写起程序来。&lt;/p&gt;&lt;p&gt;惊为天人！&lt;/p&gt;&lt;h4&gt;Mac mini&lt;/h4&gt;&lt;p&gt;最后介绍一下 Mac mini。Mac mini 分为普通版和 Server 版，操作系统也分为 OS X 和 OS X Server，和普通 PC 不同，mini 就是一个铝合金的漂亮盒子，除了一堆接口啥都没有，但是价位低廉，性能强劲，适合学生或在经济性上考虑较多的用户，配上外置键盘、鼠标和显示器，应该是个Mac很好的解决方案。&lt;/p&gt;&lt;p&gt;人生苦短，我用 Mac！&lt;/p&gt;&lt;p&gt;&lt;img src="https://pic2.zhimg.com/0ffe7f61ac4c85c70b5cc26542306515_b.jpg" data-rawwidth="430" data-rawheight="430" class="origin_image zh-lightbox-thumb" width="430" data-original="https://pic2.zhimg.com/0ffe7f61ac4c85c70b5cc26542306515_r.jpg"&gt;文章来自 MacTalk，微信扫描关注，谢谢阅读。&lt;/p&gt;</description><pubDate>2015-10-17T23:14:11+08:00</pubDate></item><item><title>iOS 9，你没在意的那些功能</title><link>http://zhuanlan.zhihu.com/p/20232778</link><description>&lt;p&gt;上一篇文章 &lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/%3Fp%3D1343" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;iOS 9 的字体及其他&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; 主要介绍了 iOS 9 的新字体，推送之后引来了不少的评论和消息。可能是物以类聚的原因，大部分读者都和我一样，选择了喜欢这款新字体，这是好事。你经常使用的一个物件有了改变，而改变的特性又恰好是你喜欢的，还有比这更让人开心的事吗？当然有，比如这物件就是你设计的……&lt;/p&gt;&lt;p&gt;不开心的怎么办？一种是忍了，一种是放弃。比如 iOS 版的知乎改版之后，我实在难以忍受那个主题色彩，所以放弃了在 iOS 上使用知乎，好在 Android 版还保持了原貌。如果你无法放弃 iOS，那就只能忍受自己不喜欢的字体了。当然，不愿意也别勉强自己，坚果和 T1，同样是是很好的选择，另外，我们还有 T2 没出呢……&lt;/p&gt;&lt;p&gt;在个人审美这种很主观上的问题上，虽然仁者见仁，智者见智，但大部分情况下，大部分人还是能保持一致的。比如我和朱萧木都认为金城武是这个星球上最帅的男人，但是萧木竟然以为在床头挂上金城武的照片自己未来就会越来越像他这种事，我就难以认同了，好在事情也没有像萧木想象的方向发展。我告诉他，这并不是程序出了 bug，而是事情本来就是这个样子。虽然萧木很失望，但我也得这么说。&lt;/p&gt;&lt;p&gt;扯远了，今天主要谈谈 iOS 9 里一些有趣的功能。这一次大版本的升级，主要涉及了字体、原生 App 备忘录、地图、邮件、Siri 的改进，iPad 另增加了 Split Over、Split View 和画中画的功能，想全面体验这些功能，你得有个 iPad Air 2 或 iPad Pro。至于传说中新增加的原生 App 「News 」就不用想了，在这个千秋万代一统江湖的江湖里，看新闻，还是用网易吧。&lt;/p&gt;&lt;p&gt;除此之外，iOS 9 的升级还带来了一些普通用户很少注意的功能改进，在某种程度上，这种改进同样意义非凡。&lt;/p&gt;&lt;h4&gt;应用内搜索&lt;/h4&gt;&lt;p&gt;什么是应用内搜索？应用内搜索其实就是移动互联网搜索，通过某个入口，可以检索整个移动 App 的内容。在移动互联网搜索之前，整个互联网的搜索入口是 Google，Google 通过 Page Rank 算法一举奠定了搜索领域带头大哥的江湖地位，浏览器就是搜索的唯一入口。时光荏苒，岁月如梭，转眼就到了移动互联网时代，我们到了另一个江湖。在这个江湖里，浏览器只是和上百万 App 平级的一个应用，它不再握有互联网入口的唯一金钥匙。应用内搜索呼之欲出。2014年11月我写了一篇「打破移动孤岛——应用内搜索」，主要介绍了一些搜索相关的技术和豌豆荚的应用内搜索，但是豌豆荚的体量不足以制定行业标准，Google 又是难言之隐，一言难尽，所以我们只能指望 Apple 和 iOS。我在那篇文章的最后写到：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;在 iOS 设备的任一屏幕中单指下滑，就可以使用 iOS 的 Spotlight 功能。你可以对原生应用进行「应用内检索」，例如日历、邮件、提醒事项、备忘录等等，这些是本地化检索，iOS 并没有索引其他 App 的应用内容，也没有提供接入方式和标准。在 iOS 8 里还可以可以对地图、维基百科、iTunes Store、App Store和 iBooks Store 等内容进行线上检索，很可惜的是，这些线上搜索功能目前还没有对国内用户开放。&lt;/p&gt;&lt;p&gt;可以看出，iOS 上的 Spotlight 都是在索引自家的东西，但是，App Store 作为最大的移动 App 分发渠道，我相信他们一定会做面向所有 App 的「应用内搜索」。为什么现在没做，可能是因为安全因素，也可能是标准问题，也可能只是在等一个合适的机会罢了，比如 iOS 9……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;iOS 9 并没有让我这个预言落空，在 SpotLight 里输入你想要检索的内容，已经不仅仅是本地化搜索了。你会在接入了 iOS 9 应用内搜索 API 的 App 中看到自己搜索内容，例如我搜索「人生元编程」，除了邮件、备忘录，还能在博客和豆瓣阅读中看到相关的内容，点击可以直接打开相关应用和条目。&lt;/p&gt;&lt;img src="https://pic3.zhimg.com/5403b09c3e688f4d6ecfa9d0afb00772_b.jpg" data-rawwidth="1242" data-rawheight="2208" class="origin_image zh-lightbox-thumb" width="1242" data-original="https://pic3.zhimg.com/5403b09c3e688f4d6ecfa9d0afb00772_r.jpg"&gt;&lt;p&gt;iOS 9 为应用内搜索提供了3种 API：&lt;/p&gt;&lt;p&gt;1、NSUserActivity，索引活动和应用状态；&lt;br&gt;2、Web Markup，在 Web 上镜像应用自己的内容，苹果的云服务会索引你的内容并展示给用户，这个特性最有趣的是，用户不需要将你的应用安装在手机上；&lt;br&gt;3、Core Spotlight，最重要的 API，为自己的应用建立索引内容，当用户进行搜索时，iOS 会根据你建立的索引去检索是否有合适的内容展示给用户。&lt;/p&gt;&lt;p&gt;iOS 9 的应用内搜索，无论是对个人还是开发者，都是非常有价值的入口，苹果作为 iOS 生态圈的构建者和维护者，应该更早建立这样的标准。对于内容 App 开发者来说，如果你还没有接入应用内搜索的计划，你已经 OUT 啦。&lt;/p&gt;&lt;h4&gt;设置内搜索&lt;/h4&gt;&lt;p&gt;打开原生应用「设置」，下拉，你会发现设置的顶部多了一个搜索框。随着设置里面的选项逐年增多，这个需求，人民群众已经呼吁了很多年。苹果这个公司很有意思，在大的领域往往有划时代的作品，比如多点触控、虚拟键盘、视网膜屏、Hand off、3D Touch 等。但在一些细节方面，总是有很多不尽如人意的地方，设置缺少搜索算一个，通讯录找人难算一个，电话防骚扰算一个，备忘录虽然增加了富文本、图片和涂鸦功能，但是你能想象吗？备忘录里的图片居然不能拖动改变位置，这一点锤子便签是做到了的。&lt;/p&gt;&lt;p&gt;有时候我就想，为什么苹果不把系统做得更人性化一点，细节上更好一点，那不就天下无敌了吗？有朋友提醒我，库克大爷没这么做，是因为他们已经天下无敌了啊……&lt;/p&gt;&lt;h4&gt;返回&lt;/h4&gt;&lt;p&gt;iOS 为 App 增加了一个面包屑导航的功能，当你从微博、微信、浏览器、App Store、通知等地方点击某个内链跳转到新的 App 的时候，这个新的 App 的顶部会有一个「面包屑」，叫做返回「XX」，你从浏览微信的界面跳过来的，就是返回微信，你从iBooks 的阅读界面跳过来的，就是返回 iBooks。iOS 9，让你找到了「回家」的路。&lt;/p&gt;&lt;p&gt;你在阅读的时候看到一条重要的通知，读，返回阅读状态，只需要一次点击，你们可以回想一下之前要几次点击和操作，有时候你在通知之间兜兜转转，甚至忘了自己之前要做的是什么。&lt;/p&gt;&lt;p&gt;这是一个非常有用和贴心的特性，勿忘初心！&lt;/p&gt;&lt;h4&gt;iCloud Drive&lt;/h4&gt;&lt;p&gt;iCloud Drive 在苹果的生态系统里已经存在了一段时间了，在 OS X 上是独立的文件系统，除了原生应用和使用了 iCloud Drive 的应用，你还可以像操作一个文件夹一样随意的往里面扔你需要在各个设备之间共享的文件，可惜的是，iOS 一直缺少 iCloud Drive 的独立应用。&lt;/p&gt;&lt;p&gt;这次苹果为 iOS 9 配置了原生 iCloud Drive 应用，打开 App，所有文件一目了然，由于 iCloud 相关的文件都采用了流式存储的模式，随用随取（最好挂个 VPN 哈）。其他应用也可以获取 iCloud Drive 的内容，比如发邮件可以从 iCloud Drive 中选取附件。&lt;/p&gt;&lt;p&gt;如果你是个纯粹的 Mac 和 iOS 用户，iCloud Drive 基本可以取代 Dropbox 了。&lt;/p&gt;&lt;p&gt;还有一些以前不常用的功能这次都得到了改进和增强，比如地图，增加了很多本地化的搜索内容，也接入了更多大中华区的数据。比如 Siri，确实变得更加智能了，你可以直接对她说：明天我到公司的时候提醒我……如果你在自己的联系人信息里设置了工作地点的话，等等。&lt;/p&gt;&lt;p&gt;如果你已经升级到了 iOS 9，慢慢体味。如果没有，建议升级，了解一些新的东西，保持你的好奇心，你会变得年轻一点。&lt;/p&gt;&lt;p&gt;现在的 iOS 和 Android 系统基本已经很难发生翻天覆地的变化了，我们很难指望某个版本突然有一天面目全非，用户也会不答应的，没有那个巨头愿意承担初次教育用户的风险。进步是渐进的，永不停止，直到下一次巨变来临。&lt;/p&gt;&lt;p&gt;&lt;img src="https://pic2.zhimg.com/0ffe7f61ac4c85c70b5cc26542306515_b.jpg" data-rawwidth="430" data-rawheight="430" class="origin_image zh-lightbox-thumb" width="430" data-original="https://pic2.zhimg.com/0ffe7f61ac4c85c70b5cc26542306515_r.jpg"&gt;文章来自微信平台 MacTalk，扫描关注。&lt;/p&gt;</description><pubDate>2015-09-23T11:10:59+08:00</pubDate></item><item><title>SmartFinder 众测招募</title><link>http://zhuanlan.zhihu.com/p/20186507</link><description>&lt;p&gt;看过锤子科技发布会都知道，老罗在会议中段介绍了一个叫做 SmartFinder 的软件，这就是我之前和读者提到的，我们的团队一直在研发的 Mac App。为什么一家安卓手机厂商要开发 Mac App 呢？原因我在之前的文章中介绍过了，有兴趣的读者可以再去读读这篇文章：&lt;/p&gt;&lt;p&gt;锤子科技为什么要开发 Mac App？&lt;/p&gt;&lt;p&gt;今天本来想和你们聊聊 Mac 开发的事情，但是，真的没有时间了，考虑到很多读者希望提前试用这款软件，所以，如果您是锤子手机的用户，也是 Mac 的用户，那么，可以参与这次「SmartFinder 众测」活动。&lt;/p&gt;&lt;p&gt;SmartFinder 是锤子科技第一款为 Mac 用户开发的软件。由于安卓系统和 Mac 连接时，传输和管理文件的方式都非常简陋，所以我们精心为您开发了 SmartFinder ，使您在 Mac 上也可以方便自如地管理您在坚果 / Smartisan 手机中的内容。 SmartFinder 按文件类型智能为您整理您手机中的照片、音乐和视频，你还可以通过它对手机中的内容进行编辑操作。&lt;/p&gt;&lt;p&gt;SmartFinder V1.0_beta 特性&lt;/p&gt;&lt;ul&gt;&lt;li&gt;按文件类型智能整理文件；&lt;/li&gt;&lt;li&gt;支持按 “全部图片”、“相机相照片”、“所有相册” 三种方式浏览手机中的照片，并支持图片在 Mac 和手机之间的导入和导出；&lt;/li&gt;&lt;li&gt;支持按 “歌曲”、“文件夹”、“专辑” 三种方式浏览手机中的音乐，并支持音乐在 Mac 和手机之间的导入和导出；&lt;/li&gt;&lt;li&gt;支持浏览手机中拍摄的视频和其他视频 APP 缓存和下载的视频，并支持视频在 Mac 和手机之间的导入和导出；&lt;/li&gt;&lt;li&gt;支持按文件目录方式浏览手机中的所有文件。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;我们的界面是这样的：&lt;/p&gt;&lt;img src="https://pic3.zhimg.com/50a308ff767004021e4057ea11953646_b.jpg" data-rawwidth="1618" data-rawheight="1011" class="origin_image zh-lightbox-thumb" width="1618" data-original="https://pic3.zhimg.com/50a308ff767004021e4057ea11953646_r.jpg"&gt;&lt;p&gt;这样的：&lt;/p&gt;&lt;img src="https://pic3.zhimg.com/7d414c1a4e12e0778b52a8d3d694cf2e_b.jpg" data-rawwidth="1618" data-rawheight="1011" class="origin_image zh-lightbox-thumb" width="1618" data-original="https://pic3.zhimg.com/7d414c1a4e12e0778b52a8d3d694cf2e_r.jpg"&gt;&lt;br&gt;&lt;p&gt;和这样的：&lt;/p&gt;&lt;img src="https://pic3.zhimg.com/3672927d9ee773a053c5775859075d76_b.jpg" data-rawwidth="1618" data-rawheight="1011" class="origin_image zh-lightbox-thumb" width="1618" data-original="https://pic3.zhimg.com/3672927d9ee773a053c5775859075d76_r.jpg"&gt;&lt;p&gt;可以说，这是一款 Mac 电脑上最为优雅和简洁的安卓手机助手软件。很多手机厂商因为各种原因忽略 Mac 用户，不愿意开发自己的「iTunes」，锤子科技会去做这样的事，另外，我们在 Mac 平台上要做的，远不止于此。&lt;/p&gt;&lt;p&gt;如果您填写的资料正常，我们会在一到两个工作日后为你发放众测版本。安装软件之后，打开 SmartFinder，根据提示接入手机，您就可以通过 SmartFinder 管理您的 T1手机或坚果手机了。&lt;/p&gt;&lt;p&gt;如果您的 Smartisan OS 版本是1.5的话，请根据提示在应用程序安装来源里打开「未知来源」。如果是2.x 系统，则无须这一操作。&lt;/p&gt;&lt;p&gt;您在使用过程中有任何问题，可以直接给 &lt;a href="mailto:sf@smartisan.com" data-title="sf@smartisan.com" class=""&gt;sf@smartisan.com&lt;/a&gt; 发邮件，也可以在论坛板块反馈：&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//bbs.smartisan.com/forum-135-1.html" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;SmartFinder-锤子科技官方论坛&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;点击阅读原文，申请众测，您也可以直接在电脑上访问：&lt;a href="https://link.zhihu.com/?target=http%3A//sfbeta.t.tt" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;sfbeta.t.tt&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;感谢您的参与，祝您用的开心！&lt;/p&gt;</description><pubDate>2015-08-27T21:37:26+08:00</pubDate></item><item><title>程序员很穷</title><link>http://zhuanlan.zhihu.com/p/20171377</link><description>&lt;p&gt;程序员很穷，他们要么是显得很穷，要么是真的很穷。&lt;/p&gt;&lt;p&gt;前几天一位做市场的同事跑过来问，池老师，我有一位朋友，快30了，想转行写程序，您觉得有戏吗？我看了看满目疮痍的他说，如果是你就没戏。&lt;/p&gt;&lt;p&gt;30多岁转行做程序员当然可行，毕竟历史上存在一些大器晚成的案例，这些经过渲染和修饰的案例给在时间长河中苦苦挣扎的人们带来些许希望的火光，但那毕竟是火光，一阵风来过，兴许就灭了。如果你真的热爱技术和编程，渴望通过自己的代码实现别人的想法，或自己的创意，为世界带来更美好的产品，那么任何时候学习编程都不晚，编程给你带来的好处绝不仅仅限于你的工作领域，关于这一点，你看看李笑来老师就可以了，有时候我觉得，他简直是个专业的程序员，兼产品经理。但是，如果你只是觉得程序员挣钱容易，那还是算了吧，因为程序员不轻松、不浪漫、不被人理解，也许，还很穷。&lt;/p&gt;&lt;p&gt;很多人羡慕程序员工作没几年就可以拿着看起来不错的薪水，但是，如果他们在未来的几年内技术水平没有突破性的提升，或者缺乏一点灵性和品味，那么可能在未来很长一段时间内，他们都会保持这个薪资水平，直到有一天，他们会接受，比自己小五岁或十岁的程序员，也拿到了和自己一样薪酬。不是经常说程序员年薪百万吗？是啊，那是行业里的顶级程序员，他们为了让自己的水准达到这样的要求，经常要付出十年以上刻苦努力和练习，初春，寒冬，清晨，深夜，当你们去欧洲浪的时候，当你们去卡拉 OK 唱的时候，他们都在不停的 Practice，Practice……&lt;/p&gt;&lt;p&gt;大部分程序员看起来都很穷，即使是极为成功的程序员，如果你没有看到他的豪华座驾，你也会觉得对面这个带着眼镜玩手机的人是个屌丝。程序员对外在的东西鲜有追逐，鞋子、衣服，穿着舒服就够了，所以你会看到熟悉的格子衫，灰T恤，大裤衩，夹角凉鞋和永远的双肩背包，那个包，几乎是程序员的一切……偶尔见个红色耐克T恤，上书「Just do it」，抬头一看，哦，原来是罗老师。&lt;/p&gt;&lt;p&gt;不过，你们一定不要被程序员们的表象迷惑，他们有时候消费起来非常可怕，下死手，与腐女逛街相比毫不逊色。大部分程序员虽然对衣服不感兴趣，但是对电子设备往往缺乏免疫力，女生会花掉2万元换来一个 LV 包，程序员会花掉2万元买一台配备了 Retina 5K 显示屏的 iMac，然后双方都认为对方疯了。&lt;/p&gt;&lt;p&gt;关于程序员的消费观，一般是这样形成的，你工作了两年，写了很多代码，伴随的是没日没夜的加班，产品上线了，产品下线了，团队出发了，团队解散了，然后你会感到疲惫，生活没有希望，这样的日子什么时候是个头啊！你看了看破旧的 ThinkPad，对自己说，要不要买个 Mac 试试？然后你就有了一个 Mac，你突然发现了一个新世界，充满阳光和雨露，原来操作系统可以设计成这样……于是你觉得每过一段时间就需要阳光和雨露。你开始购买正版软件，不管多贵。你开始学习移动开发，你发现你需要两部手机，因为 iOS 和 Android 平台都值得学习。于是你有了一部 iPhone 和一部 Smartisan T1，后来你又有了 iPad 和 Kindle，然后很多硬件和软件都升级了，你有了好几台 Mac，移动的，台式的，好几部手机、平板和电子阅读器，一代的，二代的，好几代的。你的女朋友很迷惑（如果你已经有了女朋友），她会问，你买那么多手机、电脑和其他乱七八糟的东西干嘛？不都一样用嘛。你觉得很难解释，就说：你看这个新款有指纹识别功能，还有这个，从这边划入，就可以进行分屏操作……然后你的女朋友白了你一眼，默默的用你的信用卡刷了一个 LV 的包。&lt;/p&gt;&lt;p&gt;事情还没有结束，Google Glasses 走了，Kinect Box 来了，Oculus VR 还在路上，无人机已经飞起来了。「嗯，听说喷气背包能让人飞起来？要不要试试」，「我身体不好，去跑步了」。跑步应该需要一套好的装备才不会受伤，于是你把自己装配的比专业马拉松选手还酷，另外，你似乎还需要一块 Apple Watch。如果这个最初玩 Mac 的程序员———你，竟然鬼使神差迷上了单反，那将是一场更大的灾难，据说一个徕卡相机要8万多元，镜头就不要再提起……&lt;/p&gt;&lt;p&gt;需求是没有止境的，这就和产品经理的需求一样。所以，程序员们虽然挣得不少，但他们花的也多啊。最终，他们还是很穷，至少是看起来很穷……&lt;/p&gt;&lt;p&gt;另外，程序员在心理上也很「穷」，大部分情况下，与行业内其他角色相比，程序员地位都不是最高的，待遇不是最好的，连加班都不是最多的。最惨的情况是：哦，程序员只是我们实现想法的工具！程序员很少一战成名，当年百度贴吧风头最劲的时候，人们只知道这个互联网产品是一个叫做李明远的年轻人做的，没人知道前端工程师是谁，后端架构师是谁，即使你通过一己之力完成的技术架构抗住了每天数以亿计的流量，那又怎么样呢，没有用户知道嘛。什么时候会知道呢？当你去极客邦的 QCon 技术大会上讲「构建高并发系统之百度贴吧实战」的时候，大家才会知道，喔，原来也有你一份功劳呀，然后转身就去找李明远签名去了。&lt;/p&gt;&lt;p&gt;程序员比较烦的是半瓶子醋的技术领导，或自以为懂了点技术的产品经理。关于商业模式，关于产品，关于用户体验，每个人都可以头头是道的说两句，比如我曾经看到无数的用户要为锤子手机、App、云服务、官网、电商提各种建议，还有一些创业失败的年轻人觉得锤科最大的问题是战略和商业模式，愿意免费为老罗提供战略咨询，等等。这都可以理解，但是谈到技术，懂就是懂，不懂就是不懂，界线是很明显的。&lt;/p&gt;&lt;p&gt;有些产品经理与技术人员打交道多年，多少也了解了一些技术架构和实现思路，这时候与程序员们聊天就要非常小心了。如果你顺嘴溜达出一些开源技术和架构名词，程序员们就会围上来笑嘻嘻的说「哇，你很懂技术嘛」，这时你要赶紧装作一脸无知的样子说「我懂个屁啊，也就知道个概念，我特么连 Hello World 都不会写」，然后程序员们就会放下手里的板砖，安心去编程了。&lt;/p&gt;&lt;p&gt;和程序员交流的正确方式是什么？当一个程序遇到瓶颈的时候，大部分程序员会非常无辜的说，「现在就是最好的解决方案，没有其他办法了」。这时候别着急，拍拍他的肩膀温和地说，「没事儿，你再想想，肯定有更好的解决办法」。如果你本身就是做技术的，也可以提供一些实现思路供他参考。一般情况下。过一阵他就会喜滋滋的告诉你，I have a better idea！&lt;/p&gt;&lt;p&gt;选择了一个程序员，就去相信他！&lt;/p&gt;&lt;p&gt;最后，贫穷的程序员们还会相互鄙视。文人相轻，程序员似乎也是如此。写汇编的鄙视写 C 的，写 C 的鄙视写 C++的，C++程序员鄙视 Java 和 C#，Java 和 C# 程序员相互鄙视，写 Python 的和写 Ruby 相互鄙视，写 Scala、JRuby、Clojure 的一起鄙视 Java 程序员。写静态语言的和写动态语言的相互鄙视，写前端的和写后端的相互鄙视，Vim 程序员和 Emacs 程序员相互鄙视，然后一起鄙视使用 IDE 的程序员。&lt;/p&gt;&lt;p&gt;Go 语言程序员鄙视所有其他语言的程序员，所有其他语言的程序员都鄙视 PHP 程序员。PHP 程序员说，PHP 是世界上最好的编程语言，因为 Facebook 的扎克伯格也是这么说的。&lt;/p&gt;&lt;p&gt;程序员之间的鄙视链极其复杂，估计得用一个混沌算法才能描述出来，这能怪谁呢？只能怪我们自己了，谁让那些技术先贤们发明了这么多语言和技术框架却没有制定出一个美国宪法那样的规章制度呢？毫无疑问，这个鄙视链会继续持续下去，直到程序员这个职业消失的那一天。&lt;/p&gt;&lt;p&gt;程序员穷，累，苦逼，加班，可能还不被理解，公司领导甚至不知道你是干嘛的，一个正常人成为伟大程序员的几率估计比飞机失事也高不了多少，那么，为什么还有这么多年轻人前赴后继加入这个群体呢？我想，是这个时代把程序员们推上了风口浪尖，当你看到自己的代码奔跑在成千上万台服务器上的时候，当你做的 App 运行在每个人的手机上的时候，你会觉得，一切都是值得的。&lt;/p&gt;&lt;p&gt;我是一个程序员，我喜欢这个职业！&lt;/p&gt;&lt;p&gt;有兴趣的话，来我锤当程序员吧，一定很好玩！&lt;/p&gt;</description><pubDate>2015-08-19T13:35:12+08:00</pubDate></item><item><title>锤子科技为什么要做 Mac 软件？</title><link>http://zhuanlan.zhihu.com/p/20138415</link><description>&lt;p&gt;周四了，快一周没写文章，心里有点惴惴的。上周末事情比较多，没有囤什么文章，这几天也没时间，虽然有主题，但有没有草稿区别还是很大的。微信后台经常有读者有意无意的问，「图片不错，莫非最近加班多了」，「注意身体，才能写更多文章」！&lt;/p&gt;&lt;p&gt;问候倒是挺体贴，但意思都送到了。焦虑。为此克服焦虑，我咨询了这方面的行家里手，杭州的产品经理邱二爷。我说，你是怎么做到长时间不更新并且心安理得的？二爷说，其实我也觉得愧疚，但你知道，我心理素质特别好，所以经得起风浪。听到这句话，我灰头土脸，败下阵来。&lt;/p&gt;&lt;p&gt;在心理素质的比拼上，产品经理胜出一筹！&lt;/p&gt;&lt;p&gt;进入锤子科技之后，为了应对公司的业务发展，我们一直在进行人员招聘工作。招聘前端没人说什么，因为整个业界都缺前端啊；招聘 PHP 程序员没人说什么，因为 PHP 是世界上最好的编程语言啊；招聘 Android 开发人员没人说什么，因为所有的中国手机厂商都在找 Android 开发啊……&lt;/p&gt;&lt;p&gt;但是，你们为什么要招 Mac App 开发？你们不是 Android 手机厂商么，为什么要给 Mac 用户做软件？说，到底是什么居心？&lt;/p&gt;&lt;p&gt;问题问的多了，就真的成了问题，甚至来应聘的人也会有类似的疑问。其实事情并没有那么复杂，锤子科技的定位是一家制造移动互联网终端设备的公司，同时为用户提供各种互联网服务和软件服务。现在已经没有任何一家仅靠硬件打天下的智能设备厂商了，每个厂商都在构建自己的生态系统，以期通过软件、硬件、互联网服务为用户提供最优秀的使用体验。&lt;/p&gt;&lt;p&gt;没人能够通过一款冬天冰冷、夏天温热的机器把用户留在自己的身边，苹果公司能够保有大量的用户并不仅仅通过iPhone、iPad、Mac等硬件，而是他们围绕着这些硬件为用户提供了最好的软件和服务。&lt;/p&gt;&lt;p&gt;锤子科技同样如此，我们除了现有的手机设备，还有云平台、电商平台，单发的移动应用，比如锤子便签、锤子日历、锤子时钟，整合的欢喜云Web服务，比如云便签、云相册、联系人、查找手机等。那么当然，我们也会为 Mac 用户开发相关联的 Mac App，事实上我们想做的软件和服务远不止于此……&lt;/p&gt;&lt;p&gt;锤子科技有一群热爱造物的程序员、设计师、产品经理，我们会创造出优雅的、酷的功能和服务，并花费足够的精力和代价去实现这些创意，最后以硬件+软件的形式体现出来。我们对软件完成度的精益求精，从 Smartisan OS 就可以体现出来，设计和实现的差异是像素级别的，每个设计元素都在最合适的位置上，每个动画都有自己的生命。&lt;/p&gt;&lt;p&gt;锤子时钟里指针的阴影和秒针走动时的回弹效果，会让用户倍感舒适而不自知。这些特征在其他公司可能会被认为没有价值，但是，在一个追逐用户体验的团队里，这就是价值体现。&lt;/p&gt;&lt;img src="https://pic1.zhimg.com/ec6cf58140c7042783909bcccfd9b904_b.jpg" data-rawwidth="1080" data-rawheight="1920" class="origin_image zh-lightbox-thumb" width="1080" data-original="https://pic1.zhimg.com/ec6cf58140c7042783909bcccfd9b904_r.jpg"&gt;&lt;p&gt;就我个人而言，Mac 上的软件设计和研发对我有更大的吸引力，我在 Mac 上用过太多优秀的软件了，Keynote 可以帮助你实现最好的演讲效果，iBooks 提供了电脑上最好的图书阅读体验，Ulysses 实现了最为专注的写作平台，Pixelmator 可以让不懂 PS 的人进行专业的图像剪辑……你们能想像三表龙门阵里帅帅的三表弟，用系统自带的 iMovie 就做出了如此专业的百变视频么？每次看到三表龙门阵，我都在想，四十多岁的人，看起来就像三十出头的孩子，三表是怎么做到的？&lt;/p&gt;&lt;p&gt;要知道，三表弟压根不是混 IT 圈的，人家去年才开始使用 Mac 呀……&lt;/p&gt;&lt;p&gt;我们想做出这样的软件，我们希望具备这样的生态圈，事实上我们已经做出了第一款 Mac App 了，只是还没有到发布的时机而已。我们还会规划、设计和创作出更多这样的软件和平台。难以想象，那些开发出很多优秀的 iOS App 的程序员，怎么会没有去创造一款 Mac App 的冲动呢？&lt;/p&gt;&lt;p&gt;当然，我们也招聘 iOS 开发者，如果你也想开发 Mac App，那就更好了。&lt;/p&gt;&lt;p&gt;世界正如我在「We Build Things」里写道：&lt;/p&gt;&lt;p&gt;有些人天生就是创造者和制造者，他们能够创造出这个世界上原本不存在的东西，或者把已经存在的东西打磨得更好。另一些人则更像是发现者和推广者，他们踏上青峰之巅，走过山外之山，在深潭和长河中寻找瑰宝和奇迹，然后把这些东西带到世人的面前，改变人们的生活。&lt;/p&gt;&lt;p&gt;这个世界同时需要这两种人。相对而言，我更喜欢前者的生活，我希望能够创造出让生活更美好的软件和服务。&lt;/p&gt;&lt;p&gt;你呢？现在就来，还是再等等？反正也等不了多久了……&lt;/p&gt;&lt;p&gt;（简历发送至 &lt;a href="mailto:chijianqiang@smartisan.com"&gt;chijianqiang at smartisan.com&lt;/a&gt;）&lt;/p&gt;&lt;p&gt;&lt;img src="https://pic2.zhimg.com/0ffe7f61ac4c85c70b5cc26542306515_b.jpg" data-rawwidth="430" data-rawheight="430" class="origin_image zh-lightbox-thumb" width="430" data-original="https://pic2.zhimg.com/0ffe7f61ac4c85c70b5cc26542306515_r.jpg"&gt;文章来自微信平台 MacTalk，扫描关注。&lt;/p&gt;</description><pubDate>2015-07-31T10:59:16+08:00</pubDate></item><item><title>可惜那么多牛人都成了 CEO</title><link>http://zhuanlan.zhihu.com/p/20107595</link><description>&lt;blockquote&gt;&lt;p&gt;你又不是 CEO，你激动啥？&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;最近中国的股市跌宕起伏，波澜壮阔，让人叹为观止。以前人们走在路上的时候都在刷朋友圈，现在他们在谈论股票；以前人们吃饭的时候都在刷朋友圈，现在他们在看 K 线图；以前人们工作的时候在工作，现在大家都在讨论 IPO 什么时候重启……&lt;/p&gt;&lt;p&gt;有些人已经开始撰写「当我在炒股的时候我想谈些什么」了。&lt;/p&gt;&lt;p&gt;还好，这些和我没什么关系。很多人不碰国内的 A 股是因为他们已经看穿了庄家与散户的博弈，洞悉了空头与多头的奥秘，而我是因为资质愚钝，对炒股一窍不通，所以从不碰股票。一旦置身事外，事情就变得简单而清晰，你看看他人起高楼，宴宾客，再看他人楼塌了，猢狲跑的时候，也只能微微一笑，然后就埋头修 bug 去了。&lt;/p&gt;&lt;p&gt;一个人知道到自己能干什么很难，知道自己不能干什么更难，因为需要更多的试错，很多时候，有些试错的代价是难以承受的。&lt;/p&gt;&lt;p&gt;当 CEO 也是一样的道理。在「全民创业」的时代，创业公司满天飞，所以大把的 CEO 也在天空中飞舞，阵风过后，有多少 CEO 还能够脚踏实地，目标坚定，勇往直前呢？没多少。我以前说过，这个世界上适合创业当 CEO 的人，就那么多，现在创业公司遍地，人人想当老板，但是能够把事情做成、做大、能够让人长期追随的，还是那些人。事实上，管理一家公司永远不是一件简单的事情。&lt;/p&gt;&lt;p&gt;你可以做出一款惊才绝艳的产品，但你可能管不好一个公司。你可以设计出世界上最牛逼的技术架构，但你可能管不好一个公司。你可以把一款普通的产品卖的世人皆知，但你可能管不好一个公司。你可能做出举世皆惊的交互和体验，但你可能管不好一个公司。&lt;/p&gt;&lt;p&gt;很多牛人在某个专业领域可以成就出类拔萃的事业，但是去管理一家公司，带领追随在你身边的人，扫清公司前进路上的一切障碍，并不断取得一次又一次的胜利，却非易事。何况，前行的路上还有各种数不清的琐事和麻烦在等着你，这些小事同样会榨干你的最后一点精力。&lt;/p&gt;&lt;p&gt;当年明月在《明朝那些事儿》里描述过名将晋级之路，历史上叱诧风云的名将凤毛麟角，他们亲自持刀上阵追击敌人，见识战场的惨烈，目睹敌人的尸体，看到战友被杀，知道被刀砍中会流血死去，他们冷酷无情，坚如磐石，在全军即将崩溃的时候发现敌人的弱点并进行攻击，在瞬息万变的战场进行决断，在多次失败后从无数士兵的尸体里站起来重新出发去挑战那个战胜你的对手，在所有人对你说「指导员，我们上吧」的时候，坚定的说出那三个字：再等等！&lt;/p&gt;&lt;p&gt;做企业同样如此！&lt;/p&gt;&lt;p&gt;我亲眼见过非常牛逼的产品经理在鄙视了公司的管理层、设计和技术之后，愤然离职，开创自己的事业，几年之后，团队还是那个团队，产品还是那个产品，只不过步履维艰，要么出售，要么解散。&lt;/p&gt;&lt;p&gt;我亲眼见过非常牛逼的技术总监在鄙视了公司的管理层、设计和产品之后，愤然离职，开创自己的事业，几年之后，团队还是那个团队，产品还是那个产品，只不过步履维艰，要么出售，要么解散。&lt;/p&gt;&lt;p&gt;我亲眼见过非常牛逼的设计总监在鄙视了公司的管理层、产品和技术之后，愤然离职，开创自己的事业，几年之后，团队还是那个团队，产品还是那个产品，只不过步履维艰，要么出售，要么解散。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;哦，为什么公司的管理层总是被鄙视呢？&lt;br&gt;谁知道呢，可能他们只会管理吧……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;人最重要的是找到适合自己的位置，而不是人人都是 CEO。原本，这个世界上应该有三个牛逼的产品经理、技术总监和设计总监，他们可以在自己的位置缔造传奇，可惜后来都成为了不合格的 CEO，而那些岗位上也充斥了一些不合格的产品经理、技术总监和设计总监。&lt;/p&gt;&lt;p&gt;扼腕叹息。&lt;/p&gt;&lt;p&gt;张小龙之牛，牛过上青天，他如果不是站在现在的平台上，是否能够创造出微信这样的现象级产品呢？亦或许，他的最高成就止于 Foxmail？谁知道呢，世间本无如果！&lt;/p&gt;&lt;p&gt;总之，仅仅有个点子，先不要把自己想象成 CEO，何况你还不能确定这个点子是个好点子。另外，你还缺一个程序员不是？&lt;/p&gt;&lt;p&gt;今天的文字，可能都是错的，您该炒股炒股，该创业创业，我滚去改 bug 了……&lt;/p&gt;&lt;p&gt;&lt;img src="https://pic3.zhimg.com/735fcc8fc7684be5a408215ecd7f992e_b.jpg" data-rawwidth="1280" data-rawheight="1280" class="origin_image zh-lightbox-thumb" width="1280" data-original="https://pic3.zhimg.com/735fcc8fc7684be5a408215ecd7f992e_r.jpg"&gt;禁止转载，微信扫描关注 MacTalk&lt;/p&gt;</description><pubDate>2015-07-11T19:26:53+08:00</pubDate></item><item><title>池建强专访：谈技术、成长及锤子</title><link>http://zhuanlan.zhihu.com/p/20107361</link><description>知乎专栏推出有年头了，似乎没有什么大的改进，一直 Beta 着呢，不知道为啥，还是写吧，毕竟编辑器比微信好用多了。&lt;h4&gt;提问：您觉得技术员是可以一直做技术，还是说管理才是出路？&lt;/h4&gt;&lt;p&gt;池建强：技术和管理都是很好的选择。对于程序员来说，要看个人的兴趣和天分。大部分程序员因为性格的原因，喜欢做技术，喜欢与计算机打交道，而恰好又能把技术做好、做深，当然可以一直做技术。比如淘宝的多隆。&lt;/p&gt;&lt;p&gt;如果你喜欢技术的同时，又有很好的视野、格局和情商，当然可以选择涉足其他领域，比如咨询、布道、团队管理、产品设计等。另外，在技术领域遇到瓶颈，也可在其他方面寻求突破，比如二爷鉴书的作者邱岳，以前也是个程序员，后来转产品经理了，现在也丁香园做的风生水起不是？据说他还偷偷修改程序员的代码……&lt;/p&gt;&lt;p&gt;如果你在技术或管理方面都很平庸，又缺乏一点勤奋，转哪个领域都没什么前途。最怕的是，学了三年编程，就天天想着去转这个转那个的，太浮躁。&lt;/p&gt;&lt;p&gt;关于 CTO，一个人做纯粹的技术，是做不了 CTO 的。CTO 要承担更多的角色，要有很大的格局和很好的前瞻性。&lt;/p&gt;&lt;h4&gt;提问：在90后渐渐冒头的今天，您会怎么跟90后这代人解释「但行好事，莫问前程」这句话的含义？&lt;/h4&gt;&lt;p&gt;池建强：我是在年龄大了后才会有这种感悟的，所以也很难和年轻人解释，据说彪悍的人生不需要解释（笑）。&lt;/p&gt;&lt;p&gt;做一件事情不再单纯是为了挣钱，而是想表达和创造，我觉得是一种很好的状态。在这种状态里，你做出的选择更偏向于事，而不是急功近利的念头。我觉得现在的80后压力比较大，90后呢，相对好一些吧，压力大的时候做事就容易变形。&lt;/p&gt;&lt;p&gt;不是说大家不去追求前程和钱程，而是要有所平衡。&lt;/p&gt;&lt;h4&gt;提问：您跟冯大辉先生是很好的朋友，冯大辉先生现在做的事对老百姓有很大的益处，其动机也很让人尊敬。像他这样的，是不是就是您说的「但行好事，莫问前程」的例子？&lt;/h4&gt;&lt;p&gt;池建强：对，大辉做的事情我是很佩服的。他从支付宝出来选择了丁香园，如果纯粹为了赚钱，我相信他会有更多选择。但丁香园是一个他愿意投入精力和时间去做事业，非常好。关于冯老师我写过一篇小道行天下，有兴趣的读者可以去找来看看。&lt;/p&gt;&lt;p&gt;当然，我们也要注意到，冯老师在做丁香园的时候，生活压力已经没那么大了，所以他能更关注在做事上。我们经常宣扬苦难是一种财富，苦难是生活最好的老师，其实挺扯淡的，很多人能够心无旁骛的做事，都是因为生活压力得到了缓解，或者没什么生存压力了。所以要做到「但行好事，莫问前程」是不容易的。&lt;/p&gt;&lt;p&gt;关于创业，我个人以为，年轻人在牵绊很少的时候，比如20—30岁，更容易去创业和拼搏，因为没什么可以失去的，除了时间。30岁以后结婚生子车子房子的压力都来了，反而没那么容易。到40岁之后，各方面比较稳定了，压力也没那么大了，也是创业的好时机。&lt;/p&gt;&lt;h4&gt;提问：您在锤子科技云平台负责的研发团队是怎样的一群人？和您之前的预期是否有什么不同？在锤子公司工作是一种怎样的体验？&lt;/h4&gt;&lt;p&gt;池建强：我之前的行业是传统企业软件，跟我个人的定位是不太符合的。我最早做互联网，后来是企业软件，现在又回到了互联网行业，对这个过程我很满意。&lt;/p&gt;&lt;p&gt;锤子科技是我一直比较关注的一家公司，进入这家公司之后，我发现和我想象的没有很大的差距，锤子和老罗并没有外界想象的那么美，也没传说中那么差，一切都很真实，我们只是在坚持做一些正确的、有品位事情，这些正确和品味，却被很多人当做情怀。我加盟锤子，也算机缘巧合，老罗找到我，于是就加入了。&lt;/p&gt;&lt;p&gt;我现在负责一个比较大的团队，在做很多有趣的事情，后续我会为这个团队写一些文章。团队的人做事很讲究效率，有紧迫感。遇到紧急任务大家会主动申请加班，因为我们的加班是要被批准才可以的。在这个相对比较「干净」的环境里工作，每个人都有那么一点小小的自豪感。我们在做一个商业决定时，会考虑很多其他公司不会考虑、或不愿考虑的东西。&lt;/p&gt;&lt;p&gt;加入锤子我并没有太大的惊喜，因为跟我想象的差不多，一个正常的公司，做事，并力图追求卓越，挺好的。&lt;/p&gt;&lt;h4&gt;提问：有用户提到锤子便签、时钟等产品的体验和使用很赞，锤子科技云平台在用户体验方面，您认为有哪些别致之处？接下来会着重进行哪一块的改进或有什么其它的更新？&lt;/h4&gt;&lt;p&gt;池建强：用户体验是我们最为重视的部分，因为老罗是公司最大的产品经理。我们有很多一流的的产品经理、设计师和工程师，每个人都会想出一些优秀的、酷的功能，这就会需要我们花费很大的代价去实现这些创意。&lt;/p&gt;&lt;p&gt;我们的产品在设计和实现上的差别是像素级的，设计出来的 UI，含着眼泪也要实现，而且一个像素都不能错。比如更换系统主题、屏幕切换、购物商城、云便签等等，你可以看一下，很多细节我们花了大量的时间和功夫，很多的功能效果要经历成千上万次的调试。锤子的 Smartisan OS 和其他的 Android 系统是不一样的，很不一样，我不会说我们的系统更好，不过你可以自己感受一下，包括我们的便签、时钟、日历、云同步等产品。现在锤子便签已经推出了 Web 版，有兴趣的读者可以尝试一下，我们要做出世界级的便签和轻量级的笔记应用。&lt;/p&gt;&lt;p&gt;关于 ROM 和云平台，我们还规划了很多有趣和好玩的东西，有些东西已经在实现了，不过这些成果，还是让老罗去发布会讲吧。&lt;/p&gt;&lt;h4&gt;提问：您的 Mactalk 很受程序员喜爱，您是怎么写好这个公众号的？&lt;/h4&gt;&lt;p&gt;池建强：最开始做 MacTalk 就是一个很纯粹的想法，教大家一些 Mac 使用和开发方面的技术技巧，后来越写越多，欲罢不能，就成了现在的样子。我本人比较喜欢写东西，博客时代写东西和公众号的风格差异很大，博客时代程序员都写技术文章，现在我更多的把自己想象成一个专栏作家，技术内容反而越写越少了。&lt;/p&gt;&lt;p&gt;我自己写东西不大会去追逐热点，今天死刑、明天专车、后天离婚等等，写那些东西可能会吸引读者的眼球，但对我来说有什么价值呢？我不会去迎合读者，自己觉得该写什么就写什么了，想表达什么就表达什么，我尽量做到有价值，有趣，偶尔有力量。当然有时候会做一些数据实验啊什么的，其实运营微信公众号就像创业一样，有很多有意思的事情。&lt;/p&gt;&lt;p&gt;关于我的文章内容，能理解有收获的，您就读读。理解不了的，觉得没用的，取消关注也行。&lt;/p&gt;&lt;h4&gt;提问：Docker、Spark等面向大数据和云计算的新兴技术很火爆，它们也在云企业里开始应用。我个人觉得 Spark 和 Docker 会是很有用武之地的组合，我想学习Spark，是否可以建议下学习路线和应用方向？&lt;/h4&gt;&lt;p&gt;池建强：Docker、Spark 都是开源的技术，我自己也很看好，我们也在用。学习这些技术其实没什么捷径，由于是开源技术，网路上可以找到大量的学习资料，去学就好了。搭建环境，根据文档做出自己的第一个应用，然后尝试把学到的东西应用到实际环境中去，解决实际问题。如果你想在这些领域有更深入的了解，就需要去理解这些技术的根本和实现机制。&lt;/p&gt;&lt;p&gt;Docker 主要是 Go 语言写的，那么你最好能了解一下 Go 语言，读读 Docker 的源码。InfoQ 上有个专栏是讲 Docker 源代码分析的，就是个很好指南。Spark 主要是用 Scala 实现的，支持 Scala、Java、Python 和 R 语言，那这些语言你是不是要去了解一下呢？技术的路上，衍生学习，学无止境！&lt;/p&gt;&lt;h4&gt;提问：锤子以后会做智能硬件吗？&lt;/h4&gt;&lt;p&gt;池建强：目前我们仍会以手机为主，但已经有专门的团队在做其他领域的研究和实践了，具体内容不方便透露。&lt;/p&gt;&lt;h4&gt;提问：结合Python、Java的优缺点，个人觉得Java在大数据处理方面大有用武之地，这会让Java迎来新的春天和流行吗？&lt;/h4&gt;&lt;p&gt;池建强：Python 和 Java 都是面向对象的编程语言，前者是动态解释型语言，后者是静态编译型语言，关于这两门语言的特点和介绍，可以写一本书。&lt;/p&gt;&lt;p&gt;Java 会迎来新的春天和流行吗？我觉得 Java 一直在春天里啊，Java 在二十年来每个浪潮的转折点都恰到好处的站在了风口浪尖，直至今天。最早互联网出现以后，Java 有了 Applet 技术，然后就迎来了企业级开发的大潮，JavaEE 横扫天下，等到移动互联网时代，Android 又出来了，大批的 Java 程序员又站到了移动互联网的潮头。&lt;/p&gt;&lt;p&gt;做为一个工业编程语言，Java 的语法进步一直比较缓慢，但 Java 平台的生态非常好，Scala、Clojure、Groovy 都是 Java 平台的衍生语言，生命力旺盛。在大数据时代，与其他语言和平台比起来，也豪不逊色。&lt;/p&gt;&lt;h4&gt;提问：Python、Android、PHP、Java、Web 看了一大堆，也动手实践了一些，但是还是感觉什么都不会，怎样才能让自己感觉有点进步呢？&lt;/h4&gt;&lt;p&gt;池建强：这个得看你的状态，你是在学习中工作，还是在工作中学习。&lt;/p&gt;&lt;p&gt;如果是比较纯粹的学习，你最好选一门语言和平台深入钻研，这个领域会衍生出很多其他技术，足够你学习的，学完之后要实践，比如写个 App 或博客系统等，才会有更多收获。每个语言都有自己的生态圈，要融入到这个生态圈里。如果你是工作状态，除了把工作中用到的技术掌握好，还应该学习其他的语言和平台，一个程序员至少要掌握两门以上的编程语言，才能相互印证，融会贯通。&lt;/p&gt;&lt;p&gt;为什么学了好久都觉得没进步呢？第一可能没那么久，第二可能你学的东西太多了。在编程领域，没有几年持续的专注学习和实践是不可能「感到自己有点进步」的。&lt;/p&gt;&lt;h4&gt;提问：你怎么看待基于HTML5号称跨平台的APP和目前类似APIcloud这类的H5 APP速成框架（或平台）在移动开发中的未来？&lt;/h4&gt;&lt;p&gt;池建强：现在更多是混合开发吧，Native 技术和 HTML5 技术结合使用。微信中有很多技术就是基于 HTML5 做的。我认为短期内 HTML5 不可能完全取代 Native技术。&lt;/p&gt;&lt;h4&gt;提问：锤子科技是否有计划发布OS X平台上的同步管理软件？&lt;/h4&gt;&lt;p&gt;池建强：我们会做好几款 Mac 软件，但具体做什么，还是等发布了再说吧。&lt;/p&gt;&lt;h4&gt;提问：您认为什么是「极客」（作为 Mactalk 的忠实读者，我沿着印象在搜狗里找到了你曾写过的一句话：「这些就是我记忆中的苹果工程师沃兹，传奇极客。」我觉得极客是想并践行者「write the code，change the world. 」的一群人，但还是想请您谈谈，什么是极客。）&lt;/h4&gt;&lt;p&gt;池建强：极客一般指那些智力超群，不善交际，但是对计算机技术和互联网充满热爱的人，他们愿意投入大量时间去钻研技术，编写代码，他们崇尚自由、热爱科技、支持开源，相信技术可以改变世界，在科技领域或有重大的发明，比如沃兹、Linus 等。&lt;/p&gt;&lt;p&gt;早期的黑客和极客表达的意思差不多，他们追逐绝对自由，蔑视权贵，他们会攻破一个封闭的软件系统，但是不做任何破坏。酷，特立独行和科技感是极客的特点。&lt;/p&gt;&lt;p&gt;极客是从国外传过来的一个词：Geek。他们的科技环境允许自己做更多喜欢的事情。沃兹70年代就能接触大量的科技资讯，并开始设计电脑，做自己喜爱的东西。我是个70后，到80年代还没见过电脑。中国有没有早期的极客我不敢说，但是现在中国有很多厉害的黑客，哈哈。&lt;/p&gt;&lt;h4&gt;提问：请池老师吐槽一下老罗吧？&lt;/h4&gt;&lt;p&gt;池建强：吐槽老板合适吗？要是吐槽霍泰稳就爽了，比如他把老员工带出国去浪，却让新员工在闷热的办公室努力工作，这样真的好吗？&lt;/p&gt;&lt;p&gt;有时候老罗对细节的追求是不计代价的，这让我们很崩溃，但这也表明了他对产品的态度，从他那一关开始，产品达不到99分是无法通过的。另外，他太忙了，我很多时候都找不着他。老板太忙，说明我们办事不力呀。&lt;/p&gt;&lt;p&gt;吐槽老罗可以写一本书，不过现在还不是时候……&lt;/p&gt;&lt;h4&gt;提问：老师您现阶段的工作告一段落后，以后想做的事是？&lt;/h4&gt;&lt;p&gt;池建强：我不知道现在年轻人怎么想的，我年轻的时候就想，干到40岁我特么就退休，去享受生活，去做自己喜欢做的事情。但真的到了40岁，你会发现，真正喜欢的事，愿意长久去做的事，还是工作，我想我会工作到70岁吧。&lt;/p&gt;&lt;p&gt;比如你，如果你有了一个亿，你就会想，我为什么要在这个闷热的屋子里录这个节目呢？等到你真的有了一个亿，可能工作的欲望会更强烈，只不过做事的层面不同了。&lt;/p&gt;&lt;p&gt;当然，我可不是工作狂，我挺喜欢的一种生活是，有一天我们把锤子做得很成功了，我就去过一段旅居的生活，世界各地的跑，每个地方住半年，然后写写东西，跟读者交流交流。我不大喜欢到处走的那种旅行，我喜欢在一个地方待着。就像日本作家村上春树。他从30岁开始写小说，一直到现在还在各种写东西，满世界的写，非常值得尊敬。&lt;/p&gt;&lt;h4&gt;提问：老师怎么看待90后？&lt;/h4&gt;&lt;p&gt;池建强：最大的90后今年也25了，各个公司里的90后开始多起来，但世界还是属于70后和80后的，我们公司的开发大部分都是80后，少量优秀的90后开始充当主力。&lt;/p&gt;&lt;p&gt;我觉得90后是正常的一代，无比正常。他们在一个相对开放、宽松和充满科技感的时代里成长，比我们当时的视野好得多。可能有些人会看不惯下一代，我不这样，我觉得挺好，尤其是90后的程序员，踏实，有进取心，充满才华。&lt;/p&gt;&lt;p&gt;老罗说，虽然科技行业史无前例地涌现出了很多年轻的、了不起的人物，但整体上，这个世界的真正主人，永远是四十岁以上的男性。我只是陈述事实，并没有为此感到高兴，坦率地讲，仅从这一点来说，我对这个世界是相当失望的。&lt;/p&gt;&lt;p&gt;我也是。&lt;/p&gt;&lt;h4&gt;提问：最后请您给读者朋友们一些人生寄语吧？&lt;/h4&gt;&lt;p&gt;池建强：但求好事，莫问前程！&lt;/p&gt;&lt;p&gt;不管做什么，从年轻的时候，你就要对你做的事情有深入的了解，不肤浅，不浮躁，坚持去做一件事情，同时有意识地去提升自己的能力。&lt;/p&gt;&lt;br&gt;&lt;p&gt;每个人都知道运动和良好的饮食可以保持健康和身材，但少有人做到。每个人都知道坚持、练习和恰当的方法可以让我们脱颖而出，出类拔萃，但少有人做到。世界上优秀的人本来就是少数，认识到这一点，你会更容易理解这个世界。&lt;/p&gt;</description><pubDate>2015-07-11T15:15:51+08:00</pubDate></item><item><title>给你最好的和最坏的</title><link>http://zhuanlan.zhihu.com/p/20061665</link><description>&lt;blockquote&gt;&lt;p&gt;这是最好的时代，这是最坏的时代；这是智慧的年代，这是愚蠢的年代；这是信仰的时期，这是怀疑的时期；这是光明的季节，这是黑暗的季节；这是希望之春，这是绝望之冬；我们拥有一切，我们一无所有；我们正走向天堂，我们都在奔向与其相反的地方……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;英国作家查尔斯·狄更斯在一百五十多年前为之后的每个时代写好了挽歌，时至今日，没人能够摆脱。&lt;/p&gt;&lt;p&gt;什么是好，什么是坏？看电影时我们常常抱怨，坏人抓住好人总会变成一个唧唧歪歪的话唠，得意洋洋磨磨唧唧，最终给主角们反戈一击的机会。等到电影真的冷酷起来，我们又会无所适从、茫然若失。比如像《赤道》《非常突然》这样的电影，无论你是反派还是男主，无论温情还是帅酷，死亡来临的时候，都非常突然。&lt;/p&gt;&lt;p&gt;到了最后你以为生活会给自己一个交代，一个反转，但残酷的结局会告诉你，坏人也能完好无损，好人也会死光光，然后屏幕提示，也许，真实的世界，就是如此！&lt;/p&gt;&lt;p&gt;每个时代都会同时给你最好的和最坏的，决定你生活轨迹的，只是自己的选择。&lt;/p&gt;&lt;p&gt;今天的推荐，一个是「最好的」，一个是「最坏的」：&lt;/p&gt;&lt;h4&gt;锤子便签 Web 版已经向所有用户开放&lt;/h4&gt;&lt;p&gt;可能是史上最漂亮的便签应用，你或许会因它重新喜欢上文字的记录和表达。你还可以随时随地将便签内容生成精美的长微博并分享。雅致的信纸、精心调整的文字排版，令文字更加赏心悦目。&lt;/p&gt;&lt;p&gt;如今我们为它增加了 Web 版本，同样的用户体验，你可以在自己的电脑上更为方便和快速的记录自己的生活，分享自己的思想，不再放过每个值得深思的时刻。这个时代，不仅需要深度阅读的人，同样需要记录思想的应用。&lt;/p&gt;&lt;p&gt;在电脑上访问 &lt;a href="https://link.zhihu.com/?target=http%3A//note.t.tt" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;note.t.tt&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;，可以注册或登录锤子便签 Web 版。锤子便签支持云同步，您可以选择是否将便签内容同步到 Android 设备或 iPhone 手机上。&lt;/p&gt;&lt;p&gt;祝写的开心！&lt;/p&gt;&lt;h4&gt;小道消息2.0：坏时代&lt;/h4&gt;&lt;p&gt;小道消息暂时变成了一个传说，由于某种不可抗力，现在不能访问了。对于普通人来说，这可能是一个沉重的打击，对于在网络上生存的人们而言，用「致命」形容也不过分。&lt;/p&gt;&lt;p&gt;很多人以为冯老师开始变得「愁云惨雾」「哭哭啼啼」，甚至抱着白鸦在那里唱「擦干眼泪陪你睡」这样没出息的歌曲。于是一批认识的，见过几面的，见过一面的，没见过面的，在微信里说过话的，在微信里说过话没得到回复的，在微信里没说过话的，都开始酝酿一篇叫做「我所知道的 Fenng」这样的文章，最后竟然都写出来并发表了。对于自媒体来说，这确实是个最好的时代。&lt;/p&gt;&lt;p&gt;面对这种混乱的场面，冯老师在群里异常活跃，他非常冷酷的批阅奏折，分享颂扬，分析数据，欣赏美女，然后对我们这些唱反调的朋友说，你们啊，就是特么的嫉妒，哈哈。&lt;/p&gt;&lt;p&gt;然后就有了小道消息升级版，不是最好的时代，而是「坏时代」，微信公众号 ID 是「TheBadTime」。还是原来的配方，还是熟悉的味道，但是有了更多的沉重和思考。如果你不想错过更多时代的呐喊和不同的声音，那么，请关注「坏时代」。&lt;/p&gt;&lt;p&gt;&lt;img src="https://pic4.zhimg.com/d7594a2853d2efd6a5f8141755128d9f_b.jpg" data-rawwidth="430" data-rawheight="430" class="origin_image zh-lightbox-thumb" width="430" data-original="https://pic4.zhimg.com/d7594a2853d2efd6a5f8141755128d9f_r.jpg"&gt;扫描关注！&lt;/p&gt;</description><pubDate>2015-06-08T12:31:06+08:00</pubDate></item><item><title>千万别惹程序员</title><link>http://zhuanlan.zhihu.com/p/20059191</link><description>&lt;p&gt;作为一个程序员，看电影的一大乐趣就是观摩电影中出现的那些技术场面。当年看不死小强的二十四小时，非常痴迷 CTU 的操作系统，电脑之间的交互操作像 Solaris，整体 UI 看起来又像是定制的 Linux，上网 Google 了半天而不得其解，后来国外一个朋友告诉我，很多国外电影里的操作系统画面为了达到炫酷的效果，都是用 Flash 做出来的动画，所以你看不到他们敲错程序，也没有人按退格键。&lt;/p&gt;&lt;p&gt;得知了这个消息之后，我怅然若失了很久，一直以来，我以为军方和 FBI 的操作系统不知比 Linux 高到哪里去了。&lt;/p&gt;&lt;p&gt;除了操作系统和 UI 界面，国外的科技电影镜头中还会出现大量的代码片段，分析这些代码，也为我们的编程生涯带来了很多乐趣。当然，产品经理和程序员的女朋友是无法理解这些快乐的。一个男程序员没有女朋友并不是什么丢人的事，有女朋友，凑巧她是个不懂技术的产品经理，这才是人生最痛苦的事。在可以预见的未来，这个程序员将度过自己灰暗的，不被理解的后半生。&lt;/p&gt;&lt;p&gt;哎，还是说电影吧。据说2001年拍摄的美国大片《剑鱼行动》中休·杰克曼扮演的黑客在破解系统时使用了 C 程序，而且这些代码是真正的 DES 加密程序，完整的源代码来自：&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.ic.unicamp.br/%257Elucchesi/cracking-des/CH5/SEARCH.C" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;http://www.ic.unicamp.br/~lucchesi/cracking-des/CH5/SEARCH.C&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;休·杰克曼肯定不知道这些代码是什么意思，当年惊鸿一瞥，我也没看出这是什么语言编写的程序。不过可以肯定的是，这是一部优秀的科技动作影片，导演在制作程序相关的情节时，一定咨询过专业技术人员。&lt;/p&gt;&lt;p&gt;第一部《钢铁侠》里也有 C 语言抛头露面的镜头。在钢铁侠的心脏第一次初始化的过程中，那个破笔记本上陆续显示着一些 C 语言片段。有好事者最终找到了这段代码的出处，它来自乐高积木的固件下载程序，由斯坦福大学的 Kekoa Proudfoot 编写。完整的程序代码可以从这里下载：&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//graphics.stanford.edu/%257Ekekoa/rcx/firmdl3.c" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;http://graphics.stanford.edu/~kekoa/rcx/firmdl3.c&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;《龙纹身女孩》的女主人公同样是个黑客高手，她常年背双肩挎、携电脑包，走位飘忽，宛若一个孤独的侠客行走在网路之间，遇到楼舍密室，要么跳跃穿行，要么潜入一窥究竟。在电影中，她轻松突破瑞典警察局的数据库，然后开始输入命令检索数据。屏幕上翻滚着绿色的程序代码和用户信息，但是无法看清她使用了什么 SQL 语句。这时候居然有程序员跳出来截取了屏幕画面，然后 PS 拼接再加上推演之后得出了完整的 SQL 语句。最终他给出的结论是：一个顶级黑客为什么会用 outer join 的方式进行表关联呢，性能明显不高嘛。&lt;/p&gt;&lt;p&gt;我想这个程序员一定没有女朋友！&lt;/p&gt;&lt;p&gt;国内的电影在这方面差距就非常明显了，早期看过一部中国黑客电影，当蠕虫病毒来袭时，屏幕上就出现一些丑陋的虫子动画一闪一闪的，看起来非常恶心。还有的电影在展示网络攻击的时候，不停的在 Windows 的终端窗口输入一些 Linux 命令，结果就是：男程序员沉默，女程序员流泪。&lt;/p&gt;&lt;p&gt;最近看了吴京的动作片《战狼》，虽然情节有硬伤，但总算是吴京的用心之作，不过在程序员看来，这部电影算是被技术场面毁了。明明是入侵并发送炮团作战指令，但屏幕打印出来的却是一堆格式错乱的代码，代码逻辑就是根据输入的字符输出星期几，难道星期几就是作战指令吗？哎，建议吴京下次拍电影的时候咨询一个会六门语言的程序员，不谢。&lt;/p&gt;&lt;img src="https://pic1.zhimg.com/d9fad1553153bf4ff04d37bf202ab8a4_b.jpg" data-rawwidth="1280" data-rawheight="960" class="origin_image zh-lightbox-thumb" width="1280" data-original="https://pic1.zhimg.com/d9fad1553153bf4ff04d37bf202ab8a4_r.jpg"&gt;&lt;p&gt;本来就想写写电影里代码的事情，结果携程网站挂了，具体原因未知，因为我和携程的 CTO 叶总就在一个微信小群里，当我和其他人在激烈的讨论携程挂掉的原因时，叶总神情刚毅，一句话都没说。很多内外部消息显示携程是被攻击了，或被程序员误操作了，也有人说携程的数据库被一个叫做「物理」的家伙删除了，真实情况如何，恐怕只有携程的人才知道。可以肯定的是，这件事一定和程序员有关。&lt;br&gt;&lt;/p&gt;&lt;p&gt;所以，别惹程序员！&lt;/p&gt;&lt;p&gt;当然，不要以为我们程序员都是看电影找 bug，不开心删数据的人，那只是程序员中的极品。真正的高帅富程序员多了去了，比如最近看到一篇文章里提到的马克·安德森先生，他是网景公司的创始人之一，Mosaic 浏览器的开发者，现在的安德森·霍洛维茨基金创始人，投资了很多著名的科技公司。&lt;/p&gt;&lt;p&gt;2006年，当雅虎出价10亿美元想要收购 Facebook 时，全天下的人都敦促扎克伯格赶紧接受交易套现走人。扎克伯格承受了巨大的压力，只有安德森不停的鼓励他坚持下去，他告诉扎克伯格，公司未来的价值远远不止这个。安德森坚信 Facebook 能够以前所未有的方式影响这个世界：「你们需要的只是一点时间」。Facebook 现在的市值是2180亿美元。&lt;/p&gt;&lt;p&gt;安德森能取得这样的成就，我觉得和他的婚姻生活密不可分。他的妻子认为，安德森简直是她的梦中情人，集天才、程序员以及秃顶于一身。他们婚后经常在床上阅读，并且围绕各种问题展开讨论，包括智能手机的组件、二进制代码的工作方式、无人机的管制政策以及普京是否利用乌克兰来转移民众对国内金融危机的关注等等，她表示，自己每天都在和一个活生生的维基百科睡在一起。&lt;/p&gt;&lt;p&gt;「集天才、程序员以及秃顶于一身」，感受一下！&lt;/p&gt;&lt;p&gt;所以，没事别惹程序员，对他们好一点，不懂技术不要对他们说这很容易实现，平时多送些小礼物，他们不开心了就请吃海底捞，加不加班都要给他们加薪，没有女朋友的给介绍女朋友，还没订阅 MacTalk 的让他们赶紧订阅……你会有回报的。&lt;/p&gt;&lt;br&gt;&lt;p&gt;文章来自公众号「MacTalk」，禁止转载&lt;/p&gt;&lt;img src="https://pic2.zhimg.com/0ffe7f61ac4c85c70b5cc26542306515_b.jpg" data-rawwidth="430" data-rawheight="430" class="origin_image zh-lightbox-thumb" width="430" data-original="https://pic2.zhimg.com/0ffe7f61ac4c85c70b5cc26542306515_r.jpg"&gt;</description><pubDate>2015-06-05T15:38:10+08:00</pubDate></item><item><title>我为什么加入锤子科技？</title><link>http://zhuanlan.zhihu.com/p/20032315</link><description>&lt;p&gt;大概是在2012年左右，我仍然在积极的关注和研究应用平台技术，但是对企业市场逐渐失去了兴趣，我个人的能力、资源和契合度已经开始越来越适应另一个战场。按照道理来讲，那个阶段我就应该离开去寻求新的方向了。但是，选择永远没有那么简单。&lt;/p&gt;&lt;p&gt;走到这样一个人生阶段，其实选择并不多。我不大可能再去 BAT 华为联想小米这样的大公司，也不会去各种外企。为升空的火箭添加燃料已经不是我的梦想，我需要「纵横四海，改造世界」，我期待「强敌环伺，战火纷飞」！去这些大公司和待在原公司能有多大的区别呢？在瑞友工作了这么多年，人来了又走，走了又来，我熟悉软件园里的一草一木，软件平台里的每一行代码都倾注了我的情感，有老领导，有老部下，在有效的范围内，我几乎可以做各种尝试。我走来走去，我看花开花落，我为什么要离开？&lt;/p&gt;&lt;p&gt;我已经处在了舒适区里最柔软的沙发上，我不可能换个地方换个沙发。人飘起来容易，没有翅膀和天空，风停之后，落地更难。是时候离开了吧，既然不去大公司，那就选择创业，或者加入一家创业公司，或者随便写点什么，也能过生活。但是找到一家和自己契合的创业公司却是极其困难的，创始人、环境、方向，每个因素都是差之毫厘、谬以千里。&lt;/p&gt;&lt;p&gt;有段时间我处于拔剑四顾心茫然的境地，不停的拒绝了一些公司的邀请，反复打磨自己手中雪亮的刀锋，听许巍的歌，却始终找不到超然物外和逍遥自在的感觉。「离开」宛如日出东海，注定要落西山。问题是哪里的西山？最终还是要去创业吧，我想。&lt;/p&gt;&lt;p&gt;2014年的冬末，一枚沉重的羽毛随风坠落到我的面前，我的选择是，伸手抱住了它。&lt;/p&gt;&lt;p&gt;老罗通过我的两个好朋友（为啥是两个朋友？这是另外一个故事，感谢他们！）找到了我，吃饭聊天。那是一顿冬日阳光里非常愉悦的午餐，由于从来没有在生活中见到过活的老罗，我一边吃饭，一边观察着这个飞翔的胖子。老罗体格庞大，健谈，目光坚定，气场澎湃，坐在他的对面会充满压迫感，我选择坐在了他的旁边，感觉还行。&lt;/p&gt;&lt;p&gt;老罗穿着闲散，不修边幅（当然，后来见到工作中的老罗之后，我觉得那天他简直是化了妆的），从 T1 聊到牛博网，从学校教育聊到新东方，从设计工艺聊到未来的产品形态，老罗词锋犀利，话语密不透风，针扎不进，水泼不透。以我这样的功力，大概只能接管四分之一或更少的话语权。当然，在老罗面前，我更乐得做一个倾听者。&lt;/p&gt;&lt;p&gt;闲聊了两个多小时，酒过三巡菜过五味，老罗抽出一把餐巾纸抹了抹大油嘴对我说，池老师，我们有个比较重要的职位空缺，你要是有兴趣，可以过来谈谈，没兴趣的话，就给我推荐一些靠谱的人选。我的回复是：好啊。然后我以粉丝心态和老罗照了一张合影，照的时候我机智的往后退了一点，效果就是今天题图的样子。然后我们执手相望，拍拍屁股各回各家了。&lt;/p&gt;&lt;p&gt;接下来的事情就比较有意思了，根本不是你们想象的「只因为在人群中多看了你一眼，再也没有忘记你的容颜。老罗说你来吗？我说 I do」这样的美好剧情，无论你曾经做过什么，有什么样的江湖声誉，相互的选择都是慎重而严谨的。我和锤子科技从冬末谈到初春，直到这个寒冷的夏季来临，才正式加盟了锤子科技。期间我和锤子科技的高层聊，和 HR 聊，和团队的成员聊，和老罗聊了两次，最后聊到海枯石烂，山河变色，双方终于确认，你是我们要找的人，你是我要找的公司，然后，一切就顺理成章了。&lt;/p&gt;&lt;p&gt;有些朋友得知我去锤子科技的消息后，大部分是祝贺，也有些会不理解，为什么要去这样一个艰难成长的创业公司呢？而且是英语老师开的！首先，一个公司如果没有任何困难顺风顺水，人家让你过去干什么呢？坐享公司成长的果实么？这样的美事从来砸不到我头上，也不是我追求的。其次，如果你一直以静止的眼光看待事物，那只能说明自己的不成长。高晓松曾经在一个访谈节目里谈到如何看待乐评人评价自己的作品，他说：因为我自己一直在成长，所以我看了乐评人的文章，就知道他有没有成长。&lt;/p&gt;&lt;p&gt;人生就是不断的成长和挑战，从一个领域到另一个领域。当人们嘲笑雷军英语口音的时候，当人们嘲笑英语老师的设计和产品能力的时候，其实人家已经走到了你梦里都梦不到的地方。&lt;/p&gt;&lt;p&gt;锤子科技是一家很独特的公司，按照体量来说，我们是一家不折不扣的小公司，但被很多公司和竞争对手当做大公司看待，这是一件很有趣的事情，当然和老罗的个人风格有关，所以在锤子科技工作的感受就是：强敌环伺，战火纷飞！由于价值观趋同，加上竞争对手强劲，大部分员工都有一点点内在的骄傲和紧迫感。我们在做正确的事情，我们不用盗版，我们步履匆匆，我们试图改变人们的生活。&lt;/p&gt;&lt;p&gt;工作时间，大家要么噼噼啪啪敲击键盘编写程序，要么在 iMac 上安静的做着设计，要么步履匆匆，从一处赶往另一处。我记得有一次我召集各个组长开产品会议，一直讨论到晚上8点还没结束，那天我约了另一个朋友谈事，就准备结束会议，明天再开。结果大家说，没事老大你先走吧，我们讨论出结果明天给你邮件。&lt;/p&gt;&lt;p&gt;每个人都会把某件事当成自己的责任，这是一份珍贵的资产。&lt;/p&gt;&lt;p&gt;另外，很多人会以为和老罗工作会很轻松，那你们就大错特错了。他不会笑眯眯的给你讲段子哄你干活，每次开例会不骂人大家就要烧香了。你要小心翼翼的度过每次产品讨论，顺利的时候他偶尔会扔个梗让大家开怀一笑，接下来又会从设计、交互、市场、数据等各个领域挑战你。不顺利的时候他会大发雷霆，让与会者高度紧张。&lt;/p&gt;&lt;p&gt;每次开会，老罗就像骑在高头大马上的异国勇士，手持长枪重戟，虎视眈眈。高头大马不堪重负，发出嘶嘶的吼叫，空调的风从办公室的顶部吹过来，带起一丝不安的气息。每个领域的负责人小心翼翼的向老罗发起冲击，大多数能安然过关，小部分则体无完肤，残肢满地。每次开完会之后，大家都会收拾一下残破的心情和侥幸过关的快感，盼望着下一次产品会的来临。&lt;/p&gt;&lt;p&gt;所以，为了缓和气氛，我有时会自己讲个段子。比如遇到不紧急的事情，我会通过微信发给老罗，老罗的微信反射弧极长，这一点可以与丁香园的冯老师一争高下。你早晨给他发给微信，然后工作一上午吃了午饭又开了一下午会晚上回到家里读书写字正准备上床睡觉的时候，微信「biu」的一声，你打开一看，老罗回复了两个字一个表情：好的[微笑]。于是就有了这样的段子：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;老罗：中午吃饭了吗？&lt;br&gt;老池：没呢，准备去吃&lt;br&gt;……&lt;br&gt;十五分钟过去了&lt;br&gt;老罗：等我&lt;br&gt;老池：好&lt;br&gt;半个小时过去了……&lt;br&gt;一个小时过去了……&lt;br&gt;老罗跑过来抹抹嘴：你真抗饿啊，你看我就扛不住去吃了&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;有人会问这是真的吗？段子嘛，当然是来源于生活而高于生活。我喜欢这样的生活。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;你知道吗，人们每天起床，做着同样的事情，他们告诉自己，有一天要改变生活，但他们从来不付诸行动。我想改变自己的生活。——「城中大盗」&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;对我来说，改变一直在发生……&lt;/p&gt;&lt;p&gt;过去几个月我一直在用文章表达我的思考，细心的读者应该能够从下面的文章列表里看到这样一条思考的轨迹。&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMjM5ODQ2MDIyMA%3D%3D%26mid%3D203472484%26idx%3D1%26sn%3Df2c09fbe1b2a25cec01765b12ece29c1%26scene%3D21%23wechat_redirect" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;如何「正确地」选择一家创业公司？&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMjM5ODQ2MDIyMA%3D%3D%26mid%3D203560668%26idx%3D1%26sn%3Db176621cf75fb13a146868a256a079d9%26scene%3D21%23wechat_redirect" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;人生如摆摊&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMjM5ODQ2MDIyMA%3D%3D%26mid%3D204149673%26idx%3D1%26sn%3D5e3475de80a64ca36fcfd7c30c16bf81%26scene%3D21%23wechat_redirect" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;创业和做点小生意究竟有啥区别？&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMjM5ODQ2MDIyMA%3D%3D%26mid%3D204521678%26idx%3D1%26sn%3D695b770b055a3e3e53deb2092edfe3f0%26scene%3D21%23wechat_redirect" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;闲适有毒&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMjM5ODQ2MDIyMA%3D%3D%26mid%3D204883882%26idx%3D1%26sn%3D8e4c4aed8d8bcc02ea4685dc50f1b93b%26scene%3D21%23wechat_redirect" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;你到底是干嘛的？&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMjM5ODQ2MDIyMA%3D%3D%26mid%3D205764092%26idx%3D1%26sn%3D267effc1e3639c9ed39169285423058b%26scene%3D21%23wechat_redirect" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;心向大海，重新起航&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;关于我所在的团队到底是干嘛的，那又是另一个故事了，我们以后再讲。&lt;/p&gt;&lt;p&gt;目前我的团队仍旧在招聘人才，已经收到了很多产品经理和 Mac App 开发的简历，后续会陆续发送面试通知。&lt;br&gt;新的招聘需求如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;资深 PHP 开发：熟悉 PHP 和 Linux，熟悉常规框架如Yii, PHP基本功扎实，熟悉PHP的SPL，多进程开发模型等。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;资深 Android 开发：浏览器内核架构师，负责 Android chromium 内核开发和维护。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;资深 Android 开发：资深邮件应用开发工程师，负责系统邮件客户端的开发和维护。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;ROM 产品经理：对做精致产品有冲动的产品经理。没冲动就别投了。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;我的邮件是：chijianqiang@smartisan.com&lt;br&gt;周末愉快！&lt;/p&gt;</description><pubDate>2015-05-15T21:47:49+08:00</pubDate></item><item><title>心向大海，重新起航</title><link>http://zhuanlan.zhihu.com/p/20029795</link><description>&lt;p&gt;周末下了一场连绵细雨，雨势不大，但是看不出要停歇的样子，没有抑扬顿挫，也没强弱变化，就像一场单调的告白。甚至，我记不起这场雨是什么时候下起来的。站在窗前，看着雨滴敲打玻璃窗，然后新的雨滴冲刷掉旧的雨滴，构成千变万化的图案。极目远眺，天空一扫往日阴霾，湿润的空气里有雨水和泥土的味道。我泡了一杯热茶，打开 Mac，简单回顾了一下自己十几年的职业生涯，并写下了这些文字。&lt;/p&gt;&lt;p&gt;我是池建强，很多年前人们都叫我小池，或池。现在除了初中同学，没人再叫我小池了，连老罗都叫我老池，虽然他比我大着几岁。当然，江湖上还有人叫我卖桃君，那是因为我写了微信公众平台 MacTalk。&lt;/p&gt;&lt;p&gt;我是一枚70后程序员，编程之余，间或写一些文字。以前代码写得多，到了这两年，写代码的青年才俊如雨后春笋般崛起，自己反而文字写得多了。&lt;/p&gt;&lt;p&gt;1998年毕业后我加入了一家直流电源公司，但终究心属软件，一年后进入洪恩，开启程序员之路。工作了十几年，有两家公司对我非常重要，一个是洪恩，一个是瑞友。前者让我获得了成长，我做了洪恩在线和数字校园这两个项目；后者让我独立实现了很多想法，做出了截止目前对我最为重要的一个产品「GAP 平台」，这款产品目前仍然服务于上千家企业，算是实现了我年轻时的一点理想，让自己的程序跑在千家万户的服务器上。&lt;/p&gt;&lt;p&gt;2011年我曾经为 GAP 平台规划了云加端的发展方向，同时制定了相应的开源计划，我希望把本地的开发平台挪到云端，并实现开发者本地开发、云端部署的策略。另外，云计算在半空中漂浮了那么多年，大家一直在做基础设施和基础技术环境，缺乏真正可以复用的技术和业务组件，而这些正是 GAP 擅长的。几经实验之后，我悲伤的发现，这终将是我的一厢情愿。IBM 和微软没有做成的事情，一个传统的软件厂商也很难实现，无论是资源、环境还是资金支持。&lt;/p&gt;&lt;p&gt;技术时代已经变革了，没有做出来的东西，有可能就是真的不被需要了。&lt;/p&gt;&lt;p&gt;在那段时间，我觉得世界是一片没有航标的大海，灯塔暗淡，大师隐世，我就像丢掉了海图和船锚的小舟，不知道自己的方向在哪里。丢掉了的海图，需要自己去找回来。2012年，我开始进行集中的写作，在帮助了很多读者的同时，也梳理了自己的思路，世界为我打开了另一扇门，原来的窗户也没关上。&lt;/p&gt;&lt;p&gt;2014年，我出版了一本技术人文类图书《MacTalk·人生元编程》，出书的过程，也让我想清楚了更多的事情。&lt;/p&gt;&lt;p&gt;在未来的日子里，瑞友科技将以自己的节奏、稳健的业务和良好的营收去赢得自己的荣光，而我，兴趣已经转移到了个人消费者和互联网领域，我将走上另一条道路，参与更为激烈的竞争、快速的技术更迭、更多的尝试和失败。在疲累之余，我也许能撷取路边散发着迷人香味的花朵，也许能品尝甘甜饱满的果实，也许，将一无所获。但这就是我未来十年的生活：充当探险者、开拓者，而不是守护者！&lt;/p&gt;&lt;p&gt;在瑞友十年创业，我从一个普通的程序员成长为公司技术负责人，结识了一大批优秀的人才，也得到了他们无私的帮助和支持。迎来送往，历经沧桑，吵过，笑过，醉过，最美好的十年已经过去了，我们总要继续向前！祝福和感谢那十年中所有的人！&lt;/p&gt;&lt;p&gt;2015年5月，我正式加入了老罗的「锤子科技」，开启了一段新的旅程。在锤子科技，我会带领一个优秀的团队，负责云平台、电商、运营支撑系统、OS X App 等软件的研发和运营。这些并不重要，重要的是，在未来十年，我希望能够做出一些改变人们生活的产品，这是我的理想，我想要实现它。&lt;/p&gt;&lt;p&gt;至于说我为什么选择了锤子科技，那是另外一个故事了，我们以后再讲。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;曾经梦想仗剑走天涯，看一看世界的繁华&lt;br&gt;年少轻狂的我，如今快要老啦&lt;br&gt;曾经向往四海为家，又见伊人绝世芳华&lt;br&gt;好男儿心向大海，只待明日重新起航&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;注：MacTalk 不会因为我工作的变化发生改变，主题和更新频率将一如既往！&lt;/p&gt;</description><pubDate>2015-05-13T18:17:36+08:00</pubDate></item><item><title>专注和游离</title><link>http://zhuanlan.zhihu.com/p/20017274</link><description>&lt;blockquote&gt;&lt;p&gt;该专注的时候，你游离了；该游离的时候，你专注了。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;最近一些读者的提问，包括与团队成员的交流，都涉及到了一个问题，如何才能快速的提升自己的能力，或者说为什么我提升的这么慢呢？&lt;/p&gt;&lt;p&gt;这里面其实存在一个误区，世界上根本不存在快速提升的神奇方法，什么21天学通 Linux C 编程，7天自学 Java 语言，17天搞定 GRE 单词，等等，都特么是骗人的。小时候书在我的眼中非常神圣，看到类似的标题我砰然心动，仿佛看到初恋情人，还没入手就开始幻想自己21天之后拔剑四顾满腹经纶的嘴脸。结果买了书之后，一个月发现自己只看了第一章节，而且每次都看第一章节，所以别提学通和搞定了，门都没入。&lt;/p&gt;&lt;p&gt;根本没有什么快速的提升，如果你在某段时间觉得自己提升得很快，那是因为你身边的大部分人成长得更慢，或者，他们安于现状，没有提升。提升从来稳定的，持续的，渐进的。在大部分领域，围棋、绘画、写作、编程、球类等，没有十年的持续学习和实践，基本上很难达到专家级别的水准。&lt;/p&gt;&lt;p&gt;既然明白了这一点，我们「不期速成，日拱一卒」就好了嘛，每天坚持在某个领域学习和实践两小时，那成功不就指日可待了么？有这么简单就好了！事实上，在这个到处充满诱惑力和信息碎片满天飞的时代，能够做到「日拱一卒」的人，少之又少。基本上，由于人的天性，大部分人不可能像苦行僧那样去学习和生活，我们常常是在需要专注的时候，游走在朋友圈、微博、美剧、游戏和各种无聊的垃圾信息之间；在需要游离放松的时候，我们却极度专注，打游戏或刷新朋友圈到深夜或凌晨。&lt;/p&gt;&lt;p&gt;一小部分天才和异人可以非常顺畅的在专注和游离状态之间切换，你看他们在刷微信，其实他们在阅读，你看他们在看美剧，其实他们在编程，这些人具备异乎常人的多线程处理能力，而且能做到「品学兼优」，玩得开心，学得高兴。&lt;/p&gt;&lt;p&gt;这叫天赋，我们普通人是学不了的。我直到三十岁以后，才慢慢找到了适合自己的方法和平衡点。等我搞明白了这一切之后，十年的差距已经过去了，想一想还是挺悲哀的。为了给自己打气，我就对自己说，你们这些少年天才也就那么回事，不就是比我们早十年想明白了很多事吗？不就是我们还在摸索的时候你们已经还是奔跑了吗？跑得再快能有刘翔快吗？能有乔布斯和盖茨看的远吗？也就那么回事，都不是神，道哥饿几顿眼里照样没神，说话照样有气无力！我们当北京的程序员，杭州的产品经理，野百合一样有春天！&lt;/p&gt;&lt;p&gt;有了这样的信念，我得以坚强的活到了今天。我的方法很简单，就是把每天晚上完整的时间归一堆，然后用刀切成两半，一半用来专注，一半用来游离。&lt;/p&gt;&lt;p&gt;状态好的时候我就会先专注的干一些事情，这段时间里我会屏蔽掉电话、微信、微博、美剧等一切干扰噪声，把相对完整的时间留给写作、编程、读书，或专心研究点什么，坚持一段时间，你的效率就会大大提升，你会发现自己的提升好像比以前快了那么一点点。&lt;/p&gt;&lt;p&gt;状态不好的时候，我就会处于游离的场景里，刷朋友圈，看微博和推特，看订阅的 Blog，读一些闲书，看美剧，拓展视野，寻找信息，彻底放松。这段时间就是用来消耗的，同时寻找有价值的东西，记下来，留在专注的阶段细细阅读和理解。&lt;/p&gt;&lt;p&gt;专注和游离状态交替进行，对我来说，似乎是最好的选择。一旦专注，你的效率就会比别人高那么一点点。一旦游离，你的视野就会比别人广那么一点点。假以时日，你的高度和广度上就会大大超越常人，把那些稀里糊涂过日子的人抛在脑后，同时可以远远的看见那些天才们的后脑勺或脚底板，这叫大器晚成。&lt;/p&gt;&lt;p&gt;写到这我想起了著名程序员、计算机博士徐宥翻译的一篇文章，叫做「十年学会程序设计」，结果去翻他的博客，居然不能访问了，颇为伤感。还好我摘录过他的一些文字，分享给大家。&lt;/p&gt;&lt;p&gt;关于编程上一些建议：&lt;/p&gt;&lt;p&gt;1、对编程产生感兴趣并因为乐趣而写程序。确信你自始至终都能乐在其中，这样你才愿意将十年光阴投入编程事业.&lt;/p&gt;&lt;p&gt;2、与其他程序员交流；阅读别人的代码。这比任何书任何培训都重要。&lt;/p&gt;&lt;p&gt;3、不断地编写。 最好的学习方法是在实践中学习 。从技术角度说，「在特定领域的个人最高效率并不因为经验够多就会自动获得；但若有意识的通过努力去提升经验，个人效率会变高」而 「高效的学习一般需要明确的任务和因人而异的适当难度，以及及时的反馈和重复或者修正错误的机会」（20～21页）Cognition in Practice: Mind, Mathematics, and Culture in Everyday Life （实践中认知：心智、数学与日常文化） 是这个观点的一本有趣参考书籍。&lt;/p&gt;&lt;p&gt;4、跟其他程序员一起完成项目。在一些项目中成为最好的程序员；在一些中则充当最差的一个。当你是最佳的，你要测试自己领导项目的能力，并以你的能力鼓励他人。当你是最差的，要看看高手做些什么，他们不喜欢做什么 (因为他们会叫你去帮他们做).&lt;/p&gt;&lt;p&gt;5、接手别的程序员完成项目。全心投入并理解别人的程序。当原作者不在的时候，看看在理解与修改时有什么要注意的。想想如何设计你的程序使得后来维护的人容易上手。&lt;/p&gt;&lt;p&gt;6、至少学会六门编程语言。一种要支持类/对象(class abstractions)的语言，如Java或C++；一种函数式(functional abstraction)语言，如 LISP 或 ML；一种支持语法抽象(syntactic abstraction) 的语言 如 LISP；一种声明式语言，如Prolog或 C++模版；一种支持协同式(coroutines)编程，如 Icon 或 Scheme；还有一种支持并行(parallelism)的语言，如 Sisal。&lt;/p&gt;&lt;p&gt;7、并具备良好的判断力，也别老纠缠在语言标准化上。&lt;/p&gt;&lt;p&gt;至少要六门编程语言，想一想自己接触了几门，熟悉了什么，掌握了多少，共勉！&lt;/p&gt;&lt;p&gt;文章来自公众号 MacTalk，付费转载，扫描关注。&lt;/p&gt;&lt;img src="https://pic2.zhimg.com/0ffe7f61ac4c85c70b5cc26542306515_b.jpg" data-rawwidth="430" data-rawheight="430" class="origin_image zh-lightbox-thumb" width="430" data-original="https://pic2.zhimg.com/0ffe7f61ac4c85c70b5cc26542306515_r.jpg"&gt;</description><pubDate>2015-04-30T13:55:22+08:00</pubDate></item><item><title>闲适有毒</title><link>http://zhuanlan.zhihu.com/p/20005289</link><description>&lt;p&gt;某一周的某一天，我突然收到 InfoQ 中国掌门人泰稳·仁波切的微信，微信里的对话是这样的……&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;老池，时光荏苒岁月如梭，8年「biu」的一声就过去了，InfoQ 都八岁了，你能不能把自己八年的感想和经历炖一锅鸡汤带到现场让大家尝尝？&lt;br&gt;泰稳此言差矣，你现在已经是技术圈的百晓生、鸡汤界的鲁智深了，怎么还会缺我这一碗？&lt;br&gt;嗯，自己夸自己总是不好下死手的……&lt;br&gt;懂了，放着我来！&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;之后泰稳在微信上扔了几个笑脸过来，三晃两晃消失在朋友圈茫茫的时间线上，我放下手机，陷入了深深的思考……&lt;/p&gt;&lt;p&gt;就这样思考……&lt;br&gt;&lt;img src="https://pic1.zhimg.com/da9b55e021d18ddd3d74803a146934a8_b.jpg" data-rawwidth="1024" data-rawheight="683" class="origin_image zh-lightbox-thumb" width="1024" data-original="https://pic1.zhimg.com/da9b55e021d18ddd3d74803a146934a8_r.jpg"&gt;&lt;/p&gt;&lt;p&gt;InfoQ 中国都八年了，时间过的真快，我依稀记得八年前那个面容鲜活的泰稳，当然，现在他更鲜活了，事业和视野也更开阔。八年时光，消耗了一个普通人十分之一的岁月，泰稳从一个二十多岁的小伙子，长成了三十多岁的中年人，我从三十冒头的年轻人，到了四十不惑，人生并不宛如初见，世界在改变，我们每个人都变了。&lt;/p&gt;&lt;p&gt;八年时光，你们都经历了什么？变成了一只豹，还是一匹狼，一头雄狮，亦或蜕化成了一只温顺的绵羊，还是把头埋入沙土的鸵鸟？&lt;/p&gt;&lt;p&gt;在工作了十个年头之后，我以为自己已经洞悉了技术人生的奥秘，我对自己说，你现在所有的艰辛付出、编程写作，只是为了在下一个十年之后，可以扔掉键盘和鼠标，过上两碗豆浆再加红糖的生活。退休，然后让自己闲下来，去做自己喜欢做的事情。&lt;/p&gt;&lt;p&gt;时光倏忽而过，不知道哪一天我就突然开始面对传说中的四十不惑，偶尔向过去稍稍四顾，只见生活中曲折灌溉的悲喜，都消失在了亘古的时光里，只有那些忙碌和汗水，像雕刻在时光机上的花瓣，安静，永恒，散发着美妙的气息。而那些闲散的、舒适的、无聊的岁月，要么沉在深水河底消失无踪，要么代表了一段低迷或某个转折，不外如此。&lt;/p&gt;&lt;img src="https://pic3.zhimg.com/096cebac97a180430bd7d00324076106_b.jpg" data-rawwidth="736" data-rawheight="1104" class="origin_image zh-lightbox-thumb" width="736" data-original="https://pic3.zhimg.com/096cebac97a180430bd7d00324076106_r.jpg"&gt;&lt;p&gt;花瓣很美，闲适有毒！&lt;/p&gt;&lt;p&gt;很久以前有一个朋友，他是项目经理，自己每天要面对多个项目和上百人的团队，搞定了团队和进度，还有刁难的客户和无穷尽的需求在前面等着。忙碌，并且疲惫不堪。有段时间他常常拉着我说，兄弟，你说这世界上还有比我惨的吗？我说有啊，比你惨的人多了去了，冯老师就比你惨！他说，你丫都不懂我的心。&lt;/p&gt;&lt;p&gt;后来他以三十几岁的高龄重修英语，然后用了一年半的时间办理移民手续，两年后，他卖掉了北京的房子，全家移民去了加拿大，从此过上了闲适的生活……蓝天、白云、钓鱼、烧烤。&lt;/p&gt;&lt;p&gt;半年后他从微信发来信息：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;你说我做点什么小生意好呢？现在闲的没着没落的，慌。&lt;br&gt;不是有蓝天白云吗？&lt;br&gt;看多了和雾霾天是一样一样的。&lt;br&gt;那还可以钓鱼烧烤呢？&lt;br&gt;我现在闻着烧烤的味儿就想吐，基本上就告别烧烤界了。&lt;br&gt;怎么不搞项目管理了？&lt;br&gt;这里的老外没人让我管……不被搞已经很开心了。&lt;br&gt;……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;然后他真的开了一家小店，红红火火的经营起来了。他又开始变得忙碌和充实，也不再给我发微信了。&lt;/p&gt;&lt;p&gt;如果你忙的不可开交，除了提醒自己要时不时的抬头看路之外，真的没什么可抱怨的，这是好事，生活的本质就是让自己忙碌起来，然后把一件事情做成，再把另一件事情做成。真正该抱怨的是那些处于舒适区的、闲散的人们。我清楚的记得自己每一次处于恐慌和焦虑的时候，都是因为在某个领域处于舒适区太久，缺乏挑战，生活闲适造成的，每一次改变也是由此开始。&lt;/p&gt;&lt;p&gt;所以，如果你在某个岗位上没什么事又缺乏挑战，那就是时候去考虑去寻找下一件要做的事情了。如果你是一个领导者，那么一定要让团队里的人因为正确的事情忙碌起来，这简直太重要了，切记切记。&lt;/p&gt;&lt;p&gt;让自己有节奏的忙起来！有时候我甚至认为，这可能就是生命的全部意义。&lt;/p&gt;</description><pubDate>2015-04-17T11:17:50+08:00</pubDate></item><item><title>最可怕的产品经理</title><link>http://zhuanlan.zhihu.com/p/19990518</link><description>&lt;p&gt;很久以前，PM 两个字母的缩写代表了 Project Manager（项目经理），那是一个软件工程横扫世界的年代，人们为了精准的完成一个软件项目，设计出了各种开发规范和工程过程，项目经理可以制定出细致到每个月每个周和每天的工作计划，最后，项目延期了……&lt;/p&gt;&lt;p&gt;时至今日，PM 早已改弦更张，成为产品经理的代名词，在这样一个以用户和产品为中心、设计和用户体验改变世界的时代里，产品经理被赋予了太多的职责和意义，他们主宰着产品的特征、设计、实现和用户心理，如果负责了公司的核心产品，他们甚至决定了公司生死存亡的命脉，他们画原型如拾草芥，做交互如履薄冰，产品特性增一个就多了，减一个就少了，他们始终念念不忘的是：设计上的完美并不是没有东西可加，而是没东西可减。&lt;/p&gt;&lt;p&gt;不一定有回响……&lt;/p&gt;&lt;p&gt;产品经理常常处于各种纠结之中，他们想尽可能让产品表现的聪明而有原创性，又担心自我的迷失，因为人们在登山的时候总是会忽略那些能够直达目标的小径，我们被蓝色湖泊上飘荡着雾气吸引，在高山上怒放的美丽花朵之间徜徉，而忘记了真正的目标。然后，很多产品就这样死掉了……在这样一个创业者遍地开花的年代，大部分的产品不仅会老去，而且会消失，这是它们的宿命，也是产品经理的宿命。&lt;/p&gt;&lt;p&gt;不过产品经理们是不会屈服的，因为有两个神一样的产品经理永远伫立他们的前方，对于他们来说，乔布斯和张小龙是偶像，也是永远无法跨越的鸿沟，神的每个举手投足都能吸引亿万人的目光，让人仰望，让人忧伤，就像盖茨和林纳斯之于程序员。&lt;/p&gt;&lt;p&gt;有灯塔就有远方，就有希望！&lt;/p&gt;&lt;p&gt;做为一个程序员，我曾经屡次在文章中写过产品旺和程序猿相爱相杀的文字，有调侃，有玩笑，有故事，有些当然并不是很合适的，因为有人告诉我「亲，给我们产品旺团队留一条活路吧」「产品经理也很脆弱的」「难道只有程序猿很敏感吗？」「性命这种事情，我看的很淡」等，我意识到了问题的严重性，静下来想一想，我这么做确实值得商榷，所以我会在这篇文章里「好好夸夸」产品经理。大家黑的好，才是真的好！&lt;/p&gt;&lt;p&gt;由于「人人都是产品经理」，所以很多人误以为产品经理是个门槛很低的职业。很多年轻的朋友经常瞪着水汪汪的小眼睛问我一个难以启齿的问题：「大叔，我想转产品经理，学点啥呢？」遇到这种问题，我只能拍拍他/她的肩膀说「孩子，我也想转，咱们有的学呢……」&lt;/p&gt;&lt;p&gt;虽然产品经理已经被无数本「产品经理书」定义过了，我还是想给它下个定义，简单来说，我认为产品经理是能对事情（产品）负责的人，从某个产品或特征的诞生，到原型、交互、实现、上线，他会像种植一棵树苗一样去呵护产品，通过各种方式协调一切可以协调的资源，让这个树苗存活，成长，开花，结果。为了让正确的事情发生，他会动之以情，晓之以理，动用抱大腿，跪求，威逼，利诱，隐忍，请吃海底捞……等各种常规或非常规手段来达成目标。一旦树根伸展到大地深处，紧紧的抓住地下的泥土，树冠伸向蓝天，吸收阳光和雨露，产品就成了鲜活的生命，这时候产品经理就会冷静的站在一边，看产品的成长，看产品与用户、用户与用户之间的交互，分析运营数据，并找到之间的关联，以期给产品更好的回馈，并准备下一次的迭代。&lt;/p&gt;&lt;p&gt;优秀的产品经理需要掌握的知识体系可能是 IT 领域最庞杂的，他们需要精通产品相关的业务领域知识，懂设计，懂营销，懂市场，懂心理学，理解时尚，最好是产品的典型用户，沟通和协调能力是必备技能，对数据敏感，能够及时反馈和调整。丁香园的产品经理、二爷鉴书的作者邱岳曾经说过一句迄今为止最有价值的话：产品经理最重要的能力不是某一项技能，而是「让正确的事情相继发生」。要想做到「正确和相继」，你就需要很多项技能，并不断打磨这些技艺，才能把「好的产品」扶上马，再送一程。&lt;/p&gt;&lt;p&gt;优雅的做产品，不复杂、不冗余、不消耗更多的资源，沉浸在产品的世界里，就像《财经》宋玮描写张小龙的状态：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;他更愿意活在自己能掌控的世界中，而对于无力去掌控的东西没兴趣。现在他可以掌控的东西越多，也就变得愈发的强大和自信。他穿着短裤在办公室里走来走去，确保团队开发出的每一行代码和每一个产品细节都灌注了他的情感。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;每个产品经理都梦想达到这样一种状态吧。&lt;/p&gt;&lt;p&gt;对于产品的实现者——程序员来说，江湖上有两种产品经理是最可怕的（或者说最可爱），如果你遇到了，可能是你的幸运，也可能是你的噩梦！&lt;/p&gt;&lt;p&gt;一种是设计出身的产品经理，他们对产品功能的定义会精确到每一个滑动，对界面的UI 的要求会准确到每一个像素。一旦设计完成了，他们会要求你100%按照设计去完成产品功能、UI 和效果，差一个像素都是不可接受的。这种产品经理往往出自设计和产品导向的公司，他们在公司「书生意气，挥斥方遒，指点江山，激扬文字，粪土当年程序猴」，而我们，程序员，要么被虐的死去活来黯然离去，要么涅磐重生再创辉煌，没有第三条路可走。&lt;/p&gt;&lt;p&gt;另一种是从技术领域转过来的产品经理，有些人甚至对技术的理解达到了庖丁解牛的程度（比如张小龙）。当你对丫说这个效果或功能无法实现时，他会默默转身离开，过一会儿就扔过一段代码过来，邮件标题是：你看这样实现行不行？&lt;/p&gt;&lt;p&gt;所有人都沉默了……&lt;/p&gt;&lt;p&gt;沉默之后的反应一般有两种，一种是聚在一起握拳顿足努力声讨：我们中间出了叛徒。另一种是躲在角落暗自垂泪：等哥转了产品经理，也要好好虐一下程序员（很奇怪为什么不是去虐产品经理……）&lt;/p&gt;&lt;p&gt;事实上这两种产品经理都值得我们珍惜，有挑战才会有提升，他们会逼迫我们拿出100%的努力去实现最好的产品！如果你遇到了一个非常好说话的产品经理，那唯一的可能就是你是个美女程序员，他是个男产品经理……&lt;/p&gt;&lt;p&gt;最后多说一句，产品经理的品位非常重要，如果你做了好几款产品都失败了，那就要检视一下是不是自己的品位出了问题。如何提升品位呢，「Lake，你应该多读点书啊……」&lt;/p&gt;&lt;p&gt;文章来自微信平台「MacTalk By 池建强」，禁止转载。&lt;/p&gt;</description><pubDate>2015-03-31T13:22:21+08:00</pubDate></item><item><title>人为什么活着</title><link>http://zhuanlan.zhihu.com/p/19980535</link><description>&lt;p&gt;自从王垠的博客重新开放之后，做为一个热爱写作的程序员，我每隔一段时间会去他的博客上看看有什么新的东西。我个人非常欣赏和尊重王垠，抛开纯粹的情绪宣泄和某些过激的批判，他发表的文章是非常耐读的，很多文字给我带来了启发和思考。&lt;/p&gt;&lt;p&gt;昨天在知乎上看到「王垠为什么想要轻生」的问题后吓一跳，翻了一下发现是王垠在简书上的一段文字造成的，相关的文章王垠已经删掉了，只留下了知乎的一片截图：&lt;/p&gt;&lt;img src="https://pic4.zhimg.com/2089f065ba1a24a8b13e6c673289c9b7_b.jpg" data-rawwidth="600" data-rawheight="222" class="origin_image zh-lightbox-thumb" width="600" data-original="https://pic4.zhimg.com/2089f065ba1a24a8b13e6c673289c9b7_r.jpg"&gt;&lt;p&gt;从文字内容上来看，这应该是王垠自己的情绪宣泄，不会有大问题，于是顺手写了一个答案，今天再看，很多想表达的东西没有写出来，于是有了今天的文章。&lt;/p&gt;&lt;p&gt;毫无疑问，王垠是个特立独行的人，他的名校连续退学，对知名大公司的抨击，对编程语言和技术框架的批判等等行为，让有些人喜欢他，有些人嘲笑他，有些人讽刺他，但这些对王垠并不重要，他只是在探索这个世界的过程中发出了真实的信息，表达了真实的情感，这在现实世界里是非常难能可贵的。&lt;/p&gt;&lt;p&gt;读了很多王垠的文章，我只觉他一直在追逐一个理想中的研究性质的世外桃源，其间鸟语花香、平等祥和，没有歧视，没有功利，没有政治，甚至没有各种文化，大家默默去追逐技术神山上的最高荣耀。王垠是个理想主义者，但是现实中没有这样的桃源，中国没有，美国也没有，所以王垠才会困惑，并不断的表达自己对世界的抗争，所以会想到生死，想人为什么要活着。&lt;/p&gt;&lt;p&gt;人生一世数十载，每个人在某个阶段都会考虑到这个主题「人为什么要活着」，大部分人都是想想远方，然后就去忙现实中的苟且了，但执拗的人会在这个问题上纠缠不清。王小波也写过类似的文章，他说：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;不过活着总得死，这一点是不错的，我有时对这一点也很不满意呢。&lt;br&gt;总之，我认为人不应当忽视自己，生活就是自己啊。总要无愧于自己才好。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;世界就是这样，操蛋也好，荒谬也罢，人最不应该忽视的就是自己，生活就是自己！做一个理想主义者没什么不好，但理想主义同样包含着隐忍、妥协和协作，为了达成理想，能让正确的事持续的发生，那你付出的一切都是值得的。&lt;/p&gt;&lt;p&gt;王垠的同学王益的一段评价写的挺好：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;王垠是个理想主义者，而我们大多数人其实是机会主义者，寻求 Survival。我以为两类人都值得敬佩：机会主义者是社会主流，实际上起着勤恳的工蚁的作用，是社会进步的主力；理想主义者是少数，像指方向的灯塔。有的灯塔方位不对，有的灯光暗淡，不能给人信任感，但无论如何，这世界不能少了灯塔&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;至于王垠的技术水平，我觉得没什么可质疑的，他在语言和解释器等领域已经达到了极高的水准，是个天才。&lt;/p&gt;&lt;p&gt;2005年，王垠为第一作者的论文参加 IEEE/ACM Asia andSouth acific Design Automation Conference (ASP-DAC 2005)国际学术会议获得Best Paper Award。当然，这篇论文不足以说明他的才能。&lt;/p&gt;&lt;p&gt;王垠在Google做过两次的实习生。其中一次做的是一个 Google 内部检索所有项目代码的工具，负责这个项目的 Steve Yegge 开始时对王垠的想法持有巨大怀疑态度，但最后还是支持并承认王垠的项目是Steve本人「与实习生合作 20 年间遇到的最技术领先的」。&lt;/p&gt;&lt;p&gt;至于王垠在 Github 上放出来的「40 行 cps.ss 代码」，普通的开发人员是完全无法理解，当然理解了也对应用级别的开发没什么用。我对自解释器知之甚浅，也读不懂「汗」。还是引用知乎上「wsivoky」的描述吧，我认为这段文字是最贴切的：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;用写作来比喻编写自解释器级别的代码，就像你在写一本小说，而小说的主角也在写一本小说，这位主角在描写你，对你的刻画会影响到你，你受到影响之后又会改变小说中的主角，从而影响到他对你的描写。你俩要相安无事，情节合符逻辑地发展，直到最后圆满的结尾。这比写一本普通小说可难多了。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;当然，这些对他来说也不重要。&lt;/p&gt;&lt;p&gt;至于王垠发表的文章，那是他个人对世界发出的讯息，有回声，我想他会很开心，没有的话估计也没有多大失望。很多人会说王垠你为啥不改改呢？你有本事去创造或发明更牛逼的技术呀，你可以成为一代宗师啊！&lt;/p&gt;&lt;p&gt;这就是看客的问题了，王垠强迫你和他一样成为一个理想主义者了么？一个人，可以选择做出顶尖的成就，也可以默默无闻度过一生，他们不需要向看客证明什么，就是这样。至于个人的心智，我想，对于高手来说，只能自我成长。&lt;/p&gt;&lt;p&gt;于我而言，我只是希望王垠能够找到能理解他的朋友和爱人，快乐的生活，并写出更好的文章。&lt;/p&gt;&lt;p&gt;人为什么活着？因为总要无愧于自己才好啊！&lt;/p&gt;&lt;p&gt;——————————&lt;/p&gt;&lt;p&gt;文章来自微信平台「MacTalk By 池建强」，禁止转载。&lt;/p&gt;</description><pubDate>2015-03-19T09:59:56+08:00</pubDate></item><item><title>创业和做点小生意究竟有啥区别？</title><link>http://zhuanlan.zhihu.com/p/19978832</link><description>&lt;p&gt;小明和小强是好朋友，也是邻居，他们住在炎热的车迟国。车迟国位于赤道边缘，气候的特点就是热。尤其到了夏天，大片的阳光就像一团火，没辙没拦、铺天盖地的打在你的身上，可谓烈日炎炎似火烧。灼热，所以不快乐！&lt;/p&gt;&lt;p&gt;是时候为后院搭一片阴凉了！&lt;/p&gt;&lt;p&gt;小强是个说干就干的家伙，他冲出房间，冲进商店，非常冲动的购买了一个巨大的遮阳伞。在灿烂的阳光里，小强把笨重的遮阳伞拖到后院，安装，加固，搭配了沙滩椅。一阵忙活之后，小强的后院有了一片阴凉。他躺在沙滩椅上，从冰桶中拿出冰镇的啤酒，一边啜饮，一边读书，火热的太阳已经被巨大的遮阳伞隔开，生活似乎变得美好了一些。小强对这个结果非常满意。&lt;/p&gt;&lt;p&gt;小明性格比较沉稳，他和小明的朋友们商量了一阵子之后，去苗圃买了一株小树苗，然后把这株树苗种到了后院，浇水、施肥、剪枝，精心照料。&lt;/p&gt;&lt;p&gt;为了有片阴凉买棵树苗！这是行为艺术吗？小明是不是疯了？&lt;/p&gt;&lt;p&gt;小明没疯，看客快疯了。&lt;/p&gt;&lt;p&gt;但事情并没有那么顺利，因为环境、温度和植物特性等因素，很多树苗没有长成就枯萎了，有的长大了一些，但是方向却不对，不仅没有形成树荫，还占了别的空间，这样的树苗也需要剪掉重来。&lt;/p&gt;&lt;p&gt;很多次失败经历之后，小明还是没有享受到阴凉。小强的冰镇啤酒已经喝了好几箱了，书了读了一大摞。他搞不明白的是，小明到底在干什么？&lt;/p&gt;&lt;p&gt;小明在继续种树，他研究了当地的土质和气候，从不同的苗圃买来不同类型的树苗，持续实验。终于，有一个小树存活下来，并开始快速成长，小明高兴极了，并付出了更大的努力。在这个过程中，小明没有获得任何收益，这棵树只是用去了更多的水、肥料和时间。很多人觉得小明确实疯了。尤其是小强。&lt;/p&gt;&lt;p&gt;时光荏苒岁月如梭，几年过去了。小树苗终于长成了参天大树，树根伸向土地深处，汲取养料，树冠尽可能的延展到天际，遮天蔽日，它不仅为小明挡住阳光，同时为更多的人带来了阴凉。树上结了很多好吃的果实，并且有了种子。有了这棵大树，小明认识了更多的朋友，他可以看看天，看看地，享受阳光或阴凉，用树上的果实招待小明的朋友们，并和他们聊天，并开始讨论，除了这棵树，大家还能做些什么……&lt;/p&gt;&lt;p&gt;小强的遮阳伞依然再为小强提供阴凉，但是伞没有长大，也没能结出果实。&lt;/p&gt;&lt;p&gt;——————————————————&lt;/p&gt;&lt;p&gt;小生意就是用来解决问题，产生收益，甚至从第一天开始就有利润了，不需要太大投资，也不需要承受太大风险。但是这种生意也没有很大的上升空间，不仅无法实现从0到1的创新，甚至没法做到从1到 n 的复制。就像那把遮阳伞。&lt;/p&gt;&lt;p&gt;而创业，就像你去种植一棵小树苗，初期什么都得不到，树苗还会消耗你的各种资源，水、肥料、时间和金钱，无论你勤奋也好，疲累也罢，树苗就那样慢慢生长，不疾不徐。很多树苗在成长为一棵大树之前死掉了，你可能会万念俱灰，可能会精疲力尽，但第二天起来，你只能告诉自己「面对挫折和打击，不要伤心、不要难过、不要沮丧，不要控诉、不要愤怒、不要抗议，只管埋头默默擦亮你的锄头，准备下一次的种植」。&lt;/p&gt;&lt;p&gt;一旦创业成功，小树苗长成了参天大树，它就会持续的为你聚集资源，赢得财富，还会结出新的果实，生出种子，然后出现新的树苗，生态圈就这样形成了。&lt;/p&gt;&lt;p&gt;人皆苦炎热，我爱夏日长。选择买伞，还是种树，都是一种生活，选择就好！&lt;/p&gt;&lt;p&gt;以上故事原型来自 Quora 上的一个问答，我做了翻译和改编之后，炖成一碗鸡汤，趁热喝吧。&lt;/p&gt;&lt;p&gt;题图来自 MacTalk π 节女读者&lt;/p&gt;</description><pubDate>2015-03-17T09:28:09+08:00</pubDate></item><item><title>客栈里的吐槽声</title><link>http://zhuanlan.zhihu.com/p/19974132</link><description>风，冷风，冷风吹。&lt;br&gt;&lt;p&gt;我推开 Uber 的车门，抬腿下车，刀割一般的冷风凌厉的打在我的脸上，我缩了缩脖子，抬头，「极客客栈」四个大字赫然呈现在眼前。我开始有点后悔，月黑风高，为什么要来趟这趟浑水？&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;师傅，车钱多少？&lt;br&gt;Uber 是自动扣款的你不知道吗，悟空……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;师傅绝尘而去，只听「叮咚」的一声，58块现大洋从支付宝账户消失了，我顿感怅然若失。&lt;/p&gt;&lt;p&gt;进入大厅以后，一群年轻的少年侠客正在大厅里舞刀弄剑，男生帅气，女生俊美，无论是比划还是交谈，都显得活力充沛，生气蓬勃。每个人笑起来的时候，会露出孩子般幼稚天真的笑容，仿佛能融化冬天里最寒冷的冰霜。「未来的江湖是我们的」，这句话写在这些年轻人的脸上。我用计算器算了一下自己的年龄，更加觉得自己在月黑风高夜来到极客客栈是一个错误。&lt;/p&gt;&lt;br&gt;今天是江湖第一帮西域苹果派的大日子，据说这个神秘的帮派要在今晚发布两件神兵利器，吸引了江湖上一众高手前来观摩，赞叹者有之，鄙夷者有之，热闹非凡。由于离发布会时间尚早，客栈为到场的看官们准备了两场演出：《模仿游戏》和《五十度灰》，大厅里的少年们听说有演出看，纷纷扔掉手中的刀剑跑过来做流口水状，哇，五十度灰！好吧，老夫也是为五十度灰来的……可是为什么偏偏要先放模仿游戏呢？&lt;br&gt;&lt;p&gt;观影过程中我不断的被电话和微信打扰，回复微信，出去接打电话，然后再回复微信，循环往复，好在这部电影也没什么可看的……&lt;/p&gt;&lt;br&gt;当我再次回到演播大厅时，五十度灰已经开始了，其实有一部分是可以快进的……终于等到剧情、情绪、衣服、房间、器械都到了完美境地的时候……「池老师，直播间已经准备好了，请您移步另一间客房」！&lt;br&gt;&lt;p&gt;What the F***！&lt;/p&gt;&lt;p&gt;吐槽大会正式开始了，程序员代表、腕表界时尚人士、智能手表开发者、前苹果员工等一一就坐，手抚刀锋，等待苹果掌门人库克出场。&lt;/p&gt;&lt;p&gt;事实证明这种类型的吐槽大会是非常不明智的。小小的房间里坐了六七个话唠，每出一个画面就有人想得瑟一下，有赞叹的有挖苦的有卖萌的还有拍案而起的，诸如此类，我作为一个安静的中年男子，几乎听不清库克和苹果的各位高管到底在唠什么嗑。可以想象一下，如果你在看一场万众瞩目的球赛，屏幕旁边有七八个解说，各地口音都有，每个都是刘建宏的水准，你会不会产生砸掉电视的冲动？会不会？&lt;/p&gt;&lt;p&gt;当时我在杀人与忍住不杀之间徘徊良久，想到了 MacTalk，想到了 MacTalk 读者，默默归剑入鞘，加入了话唠的行列……&lt;/p&gt;&lt;p&gt;首先出场的是12寸的 MacBook，不是 Air 也不是 Pro，而是一个新品类（Apple TV 就这样默默的被所有媒体忽略了，我们有伟大的墙）。&lt;/p&gt;&lt;p&gt;MacBook 号称史上最纤薄的笔记本，而且提供了银、灰和金三套战衣。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;你们把它做的这么帅是要给丫找个女朋友吗？&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;MacBook 的全键盘设计真的是惊艳无比，而且每个键都配置了 LED 夜灯。键位设计也从传统的剪刀式结构改为碟式结构，按键不仅更加稳定和灵敏，而且占用的垂直空间更少。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;啥是全键盘？&lt;br&gt;就是很全的键盘，一直延伸到面板边缘……你丫还是看图吧&lt;br&gt;&lt;img src="https://pic2.zhimg.com/6ef9a28028bc677de2cfd2eb35bd7989_b.jpg" data-rawwidth="1560" data-rawheight="909" class="origin_image zh-lightbox-thumb" width="1560" data-original="https://pic2.zhimg.com/6ef9a28028bc677de2cfd2eb35bd7989_r.jpg"&gt;&lt;br&gt;啥是碟式设计？&lt;br&gt;……就是键盘比以前更好用了，你不用因为 MacBook 键盘烂为丫单独配个外置蓝牙键盘&lt;br&gt;有 HHKB Pro 2 好用么？&lt;br&gt;滚出去&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;为追求安静、高能效的表现，全新 MacBook 彻彻底底重新设计。我们选择了运行功率只有 5W 的第五代 Intel Core M 处理器，再对 OS X Yosemite 进行整体优化，令其能效进一步提升。由于处理器和 OS X 如此高效节能，整个系统只产生极少的热量，因此不需要风扇为电脑散热。哗~~整个世界清净了……&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;三伏天还能摊鸡蛋饼吗？&lt;br&gt;你不是有空调吗？&lt;br&gt;冬天怎么办？我们北方有暖气的&lt;br&gt;保安，把这个胖子拖出去……&lt;br&gt;OS X Yosemite 预发布版10.10.3一堆 bug 是优化的结果吗？&lt;br&gt;拖出去，斩&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;为了最简设计，全新 MacBook 机身只有一个耳机孔和 USB-C 端口，全新的 USB‑C 端口除了充电，还可以进行 USB 3 快速数据传输以及视频输出。而且它设计精巧，双面可用，大小仅仅是现有 USB 端口的三分之一。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;SD读卡槽呢？&lt;br&gt;没了&lt;br&gt;那怎么办？&lt;br&gt;你可以在旧的 Macbook Pro 上用嘛&lt;br&gt;充电的时候想接 USB 和输出视频怎么办，你知道很多视频是存在移动硬盘上的&lt;br&gt;你可以买个588元的转接头，可以接电源、视频和 USB&lt;br&gt;闪电口呢？&lt;br&gt;没了&lt;br&gt;我想接网线怎么办？&lt;br&gt;没有全天候 Wi-Fi 你还是别用 MacBook 了……&lt;br&gt;What the F***！&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;全新的 Force Touch 触控板为 Mac 的触控带来了全新的体验，力度感应器会检测你点按的力度，全新的 Taptic Engine 能对你在触控板表面任何位置的按压操作做出点击回应。有了 Force Touch，过去单一、机械的点按操作，现在可以触发更多功能。&lt;/p&gt;&lt;p&gt;吐槽室终于传来了久违的赞叹声，两个程序员击掌相庆，Mac 的触控又多了一个新手势……&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;啥意思？原来点触控板没反应？&lt;br&gt;原来只能检测点击和按下，现在可以检测按压的力度，并根据力度做出不同的反馈&lt;br&gt;有啥用？&lt;br&gt;比如快进视频时能够根据点击的力度确定快进的倍速，而不需要多次点击&lt;br&gt;为啥屏幕不能触控，那才是全新的触控体验吧……&lt;br&gt;拖出去吧！&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;第一件神兵利器 MacBook 华丽丽的结束了演出，没被拖出去的人面面相觑，不知如何是好。客栈的主人为了打破尴尬的气氛，问道：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;你会买全新的 MacBook 吗？&lt;br&gt;会啊，我喜欢金色&lt;br&gt;我喜欢 Retina 屏的清晰和轻薄&lt;br&gt;键盘还是挺棒的，触控板居然能检测压力了&lt;br&gt;没风扇也挺好，安静&lt;br&gt;我的 Macbook Pro 坏了&lt;br&gt;才11000……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;期盼了两个季度的 Apple Watch 终于登场了，剩下来为数不多的几位开始摩拳擦嘴……&lt;/p&gt;&lt;p&gt;让强大的科技贴近于每一个人，是我们一直以来的目标。Apple Watch 为科技掀开了全新的一页，它将人与科技拉得更近。作为我们第一款为穿戴而生的个人设备，从任何方面来说，它都实现了科技与你前所未有的贴近。&lt;/p&gt;&lt;p&gt;非同一般的精准计时，同全球标准时间的误差不超过 50 毫秒，有了苹果表，你就可以按照毫秒生活了……沟通巴拉巴拉，健身巴拉巴拉，款式巴拉巴拉……&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;有没有上次发布会没讲过的内容？&lt;br&gt;急P，马上就来&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Apple Watch 不仅可以随时查看短信，还可以接打电话，我在5岁时就梦想着能用手表接电话了，这一天终于来了。库克热泪盈眶！&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;没有 iPhone 能接电话吗？&lt;br&gt;不能&lt;br&gt;我没有 iPhone&lt;br&gt;没有你看个鸡毛 Apple Watch 发布会，滚出去&lt;br&gt;我有 iPhone&lt;br&gt;你会用 Apple Watch 接电话吗？&lt;br&gt;我用 iPhone 接电话&lt;br&gt;滚出去&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Apple Watch 配备特制的心率传感器，能够检测你在锻炼过程中的心跳频率，协助判断你的运动强度，并提高主动消耗卡路里测量值的准确性。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;哗……此处有掌声，不跑步的人根本不知道控制心率对运动和健康有多么重要。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;由于配有加速感应器，在步行、跑步和骑车等户外锻炼时，Apple Watch 可利用 iPhone 上的无线网络和 GPS，更精确地测量距离和速度。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;我没有 iPhone&lt;br&gt;……&lt;br&gt;我跑步时不想带 iPhone 才会买 Apple Watch&lt;br&gt;……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Apple Watch 能连续用蓝牙听音乐6.5小时，打电话3小时，在运动模式中，Apple Watch 能够监测心率7小时，正常使用可以保证至少18小时的续航时间……Amazing！&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;上天天保佑苹果不要进入汽车领域……&lt;br&gt;为啥？&lt;br&gt;因为苹果会让人们觉得汽车一天一充也是非常正常和合理的&lt;br&gt;Amazing！&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Apple Watch 共有三款，运动版300多刀，普通版500到1000刀，EDITION 版呢，就有点不同了，它唯一，它特别，它采用了深海寒冰 18K 精金炼制，所谓「武林至尊，宝刀屠龙，号令天下，莫敢不从」，便是如此，这块表的售价是一万到两万刀币，欢迎选购。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;确定是万吗？&lt;br&gt;是的&lt;br&gt;……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;发布会结束之后，客栈里形成了两个派系，一个是：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;你有 iPhone 吗？没有，那你买 Apple Watch 干嘛？&lt;br&gt;你有 iPhone 吗？有，每天都装着？嗯。那你买 Apple Watch 干嘛？&lt;br&gt;你有 iPhone 吗？有，每天都装着？不。那你买 Apple Watch 干嘛？&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;另一个是：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;你觉得 Apple Watch 怎么样？期待已久！你会买吗？当然。&lt;br&gt;你觉得 Apple Watch 怎么样？烂，无惊无喜。你会买吗？会，我要看看丫烂到什么程度！&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;我若有所思，离开了热闹的极客客栈，寒风迎面而来，我缩了缩肚子，真的要开始跑步了，否则找什么理由买 Apple Watch 呢？&lt;/p&gt;&lt;p&gt;买 Apple Watch 需要理由吗？不需要吗？需要吗？…… 不要在乎这些细节！&lt;/p&gt;</description><pubDate>2015-03-11T23:15:26+08:00</pubDate></item><item><title>技术人物系列：白衣飘飘的江南</title><link>http://zhuanlan.zhihu.com/p/19969213</link><description>&lt;p&gt;科技媒体们总是喜欢捕捉热点人物，马云的一举一动，化腾的一词一句，雷军的一颦一笑，等。我不是媒体，我喜欢编程和写作，所以准备启动一个系列，写一写身边的技术人、产品经理和创业者们，这些人大都是70后和80后，在 IT 行业有超过十年的从业经验，他们大都在互联网发展的过程中参与了和建设了一些什么，他们可能星光闪烁，也可能低调无闻，但是每个人都有属于自己的一片天空，他们的故事，需要有人知道！&lt;/p&gt;&lt;p&gt;写他们当然是凭记忆和我对他们的了解去写，我可没时间去做访谈，所以设定几个简单的规则：&lt;/p&gt;&lt;p&gt;1、这些人肯定是我的朋友。&lt;br&gt;2、没见过面也可以是朋友，但没见过活物的，我就不胡说八道了吧。&lt;br&gt;3、见面越多，可能会写的越长。&lt;br&gt;4、愿意让我写写的，可以告诉我，不愿意的，也要告诉我。&lt;br&gt;5、无情的赞美多于温柔的杀戮，大致如此。&lt;/p&gt;&lt;p&gt;另外，说到记忆，这是一种最不可靠的物质，它就像一扇破败的窗户，落满灰尘，玻璃模糊不清，与窗框之间充满裂缝，腻子也掉了，如果你想看清楚窗户里是什么，只能用抹布沾拭清水去擦洗，擦之前还得用崭新的腻子填充裂缝。所以，我无法保证记忆里的东西都真实的发生过，我只能说，这些修补和擦洗的感情和态度是真实的。就当小说看吧。&lt;/p&gt;&lt;p&gt;今天的写作时间不多，我准备写写江南白衣——肖桦，谁让我和他只见过一次呢……&lt;/p&gt;&lt;p&gt;肖桦，网络 ID 「江南白衣」，70后资深程序员，「花钱的年华（ &lt;a href="https://link.zhihu.com/?target=http%3A//calvin1978.blogcn.com/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;花钱的年华 - 江南白衣，春天的旁边&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; ）」博主，第一波互联网浪潮（泡沫）创业者，嗯，失败的那种，著名 Java 开源项目 SpringSide 的缔造者。目前在广州爱立信继续磨练编程技艺的 Coding Architect。&lt;/p&gt;&lt;p&gt;可以说，白衣同学就是老罗常常挂在嘴边的工匠，只不过白衣是在编程领域，并且，一生对文艺、Java 和 Spring 充满了暧昧之情。半生吧，谁知道以后他会有什么变化呢。&lt;/p&gt;&lt;p&gt;我知道白衣同学当然是通过 SpringSide 项目，因为我在很长一段时间里都是 Java 和 Spring 的重度使用者，那时候很多大公司还没有大规模开源自己的项目，比如淘宝们，还有很多公司在做自己的框架和平台，比如我们，可以说，SpringSide 在那个白衣飘飘的年代独树一帜，木秀于林，还没有风摧之！随着 Spring 的大规模普及，每个使用 Java 和 Spring 的开发者都或多或少的受益于 SpringSide，要么直接在 SpringSide 上构建项目和平台，要么阅读 SpringSide 的源代码和设计思想，我属于后者。&lt;/p&gt;&lt;p&gt;当时我在负责一个企业级的商业平台，阅读 SpringSide 的源代码之后发现这个项目的作者很多思路和我类似，其中精巧的设计给了我更多的启发。而且这个项目的作者显然是有代码洁癖的人，设计优雅，代码简洁，干净，不炫技，不乱用设计模式，用最少的代码实现最佳的功能，让人赞叹不已。怎么才能认识作者呢？&lt;/p&gt;&lt;p&gt;社交时代很快像奔腾的潮水一样汹涌而至，我在微博上找到了「江南白衣」这个名字，没想到他对我的名字也略有耳闻，于是我关注了他，他关注了我，我们开始了一段……未曾谋面的交流。偶尔转发，偶尔评论，偶尔私信聊聊技术和生活。与 SpringSide 初创时期相比，白衣变得沉默而低调。他常常在微博写下这样的句子：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;最近这个月好沉默，因为在看物联网与大数据的东西，刚入门没什么可说的……想起唐诺的一段话：我们缺的不再是知识，过多过廉价的知识像大仓库般丧失了美感、珍罕感，再不复有魅惑力量。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;我就知道，他的中年危机到了，因为我也会想起年轻时的理想，纵横四海，改造国家……这些梦想经常被线上的 bug 和无休止的 issue 打碎，什么是梦？什么是现实？到最后自己也无法分清楚。我没那么沉默，我开始写作了，后来出了一本书。读了和写了那么多代码的江南白衣，居然很喜欢我这本没什么技术含量碎碎念的作品，于是我觉得，也该见一见面了。&lt;/p&gt;&lt;p&gt;终于等到了一个假公济私的机会，我飞赴广州爱立信，去见江南。由于「江南白衣」这四个字对我的印象太深刻了，我想象中的白衣是这样的：&lt;br&gt;&lt;img src="https://pic4.zhimg.com/bd25567c18e52f072152a4e1f59171f7_b.jpg" data-rawwidth="300" data-rawheight="451" class="content_image" width="300"&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;或者这样的：&lt;br&gt;&lt;img src="https://pic2.zhimg.com/d89022be6f7f868f4d054cf18433e321_b.jpg" data-rawwidth="500" data-rawheight="511" class="origin_image zh-lightbox-thumb" width="500" data-original="https://pic2.zhimg.com/d89022be6f7f868f4d054cf18433e321_r.jpg"&gt;&lt;/p&gt;&lt;p&gt;结果从爱立信研发办公区走出了一个高高瘦瘦的男生，头发不算长，杂乱的散落在前额，着了一件白色的紧身T恤，就是那种八级台风也休想让这件白衣飘起来的款。他冲我咧嘴笑了一下，用柔软的南方普通话说：建强你好，我就是白衣。&lt;br&gt;&lt;img src="https://pic3.zhimg.com/2e7f513ee98b5d9744d943a5fc27ee2a_b.jpg" data-rawwidth="440" data-rawheight="295" class="origin_image zh-lightbox-thumb" width="440" data-original="https://pic3.zhimg.com/2e7f513ee98b5d9744d943a5fc27ee2a_r.jpg"&gt;&lt;/p&gt;&lt;p&gt;我连忙把掉在地上的下巴捡起来安上，与之握手相庆，你就是白衣啊，衣服还真挺白的。然后我们假惺惺的互道仰慕之情，开始聊技术，聊生活，聊写作，诸如「这段代码是不是你写的」「孩子还好吧」「老婆都是原配的吧」「你喜欢诗、小说，还是杂文」「为什么要做 SpringSide」之类的话题。&lt;br&gt;&lt;/p&gt;&lt;p&gt;为什么要做 SpringSide 呢？那是十年前的一个晚上，白衣热的睡不着觉，他一直在思考「我是谁，从哪来，到哪去」这样的终极问题，最终也没有想清楚。好吧，那就让我们为这个世界留下一些什么吧。写一本书还是做一个开源项目？书印出来了就没法改了，对我这种货色还可以接受，但白衣是一个完美主义者……而开源项目，可以永远年轻，永远生长，永远重构……于是就有了 SpringSide，这个项目还有一个好听的中文名称「春天的旁边」。&lt;/p&gt;&lt;p&gt;很多人说卖桃君是站在了科技与人文的十字路口，其实我差得很远，白衣同学基本上已经达到了「站在哪里，哪里就是十字路口」的境界，从他起的项目名字就可以看出这货有多么闷骚了。他的博客「花钱的年华」里有大量的非技术文章，他做了一件非常重要的工作「作现代诗重要的整理与最大的搬运」，在这篇博客里，他写到：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;这世界绝不止眼前的苟且，还有诗与远方。远方有了，朋友圈里一天到晚都是旅游的照片。&lt;br&gt;但诗呢？除了黑色的眼镜，还有什么？……&lt;/p&gt;&lt;p&gt;忽然想，做一次重要的整理，最大的搬运，从图书馆里陆续搬回来几十本诗集，校对网上版本的错漏字，或自己手打那些无法谷歌的诗。按着自己的味道挑，最后超过了三百首——诗经以后所有诗集自觉的数字。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;这篇博客的地址是：[&lt;a href="https://link.zhihu.com/?target=http%3A//calvin1978.blogcn.com/articles/cnpoet.html" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;作现代诗重要的整理与最大的搬运&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;]&lt;/p&gt;&lt;p&gt;2014年年底，他写了当年最后一篇技术文章「我的2014技术流水帐」，文字如水，品之若酒，如果你是一个后端开发者，一定要读。&lt;/p&gt;&lt;p&gt;这篇博客的地址是：[&lt;a href="https://link.zhihu.com/?target=http%3A//calvin1978.blogcn.com/articles/my2014.html" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;我的2014技术流水帐&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;]&lt;/p&gt;&lt;p&gt;思考之余，白衣还喜欢分享一些文艺女青年的照片，比如这样的&lt;br&gt;&lt;img src="https://pic2.zhimg.com/b69d4876c50ec9a052151e1382e5cb51_b.jpg" data-rawwidth="950" data-rawheight="1515" class="origin_image zh-lightbox-thumb" width="950" data-original="https://pic2.zhimg.com/b69d4876c50ec9a052151e1382e5cb51_r.jpg"&gt;&lt;/p&gt;&lt;p&gt;这样的&lt;br&gt;&lt;img src="https://pic4.zhimg.com/936706201d3d3071eeab3271e0067b9b_b.jpg" data-rawwidth="1794" data-rawheight="1196" class="origin_image zh-lightbox-thumb" width="1794" data-original="https://pic4.zhimg.com/936706201d3d3071eeab3271e0067b9b_r.jpg"&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;还有这样的&lt;br&gt;&lt;img src="https://pic3.zhimg.com/bb3e73bb2cc11c7e2e5073cc0fd036fe_b.jpg" data-rawwidth="1229" data-rawheight="935" class="origin_image zh-lightbox-thumb" width="1229" data-original="https://pic3.zhimg.com/bb3e73bb2cc11c7e2e5073cc0fd036fe_r.jpg"&gt;&lt;/p&gt;&lt;p&gt;口味直追冯老师，只是文艺范更强悍一些。（当然，冯老师的故事我们以后有的说呢）&lt;/p&gt;&lt;p&gt;2014年逝去，2015不管不顾的来临，曾经白衣飘飘的江南少年已经不再年轻，但路上的风景依旧美妙，我们怀了年轻的心，奔走在苍老的路上。记住唐诺的话，一路向北！&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;我们缺的不再是知识，过多过廉价的知识像大仓库般丧失了美感、珍罕感，再不复有魅惑力量。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;文章来自微信平台「MacTalk By 池建强」（微信扫描二维码关注）。未经允许，禁止转载。&lt;br&gt;&lt;/p&gt;&lt;img src="https://pic1.zhimg.com/b1adf619dec928b97d5f91d1a019e598_b.jpg" data-rawwidth="430" data-rawheight="430" class="origin_image zh-lightbox-thumb" width="430" data-original="https://pic1.zhimg.com/b1adf619dec928b97d5f91d1a019e598_r.jpg"&gt;</description><pubDate>2015-03-06T09:20:50+08:00</pubDate></item><item><title>Fenng 是好的领导者吗？</title><link>http://zhuanlan.zhihu.com/p/19961389</link><description>&lt;p&gt;今天在朋友圈发了一条关于领导力的长微信，结果冯老师在下面评论说：居然不是在说我！很显然，在领导力这个问题上，冯老师因为没有以他为例懊恼不已。这时候三表老师也及时的跑过来凑了把热闹：你发在朋友圈让我怎么打赏呢？&lt;/p&gt;&lt;p&gt;有了这二位老师的发言，我觉得有必要把这个话题展开来写写。&lt;/p&gt;&lt;p&gt;我不是计算机科班出身，刚出道的时候技术能力很渣（当然现在也没好到哪去），我的洪恩老板池宇峰就告诉我，你现在非常努力的学习编程，进步也很大，这没什么错，但是你已经成不了技术大牛的。因为我认识的、知道的、历史上的每个技术大牛都是大学刚毕业就已经是技术大牛了……&lt;/p&gt;&lt;p&gt;听完老板的话我眼泪差点掉下来，这就好比刚刚遇到心仪的女孩，还没来得及近距离接触，人家就告诉你：你是一个好人！伤心之余我对老板说，我的人生还有希望吗？&lt;/p&gt;&lt;p&gt;有啊，老板眼中闪烁了智慧和狡诈的光芒，你可以领导他们！于是我就成了技术团队的 Team Leader。后来我才听说，因为老板不懂编程，所以对技术不好的技术人情有独钟……&lt;/p&gt;&lt;p&gt;无论如何，我几乎从进入计算机行业开始，就开始尝试带团队，从2001年开始，差不多有十几年的时间了。在工作的大部分时间里，我都是以一个团队的方式做事情，期间尝试过各种各样的领导方式，包括数字化管理、事无巨细、敏捷、点对点沟通、散养等等。最终我发现，如果你的团队从事的是创造性工作，那么「无为而治」大概是一种最好的领导方式。在你最大的权限范围内，制定出规则、领域和方向，找到合适的人，让他们尽情发挥就好。&lt;/p&gt;&lt;p&gt;真正好的领导者，不是大包大揽，也不是让下属去完成领导部署的任务，而是让他们做自己真正想做的工作。好的领导者不应该总是去试图领导别人，他们要及时反思，修正自己的思路和决策，听取别人的意见，并把一些决策权交给他人。&lt;/p&gt;&lt;p&gt;2014年我大概是按照这个思路进行的，结果不仅团队获得了个一个现金大奖，我个人的绩效也名列前茅。大概的效果就是：回首往事，我特么好像什么都没做呀。&lt;/p&gt;&lt;p&gt;林纳斯是整个 Linux 项目的负责人，他也只在操作系统内核的争端上进行仲裁和决策，其他时候，大部分是集思广益，多头并进。林纳斯是这么说的：&lt;/p&gt;&lt;br&gt;&lt;blockquote&gt;我有时会赞同他们的工作，有时会批评他们的工作，但是大多数时候我都是放任自流的。如果两个人同时维护了相同的功能，我会接受两份工作成果，评估哪一份更可行。如果两者竞争激烈，那么我会同时拒绝他们，直到其中一位开发者失去了兴趣。&lt;/blockquote&gt;&lt;p&gt;那么小道消息出品人冯老师是如何管理团队的呢？我怎么知道，我又不是丁香园的！&lt;/p&gt;&lt;p&gt;但是……我和冯老师有过这方面的简单交流，同时根据我在丁香园安插的线报提供的信息，冯老师大概也是这种领导风格。如果你让我想象一下，大致如此：&lt;/p&gt;&lt;p&gt;在某个时间点确认团队的战略目标和产品线，然后把各个产品线的产品和技术负责人找过来，告诉他们大致的方向和要达到的目标，之后就去刷朋友圈和微博输出营养、汲取力量了。走之前最多叮嘱一句：有能力你们甚至可以长出新的产品线哦。&lt;/p&gt;&lt;p&gt;然后，在拯救互联网之余，冯老师会时不时看看各个团队的进展，基本符合预期就捻须一笑，超过理想效果的就拉过来好好夸奖一番。不符合预期和迭代速度的产品团队就倒霉了，冯老师会在朋友圈愤怒的声讨他们：你们产品做成这样，还让不让我批评别人了？产品团队一看吓尿了，立刻修正方向，调整频率，慢慢也能走上正路。（以上纯属想象，如有雷同我不负责！）&lt;/p&gt;&lt;p&gt;这种领导方式的特点就是充分授权，并相信团队里的每个成员，如果你不值得信赖，那么就会离开这样的团队。这样的领导者，需要沉稳、自信、有前瞻力，并且值得依赖，比如卖桃君啦，冯老师啦，这样的……&lt;/p&gt;&lt;p&gt;所以，如果你是一位创业公司的领军人物，常常要反思的不是「我是不是做的太少了」，而是「我是不是管的太多了」。让每个人都能充分的去做正确的事情，事情差不多就能做成了。&lt;/p&gt;&lt;p&gt;最后回答一下冯老师的问题：Fenng 是最好的领导吗？显然不是嘛，我觉得冯老师年龄尚小，应该还有很大的提升空间……&lt;/p&gt;&lt;p&gt;文章来自微信平台「MacTalk By 池建强」（微信扫描二维码关注）。未经允许，禁止转载。&lt;/p&gt;&lt;img src="https://pic1.zhimg.com/b1adf619dec928b97d5f91d1a019e598_b.jpg" data-rawwidth="430" data-rawheight="430" class="origin_image zh-lightbox-thumb" width="430" data-original="https://pic1.zhimg.com/b1adf619dec928b97d5f91d1a019e598_r.jpg"&gt;</description><pubDate>2015-02-24T11:06:34+08:00</pubDate></item><item><title>Linux 开发模式带给创业者的启示</title><link>http://zhuanlan.zhihu.com/p/19955289</link><description>&lt;p&gt;十五年前，我第一次在工作中使用 Linux 的时候，并不知道这个操作系统会对我的生活和职业产生多么大的影响。十五年后，我在「Linus，一生只为寻找欢笑」一文中写到：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;当大家使用 Google 搜索时，使用 Kindle 阅读时，使用淘宝购物时，使用 QQ 聊天时，很多人并不知道，支撑这些软件和服务的，是后台成千上万台 Linux 服务器，它们时时刻刻都在进行着忙碌的运算和数据处理，确保数据信息在人、软件和硬件之间安全的流淌。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Linux 不仅仅从技术层面影响人们的生活，其本身就产生了很多有意思的话题和文化，我读了不少 Unix/Linux 相关的书籍，很多技术内容已经忘得一干二尽，但那些话题、模式和文化，却像醇香的好酒、美丽的传说，历久弥新，不断的为我带来思考和启发……&lt;/p&gt;&lt;p&gt;1、最初的想法，并不是决定性的&lt;/p&gt;&lt;p&gt;Linux 并不是凭空创造出来的，当年林纳斯（Linus）只是觉得迷你版 Unix 操作系统 Minix 的终端太难用了，既不能登录学校里的 Unix Server，也没法上网。这种功能缺陷对林纳斯这样的极客来说是无法接受的，于是他决定从硬件层面开始，重新为 Minix 设计一个终端仿真器。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;当时是三月，也可能是四月，就算彼得盖坦街上的白雪已经化成了雪泥我也不知道，当然我也并不关心。大部分时间我都穿着睡衣趴在相貌平平的计算机前面噼噼啪啪的敲打键盘，窗户上的窗帘遮得严严实实，把阳光和外部世界与我隔离开来。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;经过不眠不休的编程之后，终端仿真器做出来了，但那个时候林纳斯已经意识到自己的雄心壮志远不止于此，神山上的另一座圣杯「操作系统」已经向他发出了召唤，于是始有 Linux。&lt;/p&gt;&lt;p&gt;另一个伟大的操作系统 Macintosh，同样起步于一个微小的项目，期间历经换帅、更名、争吵、妥协，最终与 NextStep 经过长达四年的整合才形成现代的经典操作系统 OS X（参见《MacTalk·人生元编程》）。&lt;/p&gt;&lt;p&gt;几乎所有成功的产品都是边走边看做出来的。伟大的梦想，常常始于微不足道。&lt;/p&gt;&lt;p&gt;所以，很多人问我如何找到一份长期稳定的工作时，如何开启一个能够带来巨大成功的项目时，我只能说，最初的想法，并不是一切，开始去做就好了。&lt;/p&gt;&lt;p&gt;2、好的软件产品，常常源于开发者自身的需求&lt;/p&gt;&lt;p&gt;林纳斯为给自己开发终端仿真器最终做出了让其名垂青史的 Linux 操作系统，沃兹因为热爱计算机设计出了 Apple I，乔布斯想把1000首歌装进口袋推出了 iPod。&lt;/p&gt;&lt;p&gt;如果有什么工作能让你保持长久的热情，那一定是做自己需要的产品。当年我们在给程序员开发工具平台的时候，我要求每个工具研发人员都使用我们自己开发出来的工具，而不是仅仅把工具推给测试人员和项目组的程序员。过了一段时间，我发现那个 IDE 突然增加了很多「善解人意」并「出人意料」的功能。&lt;/p&gt;&lt;p&gt;如果有一天放下现在的工作，我一定会找一件足以让我穷尽半生去探索和追求的事情，用「术」解决问题，用「道」创造解决问题的方法，顺便改变生活。&lt;/p&gt;&lt;p&gt;3、优秀的程序员知道如何编程，卓越的程序员知道合理复用&lt;/p&gt;&lt;p&gt;林纳斯并没有尝试从零开始编写 Linux，而是以重用 Minix 的代码和理念作为开始，虽然在 Linux 最终的版本中几乎所有 Minix 代码都被移除或重写了，但它在 Linux 成长初期确实起到了类似脚手架的作用。&lt;/p&gt;&lt;p&gt;卓越的程序员通常都很懒，我们把这种懒叫做「建设性懒惰」，因为他们知道，很多时候我们要的都是最终的结果，而不是勤奋的过程。如果有可以复用的基础，显然比从零开始更具有建设性。&lt;/p&gt;&lt;p&gt;在开源社区澎湃发展的今天，我们有了更多的技术选择。所以，当你拿到一个轮子的需求时，去社区里找找问问，如果有可以复用的东西，就不要再费劲去造一个新轮子，况且你无法保证自己造的轮子比旧轮子好用。&lt;/p&gt;&lt;p&gt;我从来不是卓越的程序员，我只是模仿他们。&lt;/p&gt;&lt;p&gt;4、如果你有正确的态度，有趣的事情自然会找到你&lt;/p&gt;&lt;p&gt;林纳斯从写下第一行 Linux 代码的开始，就保持了一个开放的态度，可以说，Linux 一诞生就被打上了开源的烙印，这一点对其后续的发展起到了至关重要的作用。因为开放和开源，Linux 吸引了全球的开源爱好者和顶级黑客，无数卓越的程序员为 Linux 贡献了源代码，同时，林纳斯在开源协作方面也展现出了编程之外的天赋，他井井有条的运作着庞大的开源社区，回复邮件，发起讨论，阅读代码，合并分支，Linux 操作系统在开源社区的推动和林纳斯的调教下以惊人的速度发展。&lt;/p&gt;&lt;p&gt;从来没有一款如此复杂的软件系统是以这种松散的方式构建的。几千名散落在世界各地的开发者，凭借着脆弱的互联网建立关系，他们利用业余时间，构建出了一个鬼斧神工般的操作系统，随即这个系统又成为互联网的基石，其间沧海桑田，让人叹为观止。&lt;/p&gt;&lt;p&gt;一切都源于开放的态度。我对这一点深有体会，从写下第一条 MacTalk 推送开始，我只想向世界传递我的讯息，结果各种有趣的人和事纷至沓来。但行好事，莫问前程。&lt;/p&gt;&lt;p&gt;为什么要登山？因为山在远方。为什么要阅读？因为历史在书里。为什么要写作？因为思想流淌在心头和指尖。就是如此。&lt;/p&gt;&lt;p&gt;5、如果你对一件事情不感兴趣了，最好的做法是找到一个有能力的接棒者&lt;/p&gt;&lt;p&gt;每个人的兴趣都会转移，林纳斯也不例外。在 Linux 进入稳定发展的阶段，他把更多的精力放到了开源社区上，但是这并没有降低 Linux 操作系统的代码质量，因为他找到了更多的顶级源代码贡献者。&lt;/p&gt;&lt;p&gt;在软件开发的项目中我们同样会遇到类似的问题。某个功能的开发者突然对该功能失去了兴趣，这时候我们就有责任为这个功能找到一个可以胜任的接棒者，而不是强迫原来的开发者在原地踏步。&lt;/p&gt;&lt;p&gt;很多时候，我们厌倦了一件事情，并不是能力缺失，而是因为已经洞悉了这件事的所有秘密，于是转身离去，开辟新的征程……&lt;/p&gt;&lt;h4&gt;6、把早期用户当做你的合作者或开发者，这是提高代码质量和产品质量的有效途径。&lt;/h4&gt;&lt;p&gt;林纳斯把 Linux 的源代码放到网上之后，很快就收获了一批既是开发者又是合作者的用户，他选取了其中五人组成了核心开发小组，除了 Linux 内核建设的最终决定权属于林纳斯之外，一切都是开放的，这五个人承担了绝大多数关键的开发和组织工作，在各自的领域组织自己的用户和开发者，推进 Linux 有条不紊的向前发展。&lt;/p&gt;&lt;p&gt;这些合作者和开发者就像筑巢的蜂群一样，围绕着 Linux 辛勤的工作，看起来杂乱无章，实际上细致严密，因为任何人的工作都在阳光下进行，没一个错误的产生和修复是隐藏在暗影中的。一个人的代码出了漏洞，立刻有另一个人冲上去打补丁，打完之后，两人交换眼神，握手，然后转身投入下一轮的开发和测试中。&lt;/p&gt;&lt;p&gt;通常一个几十人的项目组就能把整个公司搞的鸡犬不宁，这种事我们见的太多了，但是林纳斯却依赖自己的早期用户构建了历史上最大的合作项目，成千上万的开发者依赖邮件列表和相互之间制定的规则进行交流和研发，同时开展的项目经常超过4000个。&lt;/p&gt;&lt;p&gt;如果你找到了产品的早期合作者用户，那么你的项目已经成功了50%。 「即便是高层次的设计，如果能有很多合作开发者在你产品的设计空间周围探索，也是很有价值的。设想下一滩雨水是怎么找到下水口的，或者说蚂蚁是怎么发现食物的。探索在本质上是分散行动，并通过一种可扩展的通信机制来协调整体行为。一个外围的游走者可能会在你旁边发现宝藏，而你可能有点过于专注而没能发现」。&lt;/p&gt;&lt;p&gt;现在很多创业项目在早期发布的时候常常采用邀请制，这其实是获取早期合作者用户的最佳时期，合理的选择用户并通过邮件列表、群组和线下交流活动等方式不断获取反馈，并让用户参与其中，会大大提高你的产品质量和代码质量。我参与过的早期项目中，有道云笔记·协作版算是做的不错的，可惜的是，产品版本正式发布之后，这种参与和反馈感渐渐消失了。&lt;/p&gt;&lt;p&gt;更多的创业产品只是把邀请用户当做普通用户看待，意义寥寥。正确的做法应该是把所有潜在的合作者用户加入你的邮件列表或特定群组，每次发布新版本时，向邮件列表发送朋友对话般的通知（而不是例行邮件），鼓励他们参与，听取他们的意见，征求他们关于设计决策的看法，当他们发来补丁和反馈时给他们以热情回应。&lt;/p&gt;&lt;p&gt;你会有回报的。&lt;/p&gt;&lt;h4&gt;7、最好的领导就是「不要试图去领导」&lt;/h4&gt;&lt;p&gt;林纳斯是一个懒惰的程序员，所以他很早就认识到，好的领导者，并不是大包大揽，也不是让下属去完成领导部署的任务，而是让他们做自己真正想做的工作。好的领导者不应该总是去试图领导别人，他们要及时反思，修正自己的思路和决策，听取别人的意见，并把一些决策权交给他人。&lt;/p&gt;&lt;p&gt;作为整个 Linux 项目的领军人物，林纳斯只是在操作系统内核的争端上进行仲裁和决策，其他时候，大部分是集思广益，多头并进。林纳斯说：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;我有时会赞同他们的工作，有时会批评他们的工作，但是大多数时候我都是放任自流的。如果两个人同时维护了相同的功能，我会接受两份工作成果，评估哪一份更可行。如果两者竞争激烈，那么我会同时拒绝他们，直到其中一位开发者失去了兴趣。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;如果你是一位创业公司的领军人物，要常常反思的不是「我是不是做的太少了」，而是「我是不是管的太多了」。&lt;/p&gt;&lt;h4&gt;8、及早发布，快速发布，并倾听用户的声音&lt;/h4&gt;&lt;p&gt;很多人都习惯性的认为，除非是很小的项目，早发布和频繁发布的做法有益无害。因为早期产品大都问题多多，过早发布会耗尽用户的耐心和开发者的雄心。这种看法直到互联网时代才开始有所改变。各大互联网公司为了抢占先机，开始无快不破，虽然第一代产品存在很多问题，但是他们会通过迅猛的迭代速度，快速推出第二代和第三代产品去弥补缺陷、赢得用户和占领市场。&lt;/p&gt;&lt;p&gt;其实这种策略 Linux 系统在上个世纪90年代就开始采用了，林纳斯在早期（1991年）发布内核的频率甚至超过了一天一次！他把用户当做了自己的合作者，他不断倾听用户的声音，以持续发布来回报用户，用自我满足感激励那些黑客和顶尖高手。有些人会提出问题，有的人会发现问题，有的人会解决问题，这一切都会淹没在 Linux 频繁发布的版本浪潮里……&lt;/p&gt;&lt;p&gt;当然，在那个年代，林纳斯能做到这一点，和他自己的才能与设计天赋不无关系。《大教堂和集市》一书中对林纳斯的描述是：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;他更像是一个工程实施上的天才，他具备一种避免 bug 和防范开发走入死胡同的第六感，而且有一种能发现从 A 点到 B 点最省力路径的真本事，事实上，Linux 的整个设计，都透露着这种特质，并反映了林纳斯那种本质上保守而简洁的设计取向。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;在移动互联网时代，及早发布、快速发布还会带来另一个附加值：如果你的 App 能够一周更新一次，那么用户永远不会忘记这些 App 和开发者，他们知道这些 App 的后面有一群鲜活的生命在不断的进行产品改进、性能调优、功能增强，通过频繁的发布，用户是能够感知到这些数据之外的东西，并给你丰厚的回报。&lt;/p&gt;&lt;h4&gt;9、如果一个问题解决不了，那么要问问自己，是不是提出了正确的问题。&lt;/h4&gt;&lt;p&gt;当你发现自己在开发中四处碰壁的时候，当你发现自己苦苦思索也难以确定下一个特征的时候，当你发现自己辗转腾挪也无法解决一个老问题的时候……停下来，喝杯咖啡吹吹风，你会发现，过了今天问题还是解决不了。&lt;/p&gt;&lt;p&gt;通常这时候，你不该再问自己是否找到了正确答案，而是是否提出了正确的问题，也许是问题本身需要被重新定义。&lt;/p&gt;&lt;p&gt;在不损失效能的前提下，不要犹豫，扔掉那些过时的特性吧。为了挽救 IE6的用户，还不如去为那些愿意使用高级浏览器（支持 HTML5）的用户提供更好的服务。&lt;/p&gt;&lt;h4&gt;10、设计上的完美并不是没有东西可以加了，而是没东西可以减。&lt;/h4&gt;&lt;p&gt;有时候，我们在软件设计的时候会尽可能让自己表现的聪明而有原创性，这让我们在前行的时候常常忽略那能够直达目的地的小径，我们被蓝色湖泊上飘荡着雾气吸引，在高山上怒放的美丽花朵之间徜徉，而忘记了真正的目标。&lt;/p&gt;&lt;p&gt;在应该保持软件健壮性和简单性的时候，设计者常常下意识把它弄得既华丽又复杂。应该用自动内存管理的时候使用了引用计数，能够最简实现的时候使用了各种设计模式，也许在潜意识里，很多程序员认为，使用了复杂技巧并难以读懂的代码才是好代码。&lt;/p&gt;&lt;p&gt;对于产品的设计和实现来说，增加功能和代码是最容易做到的，反而是代码减无可减，功能砍无可砍，最难实现。如果你的产品减少任何一个功能都会带来完整性和体验缺失的话，这款产品的功能就已经接近完美了，代码同样如此。&lt;/p&gt;&lt;p&gt;无论是产品设计还是编程实现 ，永远记住这样一个原则：KISS （keep it simple and stupid），简单即为美。&lt;/p&gt;&lt;h4&gt;……&lt;/h4&gt;&lt;p&gt;Linux 可以说是 IT 发展史上圣杯级别的产品，它的故事没有终点。几十年过去了，Linux 散落在历史长河中的点点滴滴，依然像耀眼的珍珠一样在时间的深水河中发出璀璨的光芒。如果你是一个开发者，多读读 Linux 相关的技术书；如果你是互联网从业者，多读读 Linux 相关的故事和传奇。如果你两者都不是，多读读 MacTalk 就好了。&lt;br&gt;&lt;/p&gt;&lt;p&gt;推荐书目：&lt;/p&gt;&lt;p&gt;《Just for fun》林纳斯自传&lt;/p&gt;&lt;p&gt;《大教堂与集市》&lt;/p&gt;&lt;p&gt;《Linix/Unix设计思想》&lt;/p&gt;&lt;p&gt;《Unix编程艺术》&lt;/p&gt;&lt;p&gt;文章来自微信平台「MacTalk By 池建强」（微信扫描二维码关注）。未经允许，禁止转载。&lt;/p&gt;</description><pubDate>2015-02-12T10:17:59+08:00</pubDate></item><item><title>你需要多久才能变成一个「傻瓜」？</title><link>http://zhuanlan.zhihu.com/p/19929291</link><description>&lt;p&gt;微信之父张小龙曾经在「微信背后的产品观」里讲到：「产品经理要有傻瓜心态」。这里的傻瓜并不是真傻，而是一种外行心态。张小龙说，自己要经过5-10分钟的酝酿才能达到傻瓜状态，马化腾需要一分钟，功力最深的是乔布斯，传说他能在专家和傻瓜之间随意切换，来去自如，所谓「Stay foolish」，便是如此。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;你需要多久才能变成一个傻瓜？&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;我最早听到类似的说法并不来自于张小龙，而是一本书。书的名字叫做《像外行一样思考》，作者是美国卡耐基·梅隆大学（CMU）的计算机科学和机器人研究所的金出武雄教授。金教授的学术固然在同行眼里高山仰止，行文也极为流畅。关于写作，他的观点是，无论写科普还是论文，都要像创作小说那样写出引人入胜的独特观点。这一点和 MacTalk 秉承的写作原则一脉相承。&lt;/p&gt;&lt;p&gt;金教授在1980年的春天从日本到了美国，开始了自己的学术研究生涯。他信誓旦旦的对自己的妻子说：咱们只去五年。三十年过去了，伊带着这个弥天大谎参与了人工智能和机器人领域相关的各种研究，工作兢兢业业，为美国人民的人工智能事业做出了卓越的贡献，这包括：自动驾驶汽车，能够进行火星探查和火山口探查的机器人，自动驾驶直升飞机，虚拟现实和三维视频，等。&lt;/p&gt;&lt;p&gt;关于这本书的创作，金教授如是说：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;听过我的演讲或言论之后，有很多人表示「你的话，简直就是谎话、几乎都是谎话、是玩笑、像是真话、是真话、是自吹自擂、虽然很有建设性但……杂七杂八还有点意思」。于是我想，要不要把这些收集起来，写一本书呢？&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;于是这本书就这样诞生了，比《MacTalk·人生元编程》的问世还要腼腆一些。&lt;/p&gt;&lt;p&gt;书看起来像是一本介绍「如何做学术研究」的著作，但其中的内容远不止于此。无论是学术研究、技术、产品、演讲、写作、互联网、教育、思考的本质等等，书中都有涉猎，并且观点独特，思路新颖，适合各个创造性领域的人群阅读。&lt;/p&gt;&lt;p&gt;金教授有个观点叫做「Best First」，意为最好的东西一定要放在最前面。无论是演讲还是写书，金教授都遵循了这个规则。观众或读者都希望开始的时候就看到最好的东西，很多演讲或图书做了冗长的铺垫才进入主题，岂不知那些铺垫已经耗尽了听众和读者所有的耐心。「Best First」还有一个好处就是：先把最重要的部分呈现给大家，之后在任何时候都可以结束演讲和阅读。&lt;/p&gt;&lt;p&gt;这真是个有趣的观点。写到这我想起了 Linux 的缔造者 Linus 在自传里写的一句话：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;我对生命的意义有种理论。我们可以在第一章里对读者解释生命的意义何在，这样就可以吸引住他们。一旦他们被吸引，并且付钱买了书，剩下的章节里我们就可以胡扯了。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;颇有异曲同工之妙。基于此，我们就知道，书中的核心内容毫无疑问是第一章：像外行一样思考，像专家一样实践。这一章节给我带来的思考最多。&lt;/p&gt;&lt;p&gt;读了十几年书，又工作了很多年，我们终于从鼻青脸肿混到了白衣飘飘，成为了某个领域的行家里手。工作中开始得心应手游刃有余，不断有新人或老人来找你解决问题，你微笑着迎接各种挑战，淡淡的送走困难，你挥一挥手，不带走一片云彩……殊不知我们已经陷入了一个创新匮乏区。我们无法像外行那样自由的思考，无法像「傻瓜」那样去体会真实用户的感觉，我们成为了专家，常常考虑的是「能不能实现」和更多的「不可能」。&lt;/p&gt;&lt;p&gt;这时候金教授就会从书里爬出来拍拍你的肩膀，轻轻的在你耳边低语：要像外行人一样自由发散地找出创意，然后以专业人士的方法去付诸实现。&lt;/p&gt;&lt;p&gt;对于外行人来说，因为没有相关知识和经验的束缚，就可以大胆假设小心求证。他们一切构想的根源都是「我想要这样」，而不是「能不能实现」。每个外行都抱着一种「能实现」的积极态度，美妙的创意才会相伴而来。而专家就很容易被困在通常的做法中，难以产生飞跃式的想法。某些成功了的，已经存在的方法、经验和知识反而会导致想象力匮乏，创意缺失。&lt;/p&gt;&lt;p&gt;当你以一个专家的身份说出「不可能」三个字的时候，你已经输了。金教授如是说，为此他还举了一个真实的例子：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;2000年左右的时候,有个人告诉我说：雨滴原本是透明的，但在雨天开车的时候，我们看到的却是白色的雨滴，这妨碍了开车。之所以会这样是因为车头灯照在雨滴上，光线发生了像在水晶里一样的折射。那时我就想，能不能做出这样的车头灯，它不像传统车头灯一样对着某个方向无区别地发射光线，而是先探测雨点的位置，而后仅仅向没有雨滴的空隙投影光线，这样的话岂不就像看不见雨一样了吗？&lt;br&gt;那是我像外行一样的想法，实在是有点天马行空。我和汽车公司的技术人员谈论了这个想法，他并不接受，说：这不可能。虽然我觉得从技术上说没有什么做不到的事情，但还是先把这个想法搁置了。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;七年后，金教授终于做出了让雨滴消失的车头灯实验室版本，并且因此拓宽了新视觉系统和应用的前景。&lt;/p&gt;&lt;p&gt;跳出现有的成功是最难的，即使是天才也不例外。&lt;/p&gt;&lt;p&gt;发明现代计算机原型的天才科学家冯·诺依曼在别人向其展示高级编程语言时，这位天才的回答：汇编是多么美妙的语言啊，有了汇编你们怎么还会用到其他语言呢？这是多么的愚蠢！从那以后，几百种高级语言诞生了。&lt;/p&gt;&lt;p&gt;他就不能理解我们这些看不懂汇编语言的程序员的心！&lt;/p&gt;&lt;p&gt;很多成功的企业巨头被后来者追上并击败，同样是因为企业经营者无法走出过去的成功经验导致的。即使无法颠覆别人，也应该顺应时代的潮流做出自己的改变，每个创业者，都应该读读这一章节。&lt;/p&gt;&lt;p&gt;金教授还在书中讲述了「计算机向人类发出挑战——问题的解决能力与教育」「表达“自己的想法”，说服别人实践」「寻求决断与明示的速度」等内容，同样值得仔细品读。下面是一些有趣的观点摘录。&lt;/p&gt;&lt;h4&gt;关于反对&lt;/h4&gt;&lt;blockquote&gt;&lt;p&gt;明斯基教授，您总是能在各种领域中想出很多创造性的、引人入胜且能够引导新方向的构思。请问 您的诀窍是什么呢？他回答说：这个很简单，只要反对大家所说的就可以了。大家都认同的好想法基本上都不太令人满意。&lt;/p&gt;&lt;/blockquote&gt;&lt;h4&gt;关于迷茫&lt;/h4&gt;&lt;p&gt;金教授说，越能干的人越迷茫。 &lt;/p&gt;&lt;p&gt;如果你工作时经常在「能不能行呢」的不安感和「啊，成功了」的成就感之间往复行走时，恭喜你，离成功已经没有几公里了。交织着这两种感觉的体验将成为你智慧和体力的强有力基石。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;就算是卡耐基·梅隆大学的计算机科学系和机器人研究所的博士研究生，他们出类拔萃无所不能，也避免不了这种感觉。不，应该说，正是这种人，才更容易陷入不安和迷茫。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;这也从某种程度上解释了我为什么会经常处于一种迷茫的状态……&lt;/p&gt;&lt;h4&gt;关于记忆力&lt;/h4&gt;&lt;p&gt;很多人常常感慨：我就是记忆力不行……言下之意就是除了记忆力我其他方面都很行的。真是这样吗？&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;日常生活中，对于人的知觉、思考、行动等，追本溯源，最终都会落到记忆上来。如果头脑中没有知识和信息作为工具、材料，是不可能发挥规划能力与创造能力的。构思就是通过重组脑海中的记忆而产生的。如果没有良好而广博的记忆内容做基础，根本产生不了什么好的构思。&lt;br&gt;因此,最有效的学习方法就是记忆。把他人长时间思考总结得出的成果记忆下来，不仅高效便捷，也能为自身的思考扩展基础。 当然，这里所谓的记忆，是指「经过理解的记忆」，这一点无需多言。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;所以，今后看到高晓松在脱口秀中谈古论今纵览天下的时候，不要再说「我就是记忆力不行」，差距是全面的。&lt;/p&gt;&lt;h4&gt;关于颠覆&lt;/h4&gt;&lt;p&gt;科学的进步就是不断突破极限和开辟新的领域。很多人认为世界已经停止前行，但那并不是真相。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;计算机的发展日新月异。20世纪60年代，计算机像竞赛一样指数发展，但到了20世纪80年代，发展速度减缓，甚至有人说计算机不会再进步了，还举了很多例子：硅晶体上不能画再细的线了，不能制造出更小的晶体管了，硬盘的存储密度不能再增大了，等等。根据这些说法他们得出的结论是：发展瓶颈终将到来。&lt;/p&gt;&lt;/blockquote&gt;&lt;h4&gt;关于不可能原则&lt;/h4&gt;&lt;blockquote&gt;&lt;p&gt;第一条：科学工作者声明某件事情是可行的时候，基本上他不会错。但当他说不可能的时候，他很可能错了。&lt;br&gt;第二条：发现极限在哪里的唯一方法就是超越极限，尝试向稍微超越这个极限的领域迈进、冒险。&lt;br&gt;第三条：无论是哪种技术，只要它是非常先进的，那看起来都跟魔术没什么区别。&lt;/p&gt;&lt;/blockquote&gt;&lt;h4&gt;关于演讲和交流&lt;/h4&gt;&lt;blockquote&gt;&lt;p&gt;在与他人交流的过程中完善自己的想法。无论什么样的构想，最初大都只是个偶然的想法。锤炼构想的方法就是跟他人交流，在交谈中验证是不是一个有价值的想法，并且获取相关知识，修正不完备的地方。升华构想的关键是「交流」，因为他人有很多自己角度的认识和想法，借鉴过来才能完善自己的构想。&lt;/p&gt;&lt;/blockquote&gt;&lt;h4&gt;关于用户&lt;/h4&gt;&lt;blockquote&gt;&lt;p&gt;开发系统的人头脑中一定要有「用户是在与系统进行对话」这种概念。事实上用户不是通过一点点阅读操作手册记住系统的使用方法的，而是通过使用在头脑中形成印象：系统对每一项操作的反应是什么。&lt;br&gt;因此,即便是再简单的操作，要是系统的反应不一致,只会使用户混乱，产生不信赖感。系统与用户的关系，就像老师与学生的关系，老师的举止行为前后不相同，就根本不能博得学生的信任。&lt;/p&gt;&lt;/blockquote&gt;&lt;h4&gt;创造的基础是模仿&lt;/h4&gt;&lt;blockquote&gt;&lt;p&gt;模仿、相似，这样不是很好吗？最初的想法的确是相同的，但在此基础之上添加东西、使之升华的水平高低才是决定胜负的关键。因此，大部分的创造都是在模仿的基础之上增加其附加价值的东西。独创、创造，不是无中生有的魔术。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;最后，回到我们最初提出的问题，如何在专家和傻瓜之间进行自由切换呢？其实金教授已经写在书里了：&lt;/p&gt;&lt;p&gt;思考的时候，要像外行一样单纯直接，实践的时候则要像专家一样严密细致，并且要有以专业知识和方法武装起来的「我做得到」的乐观主义精神。要记住，独特的、好的创意和好的结果，不管是对研究而言，还是对商业运营而言，都不是自己突然冒出来的东西，那一定是刻苦的努力和长期的思考带来的。&lt;/p&gt;&lt;p&gt;每个 MacTalk 的读者都该读一读这本书，如果你没时间读书，至少要读一读这篇文章！&lt;/p&gt;&lt;p&gt;这本书的中文版目前已经买不到了，幸好电子出版社准备再版，届时我会再挑选一些好书一并送给MacTalk幸运读者。&lt;/p&gt;&lt;p&gt;本文来自微信公众账号「MacTalk By 池建强」，未经允许，禁止转载&lt;/p&gt;&lt;img src="https://pic2.zhimg.com/0ffe7f61ac4c85c70b5cc26542306515_b.jpg" data-rawwidth="430" data-rawheight="430" class="origin_image zh-lightbox-thumb" width="430" data-original="https://pic2.zhimg.com/0ffe7f61ac4c85c70b5cc26542306515_r.jpg"&gt;</description><pubDate>2015-01-06T09:50:00+08:00</pubDate></item><item><title>Docker 传奇之 dotCloud</title><link>http://zhuanlan.zhihu.com/p/19913119</link><description>&lt;p&gt;2010年，几个大胡子年轻人在旧金山成立了一家做 PaaS 平台的公司，起名为「dotCloud」，这个名字让我想起了微软的「DotNet」。&lt;/p&gt;&lt;img src="https://pic2.zhimg.com/8e3850cda0fc731ab62c68dd606e5a8d_b.jpg" data-rawwidth="768" data-rawheight="886" class="origin_image zh-lightbox-thumb" width="768" data-original="https://pic2.zhimg.com/8e3850cda0fc731ab62c68dd606e5a8d_r.jpg"&gt;&lt;p&gt;dotCloud 主要是基于 PaaS 平台为开发者或开发商提供技术服务。什么是 PaaS 呢？PaaS 的全称是 Platform as a Service，也就是平台即服务，这个概念在2010年热的一塌糊涂，直到现在也没凉下来。举个例子来说，传统的软件产品开发一般是这样的：&lt;/p&gt;&lt;p&gt;1、确定产品定位和需求，确定首次迭代的范围。&lt;br&gt;2、制作界面原型。&lt;br&gt;3、技术选型，然后根据技术选型为每个开发者搭建开发环境和技术栈，例如 Java 环境、Python 环境、Ruby 环境、数据库、中间件等等。&lt;br&gt;4、构建基础技术框架和服务，包括日志、存储、消息、缓存、搜索、数据源、集群扩展等等。&lt;br&gt;5、模拟用户容量，构建测试环境。&lt;br&gt;6、开始编写真正的业务代码，实现产品功能。&lt;br&gt;7、迭代开发/测试，生生不息，周而复始，直到头发掉光为止……&lt;/p&gt;&lt;p&gt;如果采用完善的 PaaS 平台，可以直接忽略3、4、5三个步骤。无论你选择哪个技术栈，PaaS 都会为你提供相关的配套设置，包括语言环境、运行环境、存储和各种基础服务。dotCloud 不仅支持诸如 PHP、MySql 等传统技术框架，还包括 Node.js、MongoDB 等新兴技术。基于 dotCloud 提供的开发工具和技术框架，你可以直接使用 dotCloud 的 SDK 编写代码和构建业务服务，并在联网的时候把这些代码推送到云端，实现自动部署和测试。&lt;/p&gt;&lt;p&gt;dotCloud 把需要花费大量时间的手工工作和重复劳动抽象成组件和服务，并放到了云端，另外，它还提供了各种监控、告警和控制功能，方便开发者管理和监控自己的产品。dotCloud 最初运行在 Amazon 的 EC2 上，不过由于 dotClout 高度的抽象层次，理论上 dotCloud 可以运行在各种各样的云服务上面（我猜这就是 Docker 的功劳）。&lt;/p&gt;&lt;p&gt;一切看起来都是那么的美好，如果后来的事情按照这个设想进行下去的话，软件厂商和程序员都会松好几口气，那样我们的头发还能和「普通地铁站」里的人一样，倔强的飘在风里。&lt;/p&gt;&lt;img src="https://pic4.zhimg.com/e6274cf6027dab6227c2391f742d87e3_b.jpg" data-rawwidth="440" data-rawheight="400" class="origin_image zh-lightbox-thumb" width="440" data-original="https://pic4.zhimg.com/e6274cf6027dab6227c2391f742d87e3_r.jpg"&gt;&lt;br&gt;&lt;p&gt;遗憾的是，我们抵达的是「中关村地铁站」！&lt;/p&gt;&lt;p&gt;PaaS 并没有这样一直春暖花开下去，事实上给开发者或程序猿做东西一直是件非常危险的事情，程序猿是一种很奇怪的动物，虽然他们常常分不清楚女友的发型和衣服款式，但是对开发环境和开发工具却非常敏感并要求极高，稍不注意就会伤害到他们脆弱的心。所谓文人相轻，程序猿也不例外，对自己人常常是下死手的。所以，PaaS 的概念虽好，但是由于认知、理念和技术的局限性，市场的接受度并不高，市场的规模也不够大。&lt;/p&gt;&lt;p&gt;除此之外，还有巨头不断进场搅局，IBM 的蓝云，微软的 Azure，Amazon 的 EC2，Google 的 GAE，VMware 的 Cloud Foundry 等等，可谓强敌环伺，而且强敌都不差钱，想玩多久就玩多久，想玩多大玩多大。在这种情况下，虽然 dotCloud 在2011年初拿到了1000万美元的融资，但依然举步维艰。&lt;/p&gt;&lt;p&gt;再也不能这样下去了！dotCloud 的创始人 Solomon Hykes 把大伙召集到一起，说，咱们过的不舒服，也不能让别人痛快了，干脆把我们的核心引擎开源扔到市面上看看，如何？大家面面相觑，最后把拳头砸到桌面上，就这么办。&lt;/p&gt;&lt;p&gt;山重水复疑无路，柳暗花明又一村！&lt;/p&gt;&lt;p&gt;这个基于 Linux Container 技术的核心管理引擎一经开源立刻得到了「业界」的热烈吹捧，首当其冲的当然是程序猿们。看到好的开源产品，这帮平时静若处子的货色就像猴子看到卖桃的一样，一窝蜂冲上去，边吃边说好吃。这个容器管理引擎大大降低了容器技术的使用门槛，轻量级，可移植，虚拟化，语言无关，写了程序扔上去做成镜像可以随处部署和运行，开发、测试和生产环境彻底统一了，还能进行资源管控和虚拟化。程序员们流着口水惊呼，太方便了，太方便了。&lt;/p&gt;&lt;p&gt;业界几个大佬也没闲着，看看程序员们欢喜雀跃，再看看自己平台上笨重的 PaaS，纷纷表示要接入或支持这个引擎。连最传统的过气带头大哥微软都信誓旦旦的说，要以Windows 原生的方式运行这个引擎。&lt;/p&gt;&lt;p&gt;这个引擎的名字叫做 Docker，以 Go 语言写成。&lt;/p&gt;&lt;p&gt;这个结果是 dotCloud 公司的几个创始人万万没想到的，他们本来是按照穷小子模式来培育 Docker 的，没成想直接蹦出一个婀娜多姿的大美女，明眸善睐，顾盼生姿，不仅把各类程序猿迷的神魂颠倒，而且旁边几个高楼大厦里的土豪也时不时过来搭讪聊天。哥儿几个坐不住了，开始合计。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;咱本来是想捡点芝麻，结果怀里掉了个大西瓜，怎么办？&lt;br&gt;目光坚定，勇往直前，为了理想继续捡芝麻！&lt;br&gt;你傻呀，别和杭州那个产品经理学，这么好的机会砸脑门上，咱就甭躲了，专心培养西瓜吧。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;从此以后，他们开始专心研发 Docker 产品和维护相关社区，过上了幸福而快乐的生活。2013年10月 dotCloud 公司更名为 Docker 股份有限公司，2014年8月 Docker 宣布把平台即服务的业务「dotCloud」出售给位于德国柏林的平台即服务提供商「cloudControl」，dotCloud 的历史告一段落。同年8月，Docker 内部员工 James Turnbull 发布了面向开发者、运维和系统管理员的 Docker 电子书《The Docker Book》。&lt;/p&gt;&lt;img src="https://pic1.zhimg.com/ee74f62376cdca444610a8499cb61370_b.jpg" data-rawwidth="300" data-rawheight="314" class="content_image" width="300"&gt;&lt;br&gt;&lt;p&gt;过去12个月，Docker 迅速成长为云计算相关领域最受欢迎的开源项目，Amazon、Google、IBM、Microsoft、Red Hat 和 VMware 分别表示已经支持 Docker 技术或准备支持。据说，有 Linux 的地方，就可以运行 Docker。看情形 Windows 也快了。&lt;/p&gt;&lt;p&gt;有意栽花花不开，无心插柳柳成荫！&lt;/p&gt;&lt;p&gt;Docker 这个技术到底能解决什么问题呢？预知后事如何，且听下回分解。&lt;/p&gt;&lt;p&gt;今日题图来自杭州邱岳（二爷鉴书）的摄影作品。&lt;/p&gt;&lt;p&gt;文章来自「MacTalk By 池建强」，未经允许，禁止转载！&lt;/p&gt;</description><pubDate>2014-12-12T09:12:24+08:00</pubDate></item><item><title>打破移动孤岛——应用内搜索</title><link>http://zhuanlan.zhihu.com/p/19899067</link><description>&lt;p&gt;写了很多 OS X 和 iOS 相关的产品和技术，很少涉及 Android 的内容，其实 iOS 和 Android 分别源于 OS X 和 Linux 架构，而 OS X 和 Linux 的老祖宗又都是 Unix，打了半天，斗了许久，说开了都是一家人。iOS 与 Android 在发展的过程中也常常相互借鉴和融合，用户则获得了越来越好的用户体验。&lt;/p&gt;&lt;p&gt;Android 领域同样有很多好的技术和创意，有些功能甚至是 iOS 不具备的，比如我们今天要谈到的「应用内搜索」。&lt;/p&gt;&lt;p&gt;应用内搜索其实就是移动互联网搜索，在谈移动互联网搜索之前，我们看看 PC 互联网时代的搜索是怎么干的。1991年8月，大牛蒂姆·伯纳斯-李在 NeXTSTEP 操作系统上创建出了第一个网页浏览器和网页服务器，那一年，你豆蔻年华，我风华正茂，互联网方兴未艾，却在蒂姆的浏览器上开启了征服世界的第一步。互联网在90年代末和21世纪初迅速席卷全球，人们在互联网上创建出了数以亿计的网页和超链接。但是仅仅有网页和超链是不够的，人们需要在浩如烟海的信息中寻找自己需要的内容，于是互联网搜索和 Page Rank 应运而生。&lt;/p&gt;&lt;p&gt;Google 之前，曾经出现了很多通用或专业领域的搜索引擎，但是最终他们都败给了 Google，因为这些引擎没有解决「按照搜索结果的重要性和相关性排序」的关键问题。Google 成功了，因为有互联网搜索的金钥匙 Page Rank。Page Rank 又叫网页级别，是一种搜索引擎根据网页之间相互超链接引用的权重来计算网页重要性和相关度的算法，由 Google 的两位创始人发明。Page Rank 通过网络浩瀚的超链接关系来确定一个网页的等级，Google 把 A 页面中指向 B 页面的链接解释为 A 页面为 B 页面投票，然后根据投票来源和投票目标的等级来计算新的等级。&lt;/p&gt;&lt;p&gt;可以这样理解，如果你认为《MacTalk·人生元编程》是一本靠谱的书，那么书中提到的王小波的作品、吴军的作品、冯唐的作品、Linus 的作品，大体上也不会差到哪去，当你去读这些作品时，又会发现更多好的作品，这就是一种生活中的 Page Rank。当然，永远会存在一些例外，比如我的一位读者，读了一年多的 MacTalk，没有买《MacTalk·人生元编程》，而是直接买了一台 Mac，然后跑过来问我，为神马在 IE 上可以流畅的访问草榴社区，而 Safari 不行。这条神奇的PageRank 路径是：MacTalk —&amp;gt; Mac —&amp;gt; Safari —&amp;gt; 草榴社区。对于这种奇葩的路径，海量的数据样本可以将其稀释掉，所以整体上来讲，Google 搜索结果的排名还是非常精准的，而且没有竞价排名。&lt;/p&gt;&lt;p&gt;到了移动互联网时代，这一切都行不通了，因为我们到了另一个江湖。在这个江湖里，浏览器只是和上百万 App 平级的一个应用，它不再握有互联网入口的唯一金钥匙。浏览器从带头大哥变成了初入江湖的小球，原来的青龙偃月刀变成了小木棍，大家都在拄着木棍摸着石头过河。理论上，每一个 App 都是互联网的入口！在新的江湖里，所有的 App 都在肆意成长，数据继续以几何量级不管不顾的增加，每个 App 都形成了自己的王国，你想要搜索数据，可以，但必须在这个国度里检索。&lt;/p&gt;&lt;p&gt;每个 App 都形成了当年互联网诞生时候的「孤岛网站」，你想检索「多看阅读」里书籍，那么必须打开「多看阅读」App，如果你想查找「知乎」的问答，那么必须打开「知乎」 App。所有的应用都是封闭的，但搜索的需求永远存在，我们期待在一个统一的入口去搜索，当找到一本书的时候，直接进入多看或 Kindle 去阅读。&lt;/p&gt;&lt;p&gt;目前 Apple 在这个领域还无所作为，那么 Google 会不会再次拿到移动互联网搜索的金钥匙呢？我们看看 Google 做了什么。2013 年 12 月，Google 发布了 App Indexing，当你的应用接入了 App Indexing 时，在手机上的 Chrome 里使用 Google 搜索网页时，如果检索到和你的产品相关的内容，就可以看到「Open In App」按钮，点击可以跳转到对应应用的内容页面。App Indexing 虽然已经可以进行移动互联网搜索了，但是这种做法依然延续了 PC 时代的思路，试图通过 Web 把 App 链接起来。对于没有任何网页内容的 App 怎么处理呢？目前还没有答案。&lt;/p&gt;&lt;p&gt;其他厂商，例如 Quixey、Facebook、百度和360等都做了类似的尝试，但是在这个领域走的最深远的，或者实际可用的「应用内搜索」，是豌豆荚。&lt;/p&gt;&lt;p&gt;在我的 T1手机上打开豌豆荚，在搜索框输入「池建强」，可以直接检索到我的书《MacTalk·人生元编程》，点击打开，选择「多看」应用，然后就可以在多看里阅读这本书了。 &lt;/p&gt;&lt;img src="https://pic2.zhimg.com/74e4262f6caa601a05a0e57dc07e6095_b.jpg" data-rawwidth="1080" data-rawheight="1920" class="origin_image zh-lightbox-thumb" width="1080" data-original="https://pic2.zhimg.com/74e4262f6caa601a05a0e57dc07e6095_r.jpg"&gt;&lt;br&gt;&lt;p&gt;在搜索框输入「绣春刀」，可以看到更多选项，包括电影、特辑、壁纸、推荐应用等。点击播放，系统会提示你选择播放来源，优酷、腾讯视频还是土豆。选择了之后就可以直接打开相关应用播放了。 &lt;/p&gt;&lt;p&gt;另外，豌豆荚根据内容的相关度和优先级对搜素结果进行了排序处理。在搜索框输入「星际穿越」，搜索结果会先出现购票，之后是壁纸等相关内容。搜索的是已经下线的电影，才会出现视频条目。&lt;/p&gt;&lt;p&gt;搜索过程中，如果用户没有安装对应搜索结果的应用，系统会提示用户安装。&lt;br&gt;&lt;/p&gt;&lt;p&gt;这是真正的应用内搜索，和传统的 PC 时代互联网搜索半毛钱关系都没有。&lt;/p&gt;&lt;p&gt;为了更好的了解「应用内搜索」技术，我又去挖了一下「豌豆荚」。最初从创新工场知道了这个公司，那时它还是一个比较纯粹的 App 分发渠道和市场。到了2013年，豌豆荚已经开始涉足「应用内搜索」了。他们在2013年9月正式推出了「视频搜索」功能，用户在豌豆荚搜索到的视频可以直接调用手机上各视频应用播放，是全球首个将「应用内搜索」落地的产品。2014年1月，豌豆荚发布了「移动内容搜索」战略，将「应用内搜索」扩展到视频、电子书、主题、电影票等多个内容类别。&lt;/p&gt;&lt;p&gt;到了今年3月份，豌豆荚正式发布了「应用内搜索技术协议」，开始制定自己的标准，同时兼容 Google 的 App Indexing 协议和 Quixey 的 AppURL。豌豆荚的协议提供了一整套开放的应用内内容检索、收录和调用的标准，开发者通过描述应用内的内容、向豌豆荚提交内容信息以及应用支持外部调用即可完成接入。&lt;/p&gt;&lt;p&gt;具体来说，一个应用想要接入豌豆荚的「应用内搜索」，需要完成以下步骤：&lt;/p&gt;&lt;p&gt;第一步，让自己的 App 支持外部调用。豌豆荚使用 AppURL 指向可以在应用中展现的资源，比如优酷的视频播放可以用 youku://play/video/12345 来表示，多看的电子书描述页可以用 duokan://detail/ebook/22345。点击即可跳转到相关 App 的相关界面。&lt;/p&gt;&lt;p&gt;第二步，描述 App 的内容。豌豆荚使用微数据（Microdata）来描述应用中的每个项目，微数据是 Google、Bing 和 Yahoo 都支持的结构化数据标注方案，符合 HTML5 的标准，同时也可以用 XML 来表示。一本电子书可以通过微数据的 itemtype（类型）和 itemprop（属性）的嵌套进行完整的描述，例如书名、作者、简介、出版日期等等，具体的细节在豌豆荚的开发者中心（&lt;a href="https://link.zhihu.com/?target=http%3A//developer.wandoujia.com/search%25EF%25BC%2589%25E6%259C%2589%25E8%25AF%25A6%25E7%25BB%2586%25E7%259A%2584%25E6%258F%258F%25E8%25BF%25B0%25E3%2580%2582" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;http://developer.wandoujia.com/search）有详细的描述。&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;第三部，开发者提交自己的 AppURL 和 App 内容信息，豌豆荚根据开发者提交的内容分门别类建立索引，最终实现应用内快速检索。&lt;/p&gt;&lt;p&gt;了解了这些，我们就明确了这么几个问题：&lt;br&gt;1. 一个独立的 App 即使没有对应的 Web 页面，一样能够进行应用内搜索&lt;br&gt;2. 开发者可以选择接入和拒绝应用内搜索，类似互联网的 Robots 协议&lt;br&gt;3. 应用内搜索实际上是去豌豆荚的服务器端搜索，并把搜索结果返回到终端，并不是听起来的在「应用内搜索」&lt;/p&gt;&lt;p&gt;抛开商业模式不谈，豌豆荚的协议发布之后，他们已经在移动互联网搜索里有意无意的开始尝试 PC 时代互联网的 Google 的角色。但要想做的更为出色，豌豆荚还需要更大的创新和实践，比如接入的便捷性，搜索的速度，App 的规模，以及对非结构化数据的处理。&lt;/p&gt;&lt;p&gt;无论如何，豌豆荚已经在「应用内搜索」领域迈出了第一步，它让用户在茫茫的移动浪潮中迅速准确的找到自己需要的内容，然后顺畅安全的进行内容消费。相信「应用内搜索」会为移动互联网时代谱写出新的搜索篇章。&lt;/p&gt;&lt;p&gt;说完了 Android，再简单说说 iOS。其实苹果在 OS X 上的「应用内搜索」已经做的非常出色了，基于 Spotlight 技术，你可以快速查找和定位任何文件、资料和程序，无论是结构化还是非结构化。但是这个功能并没有完全移植到 iOS 上。&lt;/p&gt;&lt;p&gt;在 iOS 设备的任一屏幕中单指下滑，就可以使用 iOS 的 Spotlight 功能。你可以对原生应用进行「应用内检索」，例如日历、邮件、提醒事项、备忘录等等，这些是本地化检索，iOS 并没有索引其他 App 的应用内容，也没有提供接入方式和标准。在 iOS 8 里还可以可以对地图、维基百科、iTunes Store、App Store和 iBooks Store 等内容进行线上检索，很可惜的是，这些线上搜索功能目前还没有对国内用户开放。 &lt;/p&gt;&lt;p&gt;可以看出，iOS 上的 Spotlight 都是在索引自家的东西，但是，App Store 作为最大的移动 App 分发渠道，我相信他们一定会做面向所有 App 的「应用内搜索」。为什么现在没做，可能是因为安全因素，也可能是标准问题，也可能只是在等一个合适的机会罢了，比如 iOS 9……&lt;/p&gt;</description><pubDate>2014-11-21T21:57:55+08:00</pubDate></item><item><title>当程序员老去</title><link>http://zhuanlan.zhihu.com/p/19881838</link><description>&lt;p&gt;很多年以后，在我60岁的那天早晨，天刚蒙蒙亮我就起床了，先去公园晨练，然后回来做早餐（50岁的时候我学会了做饭），送完外孙上学，刚好8点。由于北京从2020年开始单双月限行了，这个月是单月，所以只能挤地铁。人一如既往的多，一小伙子要给我让座，看了看他的小身板，我说不用，你也是干 IT 的吧，今天咱们都是程序员。&lt;/p&gt;&lt;p&gt;来到公司，墙上那条新贴上去的刺眼规定总是让我很不舒服：所有的服务器端语言必须使用 Come，移动端语言使用 Swallow，还在使用 Java、C、Go 和 Swift 语言写程序的，罚款500元。我不知道自己还能学会几门新语言，工作了四十年，我已经用过一百多种编程语言了……&lt;/p&gt;&lt;p&gt;上午十点，00后 Team Leader 跑过来告诉我，池大大，新上线的智能手表操控 UI 是您老做的吗？好像出了点问题。我说是老王上周做的，他老花眼早就不该做 UI 了，这周没来，据说动脉硬化了。唔，那您帮他改改得了……&lt;/p&gt;&lt;p&gt;这个上午，老板又收到了两份在家办公申请，其中包括老冯的，申请理由是：腰不好。坐着站着都不能解决问题了，只能把屏幕安装在天花板上，躺着编程。我还行，一直打羽毛球，腰好，身体就好，吃嘛嘛香。不过今天中午却没什么食欲，因为牙疼，各种牙都开始松动了，只好在食堂里挑了点软乎的饭菜吃了。&lt;/p&gt;&lt;p&gt;下午部门开会。我发现唯一的70后主程（主力程序员）记忆力减退了许多。说完第8个功能点的实现后，丫突然来了一句：好，以上是第1点，现在来说第2点。直到下班，我们一直都在说第2点。会后主程怪我为什么没有提醒他，其实我一共提醒了他13次。不跟他计较，明年他65岁，就要退休了。&lt;/p&gt;&lt;p&gt;分配到需求之后，下午的工作就是画界面做表单填程序，这个工作我做了几十年，已经非常熟练了，编码的时间总是最快乐的，不知不觉就晚上10点了。回家吧，过了9点就可以打车了。&lt;/p&gt;&lt;p&gt;夜晚11点回到家，菜凉了，孩子们都睡着了。我躺在冰凉的床上，打开一本《Come 语言编程实战》开始读。程序员，是一个终身学习的行业……&lt;/p&gt;&lt;p&gt;看到这估计大部分程序员读者心都碎了……不用担心，不读 MacTalk，晚景才是凄凉的，看了的都没事！&lt;/p&gt;&lt;p&gt;关于「程序员老去」这个话题，从我开始编写第一行代码的时候就有了。那时候我二十郎当岁，正值青春年少，眉宇苍茫，中年人和老去仿佛是下一个世纪的事情（确实是），遥不可及。我时而在阿尔卑斯山脉编写代码，时而去草沿天路调试程序，我觉得世上之事无所不可为。只有那些年近三十的老程序员，听到这个话题时，才会紧蹙双眉一言不发，仿佛他们看到了无边落木和滚滚长江。&lt;/p&gt;&lt;p&gt;很快，我就站到了三十岁的十字路口，望了望周围，其他三个方向都没有路，只能向前，于是我非常不情愿的挪到了35岁这个黄金分隔线上，或者叫程序员的生命线。不知道是哪位大神为我们程序员画了这么一条线，三百六十行，行行出状元，为什么只有程序员才有这条线呢？用 Google 百度一下「程序员 35岁」，尽是「不作35岁的程序员」「技术大龄恐惧症」「35岁后要转管理」「35岁前程序员要规划好的 X 件事」这样耸人听闻的字眼，一想到自己并没有规划过「这些事」，我绝望极了，35岁生日的那一天可能会发生什么不好的事吧，比如编程、演讲、写作、设计这些技能都会烟消云算？我可能会跟不上时代的发展？我可能会被解雇吧，我想。&lt;/p&gt;&lt;p&gt;35岁生日过去了，除了收到生日礼物，什么事都特么没有发生，我依然活蹦乱跳的编程、演讲、写作和设计产品，一切都变得更好了。&lt;/p&gt;&lt;p&gt;再也不相信年龄了……&lt;/p&gt;&lt;p&gt;回首往事，我发现当年那些对编程充满激情，对生活满怀理想的小伙伴，有的变成了某个领域的技术大牛，在做产品的同时忙着布道演讲写书；有的经营者或大或小的公司，同时还在编写程序；有的设计出了千万人使用的软件产品；有的则转变成了一个纯粹的管理者，经营着上千人的机构。他们都是程序员。&lt;/p&gt;&lt;p&gt;真正有可能晚景凄凉的程序员，是对技术和产品没有兴趣的人，是仅仅把编程当做生活工具的人，是那些不能终身学习的人。开篇的文字，就送给这些人吧，希望他们能够在40岁以前看到这篇文章。&lt;/p&gt;&lt;p&gt;关于程序员转行的问题，也是个伪命题。没有人的职业是一成不变的，今天你在考虑 LVS 要使用 IP 隧道技术还是直接路由，负载调度使用加权轮叫还是最少链接，十年后你要做的可能是增加哪些产品特性和阅读用户的消费心理。时间会驱动着你去不停的选择自己的道路。&lt;/p&gt;&lt;p&gt;如果继续编程能够最大化你的价值，那就去编程，太多精深和复杂的技术需要长期的积累和实践才能化繁为简鬼斧神工，请在技术大神的道路上一路狂飙。&lt;/p&gt;&lt;p&gt;如果设计产品能够最大化你的价值，那就去设计产品，现代世界已经不再是「美学、艺术」与「电子产品、软件」毫无关联的年代了，人们越来越重视产品体验和艺术美学，如果你懂得产品之美，又能估算这个产品多久能够开发出来，还懂一些开发细节，不知道能够虐多少程序员啊，想想这个场景多么美好。&lt;/p&gt;&lt;p&gt;如果经营一家公司能够最大化你的价值，那就去创业，去招募战友，服务伙伴，提供产品，去创造属于你自己的天空。&lt;/p&gt;&lt;p&gt;如果演讲……如果咨询……如果市场……，很显然，我看到的程序员未来有无限可能，而且我们最大的优势是：这帮家伙甚至能编写代码，这真是太酷了！&lt;/p&gt;&lt;p&gt;当然，我们程序员也不要过于沾沾自喜，在某个领域深耕细作的同时，不要忘记拓宽自己的知识面。如果一个人的领域太过专业化，一段时间后，你可能发现自己的专业已经陈旧了。如果一个人的知识面很广，在终身教育的配合下，你的专业可以随着时代的变化而改变。&lt;/p&gt;&lt;p&gt;另外，在调试程序或程序出现问题的时候，程序员要避免说这些暗语：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;扯淡，这不可能！&lt;br&gt;我机器上就没事！&lt;br&gt;不应该啊……&lt;br&gt;一定是隔壁老冯的问题！&lt;br&gt;原来怎么没问题？&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;每少说一次，就能前进一大步！&lt;/p&gt;&lt;p&gt;最后，对不是程序员的读者也说两句吧，如果你身边有程序员，一定要对他们好，不懂技术不要对程序员说这很容易实现，平时多送些小礼物，他们不开心了就请吃海底捞，加不加班都要给他们加薪，没有女朋友的给介绍女朋友，还没订阅 MacTalk 的让他们赶紧订阅……你会有回报的。&lt;/p&gt;&lt;p&gt;经年以后，当你偶然之间再次翻到这篇文章，也许会说，唔，这个老家伙说的还有点道理呢！&lt;/p&gt;&lt;p&gt;以上文章来自微信平台「MacTalk By 池建强」，未经允许，禁止转载。&lt;/p&gt;</description><pubDate>2014-10-31T12:59:36+08:00</pubDate></item><item><title>优胜美地功能赏析（下篇）</title><link>http://zhuanlan.zhihu.com/p/19874014</link><description>&lt;p&gt;随着 OS X 优胜美地的正式发布，很多读者已经升级到了10.10，今天就给大家写写我们常用的那些原生应用和系统融合。&lt;/p&gt;&lt;p&gt;回顾一下，优胜美地上篇送给使用 Mac 做开发的程序猿们，他们看到新系统就像初恋时见到女友那样心急火燎，对开发者预览版动手动脚简直是一定的事，事实上保持好奇心也是一个开发者必备的素质。如果你对技术已经不感兴趣了，迅速转为产品经理是正确的选择。当然，这一篇受到了程序猿的交口称赞和……普通用户的无情吐槽：后半部分写的什么玩意，完全看不懂嘛。&lt;/p&gt;&lt;p&gt;带着众口难调的焦虑我开始写中篇，这是中流砥柱的一篇，不仅要照顾程序猿脆弱的感情，还要兼顾普通用户幼小的心灵，同时要为最终篇的炫彩功能进行铺垫和准备。于是，关于技术、UI 和设计的第二篇完成了，今天是第三篇。在开始正文之前我们先回答几个问题。&lt;/p&gt;&lt;p&gt;最近几天我的社交软件就像重灾区一样，各种问题从各种渠道雪片般飞来，从微博、从微信、为公众号后台、从知乎……还有些读者在微信后台时时吟唱：一直搬着马扎等新系统的下篇呢。看到这种盛况，我充满了春晚报平安的蛋蛋忧伤。问题不能一一作答，收到回复的问题都是好问题。下面贴几个常见问题的回复，供大家参考。&lt;/p&gt;&lt;p&gt;1、最长一分钟&lt;/p&gt;&lt;p&gt;系统安装到最后大部分程序员都会碰到「最长的一分钟」问题。解决方案就一个字「等」。如果你想看看丫到底在干嘛，键入 Command + L 可以查看安装日志。阅读这篇文章了解详细信息：&lt;br&gt;[&lt;a href="https://link.zhihu.com/?target=http%3A//osxdaily.com/2014/10/17/os-x-yosemite-installation-stuck/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;OS X Yosemite Installation Stuck with Minutes Remaining? Wait!&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;]&lt;/p&gt;&lt;p&gt;2、发热&lt;br&gt;安装完 Yosemite 之后，有童靴反映 Mac 出现发热和风扇轰鸣的现象。表担心，这是系统在进行索引初始化，碎文件多的时候持续的时间较长。通过命令行 top/htop 或活动监视器你会看到有个叫做 mds 的进程在辛勤的工作着。等这位仁兄做完本职工作，你的机器就会变得哇凉哇凉的。&lt;/p&gt;&lt;p&gt;3、开机时间&lt;br&gt;有些人觉得新系统启动变慢了，有的认为变快了，这和很多人对这个时代的感觉是类似的。感觉没什么错，因为大都是错觉。Yosemite 的开机提示从菊花旋转改为进度条，代表了真实的启动进度，比菊花的体验好一些。启动速度上没什么明显的提升，我的机器从屏幕点亮到出现登录页面大概16秒，和 Mavericks 差不多。&lt;/p&gt;&lt;p&gt;其实这一点不用过于纠结，首先，我们不需要去打败全世界百分之九十的其他用户，其次，如果是 macbook 的话，一个月重启两次就差不多了。去干点别的。&lt;/p&gt;&lt;p&gt;4、程序兼容性&lt;br&gt;新系统升级后必然带来小部分程序的不兼容，这个需要时间来解决。不用来问我，你用的软件可能我根本没用过或不用了，去问 Google。如果 Google 也这么说，那么可以选择恢复到 Mavericks，再等等。&lt;/p&gt;&lt;p&gt;还有读者问到 CocoaPods 的问题，这个涉及的内容多一些，等我单开一篇文章写吧。下面主要讲一些我觉得有意思的和值得介绍的功能。&lt;/p&gt;&lt;h4&gt;炫彩功能&lt;/h4&gt;&lt;p&gt;1、Safari&lt;br&gt;首先说说大家最常用到的浏览器 Safari，本次升级后，Safari 的版本是8.0。这个新版本的浏览器对 UI 进行了极大的简化，默认只保留了工具栏，由于工具栏上的图标由非常简洁的线条和图案构成，所以占用面积极少，为内容的展示留出了尽可能多的空间。不用担心之前的个人收藏栏，当你把鼠标停留在智能搜索栏内的时候，个人收藏自动浮现，喜爱的站点触手可及。&lt;br&gt;【参见题图】&lt;/p&gt;&lt;p&gt;另外，显示「所有标签页」功能也进行了全新的设计，键入Shift + Command + \uff0c可以看到当前浏览器所有标签页的预览图，与 Safari 7 不同的是，预览图的滚动方向由横向改为纵向，操作流畅，最底部显示了其他设备上正在打开的云标签。同一个域名的不同网页还进行了分组，比如你打开了 &lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;MacTalk-池建强的随想录&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; 上的多篇文章，标签预览时系统会自动把这些文章成组并以重叠的方式展示，方便用户浏览。&lt;/p&gt;&lt;p&gt;分享功能也增强了，现在你可以把当前浏览的网页分享到邮件、短信、AirDrop、新浪微博、腾讯微博、Twitter等服务商，如果你安装了 Pocket（稍后读软件）或奇妙清单等实现了 Mac 扩展的软件，还可以把链接分享给这些软件提供的服务。&lt;br&gt;&lt;img src="https://pic3.zhimg.com/5e8f42661f8d9daece1ed67a40da5826_b.jpg" data-rawwidth="418" data-rawheight="442" class="content_image" width="418"&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;点击「更多」进入「系统偏好设置-扩展」界面进行设置，这是 Yosemite 提供的新功能，第三方软件可以通过扩展接口自定义 Mac 服务。关于扩展功能，以后也可以单开主题细讲。&lt;/p&gt;&lt;p&gt;2、邮件&lt;br&gt;邮件部分只有两个功能可以说说。&lt;/p&gt;&lt;p&gt;一个是 Mail Drop。当你想发送大附件的时候，系统会做出如下提示：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;您要使用 Mail Drop 来发送此附件吗？&lt;br&gt;此附件可能过大，无法通过电子邮件发送。Mail Drop 可使用 iCloud 发送较大的附件。附件有效期为 30 天。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;也就是说，系统会自动把附件内容传到 iCloud 上，并在邮件中附上下载链接，链接有效期是30天。虽然附件大小的上限是 5GB，但是我不建议大家去发布超过 1G 的附件，看似秒发，实际上需要通过网络把本地文件传到 iCloud 上，之后对方才能收到邮件。超过 1G 的附件会让用户等到地久天荒海枯石烂痛不欲生，正常一点，几十 M 的附件才会有良好的用户体验。&lt;/p&gt;&lt;p&gt;另一个是附件标注功能。当你写邮件的时候拖进一张图片，将光标移动到图片上，图片的右上角会出现一个下拉箭头，点击后出现「标记」菜单，再点击进入图片标注界面，你可以根据标注工具栏对图片进行修改、签名和标记。&lt;/p&gt;&lt;p&gt;如果想标记收到的图片怎么办？点击回复邮件，这时候邮件里是不带图片或其他附件的，点击当前邮件窗口右上角第三个图标（附件图标旁边），就可以增加原始邮件中的附件了，标注方式同上。&lt;br&gt;&lt;/p&gt;&lt;p&gt;3、通知中心&lt;br&gt;通知中心增加了「今天」视图，在这个视图里我们可以发布社交信息（微博、推特等），查看日历、行程、提醒、股票、天气等信息。点击底部的「编辑」按钮，还可以添加新的项目，该项目同样来自 Mac 开放的第三方扩展，比如虚拟机 Parallels Desktop 就为通知窗口开发了小部件，可以随时监控虚拟机的运行状态。&lt;br&gt;&lt;img src="https://pic1.zhimg.com/825e6aab34d0d30659c22370855275a0_b.jpg" data-rawwidth="333" data-rawheight="499" class="content_image" width="333"&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;目前 OS X 和 iOS 通知中心的功能和展示方式保持了高度的一致，日常事务和通知管理都可以在通知中心找到。&lt;/p&gt;&lt;p&gt;也许在未来的某一天 iOS 和 OS X 进行了彻底的融合，也未可知。&lt;/p&gt;&lt;p&gt;4、Spotlight&lt;br&gt;Spotlight 终于抛弃了延续多年的右上角搜索框设计，改为类似 Alfred 的悬浮查询界面，并且根据查询结果按照左列表右预览的方式进行展示。&lt;/p&gt;&lt;p&gt;美版的 Spotlight 服务支持维基百科、网站、地图、iTunes、电影、字典、通讯录、全文检索、邮件等检索。国内是阉割版的，不支持维基百科和地图服务，按理说这俩服务也没得罪共济会和蓝翔组织啊，不知道为什么不给大陆人民享用。&lt;/p&gt;&lt;p&gt;举两个例子，呼出 Spotlight（默认Ctrl + 空格），输入 89800日元，Spotlight 会告诉你这些日元等于 5136.96 人民币，同时下方显示美元、欧元、英镑的相应价格。多说一句，这个数字是日本 64G iPhone 6 Plus 的价格，各位感受一下。输入一个通讯录的人名，Spotlight 会在预览区域显示这个人的详细信息，你甚至可以直接在这拨打该联系人的电话。&lt;br&gt;&lt;img src="https://pic3.zhimg.com/6a96fdc7b2aafad1779dbb340e27276a_b.jpg" data-rawwidth="1348" data-rawheight="868" class="origin_image zh-lightbox-thumb" width="1348" data-original="https://pic3.zhimg.com/6a96fdc7b2aafad1779dbb340e27276a_r.jpg"&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;功能多多，大家可以自己体会。有了改版后的 Spotlight，是否可以删掉小帽子 Alfred 了？我觉得目前 Spotlight 还无法取代 Alfred 的功能，尤其是收费版。仅 workflow 的特性就够 Spotlight 再追几条街的。都留着吧，各取所需。&lt;/p&gt;&lt;p&gt;5、信息&lt;br&gt;iOS 8上能够实现的「信息」功能，现在 Mac 上也可以，包括发送图片、语音、群组对话等功能。除此之外，Mac 上的信息 App 还增加了屏幕共享的入口。&lt;/p&gt;&lt;p&gt;想要实现屏幕共享，首先要去系统选项设置-共享-屏幕共享中启用该功能，然后在信息 App 的两人或多人会话中点击「详细信息」，再点击右上第一个按钮，邀请共享我的屏幕，或请求共享屏幕。对方接受后，你们就可以共享屏幕，处理文稿、浏览网页、协作开发等等。当你开始共享屏幕时，信息 App 会自动开启音频聊天，让你可以同时与人进行充分的讨论。&lt;/p&gt;&lt;p&gt;现有的屏幕共享方式比之前版本大概要方便3.89倍，谢谢。&lt;/p&gt;&lt;p&gt;随着 Yosemite 的发布，iWorks 系列、iPhoto、iMovie、GarageBand 都进行不同程度的更新，具体可以参考以下网址：&lt;/p&gt;&lt;p&gt;[&lt;a href="https://link.zhihu.com/?target=http%3A//www.apple.com/cn/osx/apps/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;Apple - OS X&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;]&lt;/p&gt;&lt;h4&gt;融合 - OS X 和 iOS&lt;/h4&gt;&lt;p&gt;OS X 和 iOS 的融合从10.8（Lion）版本的 Launchpad 就开始了，历经三个版本的整合，OS X 已经从展现方式到功能互联互通实现了二者的完美连接，未来这种整合的趋势会进一步的增强。&lt;/p&gt;&lt;p&gt;现在我们可以用 Mac 发短信、打电话，基于 Handoff 技术在 Mac 和 iOS 设备之间无缝穿梭：从哪里开始，从哪里结束，我一言难尽，忍不住开心……好的，下面我们看一下如何设置以实现 OS X 和 iOS 的融合，这也是很多读者问到的问题。&lt;/p&gt;&lt;p&gt;1、多台设备使用同一个 Apple ID 登录。&lt;/p&gt;&lt;p&gt;2、从「系统信息」里查看蓝牙的 LMP 版本是0x6以上，否则不能使用 Handoff 功能。&lt;/p&gt;&lt;p&gt;3、打开系统偏好设置-通用，勾选「允许在这台 Mac 和 iCloud 设备之间使用 Handoff」&lt;/p&gt;&lt;p&gt;4、在 iOS 设备上打开设置-通用-Handoff 与建议的应用程序，所有的选项都打开。&lt;/p&gt;&lt;p&gt;5、打开 Mac 的 Facetime，进入偏好设置，打开所有选项，包括「iPhone 蜂窝移动网络通话」。&lt;/p&gt;&lt;p&gt;6、打开所有设备的 Wi-Fi 和蓝牙，所有设备在同一 Wi-Fi 网络。&lt;/p&gt;&lt;p&gt;好的，万事俱备，只欠东风，现在试试用 Mac 打个电话吧。通过通讯录、Facetime 或 Spotlight 都可以播出电话，通话质量还是不错的。当有人给你打电话的时候，你的 Mac，iPhone，iPad，iPad mini 会同时响起，那个时候，你会充满一种万国来朝的淡淡忧伤，开始时差不多每次都会以手忙脚乱不知道接通哪个设备最终挂断电话结束通话。练习4.8次之后，你差不多就能从容的用 iPad Air 或 Mac 接打电话了。&lt;/p&gt;&lt;p&gt;关于 Handoff，可以看做是桌面设备和移动设备之间操作的延续。在 Mac 上编辑邮件时，iPhone 的锁屏界面左下角就会出现一个邮件图标，点按图标上滑，就可以在 iPhone 上继续编辑这封邮件。同理，当你在 Mac 上打开 Safari、日历、备忘录、提醒事项、Pages、Numbers、Keynote、地图等，都可以在 iPhone 上以同样的方式继续操作。&lt;br&gt;&lt;/p&gt;&lt;p&gt;在 iPhone 上打开这些应用时，Mac 上 Dock 的最左边和切换程序栏的最左边都会出现相应的程序图标，打开即可继续在 Mac 上接续 iPhone 上的操作。&lt;/p&gt;&lt;img src="https://pic3.zhimg.com/c268a0caa12257e5f8853a33991e95d2_b.jpg" data-rawwidth="822" data-rawheight="1227" class="origin_image zh-lightbox-thumb" width="822" data-original="https://pic3.zhimg.com/c268a0caa12257e5f8853a33991e95d2_r.jpg"&gt;&lt;p&gt;可以想象这样一个应用场景：一个项目经理正在 Mac 上津津有味的阅读一篇文档或网页，突然便意涌上心头，抄起 iPhone 6就走，行进中划开屏幕，继续阅读或编辑，直到在 WC 打完收工。整个过程无比流畅，一气呵成，大宗师气势尽显，便是如此。&lt;/p&gt;&lt;p&gt;最后说一句，AirDrop 终于支持 Mac 与 iOS 设备之间进行文件共享了。&lt;/p&gt;&lt;p&gt;--------------------------------&lt;/p&gt;&lt;p&gt;截止到今天，优胜美地系列就算写完了。国庆长假之后，一口气写了恋恋风尘和优胜美地两个系列，于我而言，更喜欢前者。&lt;/p&gt;&lt;p&gt;这是一个功利阅读的时代，大部分人都恨不得读完一本书或文章后立马技能增长工资翻倍，所以前者的阅读量必然完败于后者。但真正能够长久的影响你的人生的东西，必然是思想、是诗、是远方。&lt;/p&gt;&lt;p&gt;--------------------------------&lt;br&gt;&lt;/p&gt;&lt;p&gt;内容来自微信公众平台「MacTalk By 池建强」。阅读上篇和中篇，请订阅微信号（sagacity-mac），就懒得在这里贴了。&lt;/p&gt;&lt;p&gt;未经允许，禁止转载。&lt;/p&gt;</description><pubDate>2014-10-21T10:27:47+08:00</pubDate></item><item><title>冰封四海</title><link>http://zhuanlan.zhihu.com/p/19851341</link><description>&lt;p&gt;很多读者在后台询问，MacTalk 最近怎么不更新文章了。感谢大家的惦念，长途旅行归来后我如期得了一场重感冒，今天算刚刚恢复。今晚给大家讲个故事，再讲点知识。&lt;/p&gt;&lt;p&gt;十五世纪之前，地球上充盈的海水把大陆分隔开来，每块陆地上的人们隔海相望，只见飞鸟不见人烟。你不知道我，我没见过你，于是老老实实在自己的土地上日出而作，日落而息，生活、奋斗、思考、厮杀、征服或被征服，过着幸福美好或颠沛流离的生活。&lt;/p&gt;&lt;p&gt;直到有一天，大家几乎同时发明了一种叫做船的东西，当然还有罗盘、六分仪、海图、三角帆、艉舵等等，这种「船」可以在各种复杂气候条件下远航大海而不沉。于是那个时代最伟大的航海开始了，心向远方的人们勇敢的离开陆地，远征海洋，人们发现了新的陆地和新的航道，知道了天外有天，海外有海，人外有人，大航海带来的物种和人种的交换、文化和贸易的交流，为整个世界带来了新的变化，对世界各大洲在数百年后的发展产生了深远的影响。&lt;/p&gt;&lt;p&gt;史称地理大发现或大航海时代。&lt;/p&gt;&lt;p&gt;在那个全世界人民纵横海上的年代，贵族和骑士低下了高昂的头，商人和海盗开始扬眉吐气，交织着汗水、鲜血和黄金的大潮，让世界迎来了第一次全球化的浪潮。这时，我大车迟国在干什么呢？我们开始了轰轰烈烈的封关禁海运动。对于物资丰饶的庞大帝国来说，大海并不重要，重要的是帝国的稳定。&lt;/p&gt;&lt;p&gt;那个时候的帝王对未知的大海充满了戒心和恐惧，因为海上的商人往往富可敌国，而且「引贾四方，举家舟居，莫可踪迹」，是富裕而移动的流民。同时由于沿海的叛乱和东邻岛国流寇等等原因，让帝王感到当面对海上势力的时候，帝国没有任何办法，只能试着把他们挡在国土之外。&lt;/p&gt;&lt;p&gt;无论是什么原因，海禁这种短时而封闭的政策，让我大车迟国走上了闭关自守的道路，并陷入了一个「西进车迟退」的历史漩涡之中。&lt;/p&gt;&lt;p&gt;随光荏苒，岁月更替，很快就来到了五百年后……&lt;/p&gt;&lt;p&gt;上个世纪六七十年代，我车迟国在英明神武万寿无疆的伟大路易第五乘以四再加八等于十六世国王的率领下，已经成为世界上的超级强国，我们的所有农村都已经用上了厕所，电灯的普及率达到了百分之九，每个村子都有一头牛，每三天就能吃上一顿白米饭，这样的经济成就，你们怕了吧？（引自西游日记）&lt;/p&gt;&lt;p&gt;人家没怕，因为那些人早过上了二十一世纪的生活，他们开始发明一种叫做互联网的东西。三十年后，全人类第二个大时代来临，互联网开始席卷全球。它比当年的大航海时代来的更加澎湃和凶猛，人们足不出户，就可以通过信息的传递把彼此连接在一起，除此之外，人与物的连接，物与物的连接，人工智能的觉醒，开始接踵而来，人们感受着信息的洗礼并开始欢呼雀跃，一个自由的新时代终于来临了！&lt;/p&gt;&lt;p&gt;但是，五百年过去了，对于物资丰饶的庞大帝国来说，互联网依然并不重要，重要的是帝国的稳定。某个魔法学校的校长研制出了一种邪恶的信息阻塞工具，人们把它叫做信息防火XX，大部分民众只能在这个XX之内「自由」徜徉。时至今日，这个帝国依然希望做到，「你能够看到的，就是我们希望你看到的」，多年以后，无人知道 Google！&lt;/p&gt;&lt;p&gt;当然，古老的魔法已经很难阻挡现代的科技，少数人借助 其他工具等地下通道可以在信息长城内外自由进出。但更多的人，根本不知道长城的存在，偶尔撞上，折返走回。而这少数人，也可能仅仅是个「锡安城」罢了。&lt;/p&gt;&lt;p&gt;也许有人会问，为什么五百年前的那些人要冒着生命危险去航海？因为海就在那里，心向远方是人类的宿命。遗憾的是，五百年过去了，我们依然无法抵达信息的远方。&lt;/p&gt;&lt;p&gt;这个世界，依旧冰封四海。&lt;/p&gt;&lt;p&gt;故事讲完了。&lt;/p&gt;&lt;p&gt;——————&lt;/p&gt;&lt;p&gt;引发这个故事的原因是有些读者反映我的网站 &lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;macshuo.com&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; 变得非常慢，并且无法评论。我试了一下，用程序员的常用语做了回复：「没发现问题啊」。后来我才意识到，我特么是在「锡安」。&lt;/p&gt;&lt;p&gt;查了一下找到了原因，变慢是因为以下两个域名的被封掉了：&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//ajax.googleapis.com" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;ajax.googleapis.com&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//fonts.googleapis.com" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;fonts.googleapis.com&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这两个域名是 Google 为全世界开发人员提供的公共 js 库和公共字体库，谁知道这么厚道的域名也会被封掉呢？以前我们以为是只封锁 Google 的，我错了。解决办法就是用其他的公共 js 库和公共字体库替换掉 Google 的东西，并敬告之：以后热脸不要再贴冷屁股了，谢谢。&lt;/p&gt;&lt;p&gt;目前360网站卫士提供了这样的CDN服务：[&lt;a href="https://link.zhihu.com/?target=http%3A//libs.useso.com/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;360网站卫士常用前端公共库CDN服务&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;]&lt;/p&gt;&lt;p&gt;替换脚本如下：&lt;/p&gt;&lt;br&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;grep "ajax.googleapis.com" /var/www/* -R | cut -f 1 -d ":" | uniq | xargs sudo sed -i 's/ajax.googleapis.com/ajax.useso.com/g'

grep "fonts.googleapis.com" /var/www/* -R | cut -f 1 -d ":" | uniq | xargs sudo sed -i 's/fonts.googleapis.com/fonts.useso.com/g'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中/var/www/是网站的程序位置。&lt;/p&gt;&lt;p&gt;评论的问题如出一辙，由于我在博客的评论中使用了[&lt;a href="https://link.zhihu.com/?target=http%3A//jetpack.wordpress.com" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;jetpack.wordpress.com&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;]的插件，而这个网址也令人发指的被封掉了。我试了一下 https 的协议，非常幸运，居然还可以访问，于是问题就简单了，到文件 wp-content/plugins/jetpack/modules/comments/comments.php 里找到两个 $url_origin 变量，赋值方式改为：&lt;/p&gt;&lt;br&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;$url_origin       = 'https://jetpack.wordpress.com';
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;改完之后，&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;macshuo.com&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; 开始焕发出勃勃生机，重新运转如飞。如果你的网站也采用了 WordPress 技术，并遇到了类似问题，可以采用上述方式尝试解决，不客气。&lt;/p&gt;&lt;p&gt;村上春树写过一篇著名的文章叫做「高墙与鸡蛋」，文中写到：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;假如这里有坚固的高墙，而那里有一撞就碎的蛋，我将永远站在蛋的一边。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;于我而言，我只是希望，这面高墙尽快出现裂缝并轰然倒掉。&lt;/p&gt;&lt;p&gt;今日题图：Saatchi Online Artist: Simon Kenny; Oil, 2013, Painting “The Fallen”&lt;/p&gt;</description><pubDate>2014-09-17T21:45:03+08:00</pubDate></item><item><title>未来与传统 - 苹果发布会记</title><link>http://zhuanlan.zhihu.com/p/19847551</link><description>&lt;p&gt;昨天的文章推送之后，本来是要看凌晨苹果发布会直播的，于是早早抱了 Mac 上床，准备一边看美剧提神，一边等着发布会开幕。结果万万没想到，长途旅行埋藏在身体里的疲劳后劲悠长，身体一着床大脑就下了死命令：少特么废话，睡！后果就是 Mac 还没打开我自己已经昏睡过去。等下一次睁开惺忪的双眼，已经两点多了。打开 Mac 一看，发布会已近尾声，库克正和 U2 乐队的主唱 Bono 眉来眼去，再打开微信，朋友圈显示 iPhone 6 和 Apple Watch 已经顺利发布，于是我又安心的睡了。&lt;/p&gt;&lt;p&gt;今天断断续续看完了发布会的视频，还是很有感触的，尤其是「One more thing」的桥段，依然震撼人心。很多读者也在后台催促，卖桃君还写一点吧。所以，虽然疲劳，例行的点评还是少不了的。&lt;/p&gt;&lt;p&gt;事实上大家已经习惯了每一次苹果发布会后媒体和大众的毁誉参半，吐槽的热点大都集中在硬件的工业设计和软件的 UI 上，说白了就是个人审美问题。而审美这件事，往好听里说是仁者见仁，不好听就是大众缺乏独立的审美能力。在「美」这件事情上，永远是设计天才和精英人物主导潮流，看看拟物化设计和扁平化设计的演化过程你就知道了。&lt;/p&gt;&lt;p&gt;我记忆中发布会后赞誉与膜拜齐飞的就只有2010年的 iPhone4，那是一次近乎完美的产品展示和个人演讲，整整1小时50分钟，乔布斯站在科技与人文的十字路口，持剑四顾、眉宇苍茫。在那个瞬间，乔布斯仿佛风华绝代的大师，小小地球，都尽在掌心。发布会之后，苹果和乔布斯的声誉抵达巅峰。「崖山之后，再无中国」，即使之前乔布斯发布 iPad 时很多人也会台下窃窃私语：「这老头在搞毛线啊？为什么不搭配强劲的 Mac OS X，而是弄出了一个大号的 iPhone 呢」？后来 iPad 一样畅销全球。&lt;/p&gt;&lt;p&gt;所以，今天发布的 iPhone6，iPhone6 Plus 和 Apple Watch，能否成为苹果新经济的增长点，最终还要看市场的反应。如果问我个人的意见，还是那句老话：「不要在乎这些细节，反正你们迟早会喜欢上它的」。&lt;/p&gt;&lt;p&gt;这次发布会伊始，「库房管理员」库克先生并没有按照惯例啰哩啰嗦清点库房中的产品取得的辉煌数字，而是简单介绍了上一代 iPhone 的销售情况，随即进入 iPhone 6的发布主题。由于剧透太多，手机的外形、尺寸、突出的摄像头、颜色等，该透的都透过了，所以产品发布虽然充满科技含量，但并无惊喜，值得探讨的大致有这些内容：&lt;/p&gt;&lt;img src="https://pic3.zhimg.com/bcb1d2b203e64a09f0cace50918707e6_b.jpg" data-rawwidth="2042" data-rawheight="890" class="origin_image zh-lightbox-thumb" width="2042" data-original="https://pic3.zhimg.com/bcb1d2b203e64a09f0cace50918707e6_r.jpg"&gt;&lt;p&gt;Bigger than bigger，岂止于大！苹果不再扭扭捏捏的把 iPhone4 拉长到四寸还不好意思半天，这次是「直接大，大更多」，不仅有4.7寸屏，更有5.5寸的可选尺寸。我曾经是3.5寸屏的坚定支持者，直到我用了4寸的 iPhone5。等到我尝试了5寸左右的 米3 和 T1 之后重新拿起 iPhone5，同样感到局促不安。显然，大屏手机在阅读、游戏、输入操作等各个方面都更具优势。&lt;/p&gt;&lt;p&gt;iPhone6 的边框设计抛弃了锐利的直角，而是采用了更为圆润的弧形设计，仔细看视频可以发现，视网膜屏稍有突出，其表层玻璃边沿以流畅的弧度向下延伸，没有明显的边线和缝隙，顺滑一体，这种设计风格让握持会更舒服一些，手机也不会显得太大。&lt;/p&gt;&lt;p&gt;iPhone 屏幕变大让 Android 手机的大屏优势荡然无存，更加激烈的竞争已经到来，而且大屏幕会催生出更多创意 App，比如游戏、阅读和横屏展示，这两者对于消费者和开发者来说，都是好事。&lt;/p&gt;&lt;p&gt;于我而言，我会选择 iPhone6 Plus，「既然大，就最大」，何况它的屏幕密度更高、续航更久，还能全屏横排显示和光学防抖，而且更贵：）&lt;/p&gt;&lt;p&gt;拍照和视频效果也有了大幅度的改进，对焦速度再次提升（吐槽：锤子 T1 的成像效果虽然不错，但是对焦速度慢的一逼，一般人在光线不好的情况下拍摄可以做到每一张照片都不清晰，牛逼死了。当然，哥不是一般人），拍摄视频时可以自动对焦，再也不用担心手指把屏幕戳坏了。数码防抖和光学防抖让人运动时也可以拍摄出稳定的画面，摄像软件可以拍摄出慢速影像和延迟影像，制作家庭影像大片成了分分钟的事。&lt;/p&gt;&lt;img src="https://pic4.zhimg.com/5e2bc462bd695859ec1f1a470bf07f5f_b.jpg" data-rawwidth="1348" data-rawheight="774" class="origin_image zh-lightbox-thumb" width="1348" data-original="https://pic4.zhimg.com/5e2bc462bd695859ec1f1a470bf07f5f_r.jpg"&gt;&lt;br&gt;&lt;p&gt;说到摄像，不得不说苹果在功能和美学上做出的妥协。为了兼顾机身厚度和摄像头组件厚度，苹果放弃了一贯坚持的一体化设计，在 iPhone 6 背板上的摄像头采用了突出式设计，这种妥协兼顾了更薄的机身和更好的拍摄性能，但是影响了 iPhone 机身的一致性，如果是在乔布斯时代，我想他老人家绝对不会让这种瑕疵出现。现在我们只能希望一年以后的 iPhone 6S 能够解决这个问题。&lt;/p&gt;&lt;p&gt;总之，每一次创新和颠覆都是由那个时代的硬件水平、软件技术和穿透未来的创意达成的。2001的 iPod 有大容量微硬盘，2007年的第一代 iPhone 有多点触控技术，2010年的第四代 iPhone 有视网膜屏，这些具备突破性的技术与苹果的创意设计产生了极大的化学反应，催生了伟大的产品。&lt;/p&gt;&lt;p&gt;一个人孤零零的走在科技时代的最前沿，左右顾盼，空山无人，那么他的一生注定是悲哀的，没有土壤的创意会像花儿一样凋谢在风中。&lt;/p&gt;&lt;p&gt;智能手机发展了这么多年，大致处于这样一个瓶颈期，手机长了、宽了、大了、薄了，屏幕足够清晰，硬件足够快速，还能怎样？电池技术、全息技术、液态金属、更薄更轻的芯片，这些都没有突破性进展。如果我们想把所有的数据都存入一张透明卡片，可折可弯，撑开当报纸，合上当手机，扔出去插卡，拿回来带表，那么，我们还需要再等等，给自己，也给这些科技公司一些时间。&lt;/p&gt;&lt;p&gt;以上主要聊了 iPhone 6，表达了两个意思：&lt;/p&gt;&lt;p&gt;1、未来可期，智能手机的再次创新需要时间和新的土壤&lt;/p&gt;&lt;p&gt;2、反正你们迟早会喜欢上它们的&lt;/p&gt;&lt;p&gt;——————&lt;/p&gt;&lt;p&gt;聊完了未来，再说说传统。事实上发布会后面的内容，才是重中之重。与乔布斯的长袖独舞不同，库克更像一个睿智的领舞者，他引领着苹果团队，向世界展示如何挑战和颠覆传统业务。而这些内容，在发布会之前几乎没有一丝一毫的泄露。这一点也说明了，你所知道的泄露只是苹果想让你知道的。苹果不想让你知道的内容，依然可以做到乔布斯时代的保密级别：滴水不漏。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;首先是支付。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;当所有人以为库克要发布下一款新产品的时候，他老人家「biu」的一声变出了一个钱包，然后告诉全世界，苹果新服务的目标是取代这个人民群众用了几百年的玩意，服务的名称叫做：Apple Pay。&lt;/p&gt;&lt;p&gt;移动钱包的概念有些年头了，包括支付宝钱包和微信支付，似乎都在解决移动支付的问题，但是这些支付工具解决的是线上支付，传统的钱包和信用卡领域依旧无人涉足。因为很少有哪个机构或系统能够把类型庞杂的信用卡连接起来，并形成安全和封闭的支付链条，苹果可以。苹果的 iTunes App Store 拥有数以亿计的活跃账户，每个账户都绑定了信用卡，然后，苹果把 NFC（近场通讯）、Touch ID 、Secure Element 和 Passbook 全部装配到 iPhone6 上，从而形成了一个完整而安全的支付体系。这就是 Apple Pay。&lt;/p&gt;&lt;p&gt;Apple Pay 提供了一种极为简单和安全的支付方式，你可以随时随地购买生活中的物品和服务，比如在超市和商场购物，付会员费，酒店预订以及演出门票等等。通过 Touch ID，用户可以使用储存在 iPhone 6/Plus 上的信用卡和借记卡的支付证书来授权支付，支付并不会直接使用你的帐号，而是用一次性动态安全号码进行交易。这些证书的模型包含了Secure Element，可以将支付证书从 App 运行的主进程中分离出来，确保安全支付。手机丢了怎么办？除了密码保护外，还可以使用「Find My iPhone」中止手机上的支付功能。&lt;/p&gt;&lt;p&gt;所有的支付，触手可及！可以说，苹果的钱包并不是颠覆现有的支付体系，而是去改进人类的传统生活方式。&lt;/p&gt;&lt;p&gt;每次出现新的生活场景总是让人兴奋不已。一想到某一天自己被馅饼砸到之后带着一部可以支付全球的手机走遍世界时，还真是有点小激动呢。无论如何，世界总会变得更好，即使我们用不了，看着国际友人用用也是好的……&lt;/p&gt;&lt;p&gt;开发者们也不用着急，苹果已经在第一时间推出了 PassKit Framework 和 Apple Pay 使用指南，相关网址：&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=https%3A//developer.apple.com/apple-pay/Getting-Started-with-Apple-Pay.pdf" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;https://&lt;/span&gt;&lt;span class="visible"&gt;developer.apple.com/app&lt;/span&gt;&lt;span class="invisible"&gt;le-pay/Getting-Started-with-Apple-Pay.pdf&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;是时候为你的 App 加上 Apple Pay 功能了，一种全新的支付方式。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;然后是手表。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;讲完了支付，就进入最后的「One more thing」阶段，库克采用了这种标志性的桥段来发布一款全新的产品，是我能想到的最好方式。&lt;/p&gt;&lt;p&gt;暖场视频把发布会带入了最后的高潮。从充斥整个屏幕的地球边缘起始，旋转的地平线和广袤的太空完美贴合，随着地表的浮现，屏幕边缘开始切入柔和而带有科技感的金属材质，精致、温润、流光溢彩，从表沿、表冠、四枚传感器、再到表盘、软件界面、表链，直到整个产品的细节和整体完美呈现，最后屏幕上浮现出产品名称，不是大家期待已久的 iWatch，而是「Apple Watch」。&lt;/p&gt;&lt;img src="https://pic2.zhimg.com/7b17e80b40d745d637f36177f4852aa1_b.jpg" data-rawwidth="734" data-rawheight="818" class="origin_image zh-lightbox-thumb" width="734" data-original="https://pic2.zhimg.com/7b17e80b40d745d637f36177f4852aa1_r.jpg"&gt;&lt;br&gt;&lt;p&gt;整个视频极为震撼，现场的所有观众起立鼓掌，气氛到达发布会的顶点。看完这个视频我就意识到，苹果要发布的并不是一款类似 Google Glass 的高科技产品，只面向科技达人和专业领域，而是给所有希望拥有一款手表的普通大众提供了另一种选择。苹果要颠覆的不是智能手环，运动手表和其他可穿戴设备，他的目标就是手表，瑞士钟表那样的传统手表。&lt;/p&gt;&lt;p&gt;按照这样一个定位，我们就不难理解，苹果为什么要在发布会上反复展示手表的材质和款式，不同的表盘和表带的搭配效果等。如果遮住表盘，Apple Watch 和传统手表并无二致，我想苹果会说「这就是我们要做到的」。很少人愿意长期在手腕上带一个智能手环，但是无数的人依旧钟爱时尚而充满科技感的传统手表，改进人类传统的生活方式，同样是这款产品的定位与职责。&lt;/p&gt;&lt;p&gt;方形表盘是被吐槽最多的一个设计，这种平衡其实很容易理解。方形显然没有圆形美观，但是苹果始终是以设备、软件和服务三者构建的生态圈来获取市场，考虑到圆形屏幕会为开发者设计 App 带来巨大的麻烦，方形屏幕就成了唯一的选择。如果为了外观完美，在圆形表盘内嵌一个方形屏幕，那才是最愚蠢的设计。&lt;/p&gt;&lt;p&gt;Apple Watch 在设计上吸引我的地方：&lt;/p&gt;&lt;p&gt;1、采用了柔性视网膜屏，表盘由蓝宝石制成，屏幕色彩靓丽，不仅支持触控，而且能够感受压力操作。&lt;/p&gt;&lt;p&gt;2、抬手看表的动作会点亮屏幕，这个简单的设计让你佩戴智能手表时显得和正常人一样。我见过很多智能手表，当你要看时间的时候，需要非常反人类的敲打表盘或按某个按钮。如果这时候凑巧有个朋友在旁边，他会拍拍你的肩膀告诉你，兄弟，对自己好一点。&lt;/p&gt;&lt;p&gt;3、MagSafe 感应式无线充电，比 Mac 和 iPhone 的充电方式更进一步，连裸露的触头都取消了。轻轻一扣，充电无忧。&lt;/p&gt;&lt;p&gt;4、表冠的设计和当年 iPod 的轮盘操作一脉相承，同时充满对传统手表的敬意。旋转表冠可以灵活而准确的缩放、定位、滚动，并且不会遮挡视线。屏幕已经那么小了，全盘采用 iPhone 那样的操控模式显然是不合理的，表冠可以对多点触控操作进行有效补充，点按表冠还可以当做 Home 键使用。&lt;/p&gt;&lt;p&gt;5、运动与健康是人们当下生活的重中之重，在这一点上，Apple Watch 好于目前所有的智能手表。Apple Watch 在背面内置了四个环形传感器，通过检测脉搏来监测佩戴者的心率。心率是运动健身中非常重要的指标之一，控制好心率可以有效的消耗卡路里和防止运动伤害，脉搏传感器终于可以让我们抛弃心率带的束缚，一路奔跑。&lt;/p&gt;&lt;p&gt;加速感应器和计步器等其他传感器可以全天候监控你身体各种类型的活动，借助你 iPhone 上的 GPS 和无线网络功能，它还能记录你走了多远。&lt;/p&gt;&lt;img src="https://pic4.zhimg.com/0fc36a03cab96f44285b3b8d5c346a2f_b.jpg" data-rawwidth="772" data-rawheight="808" class="origin_image zh-lightbox-thumb" width="772" data-original="https://pic4.zhimg.com/0fc36a03cab96f44285b3b8d5c346a2f_r.jpg"&gt;&lt;p&gt;如图：「运动」圆环显示你消耗了多少卡路里；「锻炼」圆环显示你做了多长时间的运动；而「站立」圆环则显示你起身坐下的频率。我们的目标就是：少坐多站多运动，最终让每个圆环每天都圆满。&lt;/p&gt;&lt;p&gt;6、全新的交互方式和创意的时间显示界面设计给人带来与众不同的感受。我们甚至可以给好友发涂鸦信息，也可以把心跳信息发给对方，对方收到信息后，会感受的相应的震动。如果双方是热恋中的情侣，绝逼比眉来眼去还有用。&lt;/p&gt;&lt;p&gt;7、佩戴 Apple Watch 的人们，可以通过手表快速、简洁的处理个人信息流，包括日程、地图、短信、音乐、交互、支付等等。只有信息处理复杂到了手表不能处理的时候，人们才会掏出手机去表达和处理更复杂的需求。从这个角度而言，Apple Watch 正在充当智能手机的「Facade」，这让我想起了设计模式中的门面模式，手表以最直接最方便的方式，为处于信息漩涡中的人们，充当了第一道闸门。&lt;/p&gt;&lt;p&gt;以后吃饭或聚会时不会再出现「我在看你，你在看手机」这样尴尬的场景了，因为大家都在看表……&lt;/p&gt;&lt;p&gt;Apple Watch 提供两种尺寸，三个版本，支持适配iPhone 5 以上的手机设备，同样支持 Apple Pay。最低售价为 349 美元，预计 2015 年初上市。&lt;/p&gt;&lt;p&gt;这就是苹果为传统手表佩戴者私人定制的 Apple Watch，能否再次改变人们传统的生活方式，2015，我们拭目以待。&lt;/p&gt;&lt;p&gt;未来可期，传统可依，这次发布会的格局大致如此。如果你是一个消费者，尽可能去享受科技带来的美好时光，并有所期待；如果你是一个开发者，太棒了，这是一个属于你的时代，忙着去改变世界吧……&lt;/p&gt;</description><pubDate>2014-09-12T12:21:28+08:00</pubDate></item><item><title>我为什么不希望苹果公司倒掉？</title><link>http://zhuanlan.zhihu.com/p/19836885</link><description>&lt;blockquote&gt;&lt;p&gt;这篇文章用了几天的碎片时间写成，试图从另一个角度探寻一下设计的本质，不过很多读者在后台发来信息要求我谈谈老罗和自如的那点破事，不愿扫大家的兴，又不能破坏文章的完整性，所以会在文章的最后简单说两句。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;截止到今天，苹果公司的股价报收于102.13美元，市值突破了6000亿美元，达到6115亿。时隔两年，苹果再次成为全球市值最高的公司，比全球市值第二大的埃克森美孚公司高出了30%。&lt;/p&gt;&lt;p&gt;在后乔布斯时代，苹果的股价曾经一度跌去三分之一，很多互联网分析师和金融专家开始唱衰苹果，市场上一片悲鸣之声。甚至有人认为苹果已成往事，就像微软一样，6000亿永不重来。适时很多朋友问我的看法，我说，第一，咱自己的公司还处于有上顿没下顿的年代，就不用太操心现金堆积如山的苹果的未来了。第二，如果操心，那也是因为咱是苹果产品的用户，就我个人对苹果公司的了解，以苹果在技术和产品设计上的经年积累，以及庞大而稳定的产品生态圈和用户群，在未来的五到十年内，苹果会一直处于科技领域的风口浪尖，顶尖尖的公司里，苹果该有一席之地。咱就别咸吃萝卜淡操心了，还是回去把今天测出来的 bug 改了吧，对了，别引入新的 bug。&lt;/p&gt;&lt;p&gt;很多人知道苹果公司可能由于2001年 iPod，更多人知道苹果公司可能是由于2007年的 iPhone，但是，苹果并不是一家新锐的科技公司。从1976年 Apple I 诞生，到「超级碗」上的1984 和 Mac，到1997年 Think Different，到2007年的 iPhone 问世，再到今天，苹果公司已经形成了独特的理念和气质，无论是早期的海盗精神，还是「只有疯狂到自以为能够改变世界的人才能真正的改变世界」，都诠释了苹果公司的产品设计理念，他们通过一套良好的思维体系和工业制度，把自己喜欢的东西精确的设计和制造出来，并送到用户手上。优秀的用户体验会让用户与产品建立情感上的连接，并确保用户会需要这个东西。&lt;/p&gt;&lt;p&gt;情感的注入是保证产品具备长久生命力的关键因素。&lt;/p&gt;&lt;p&gt;iPhone 可以说是现在这个时代的标志性产品，它将设计和商业完美的结合了起来。好了，现在拿出你的 iPhone，想象一下，我们先把 iTunes 去掉，这样我们就失去了音乐、播客、各种各样的 iTunes U 教程。然后再去掉 iBooks，我们失去了一部分的阅读体验。 再去掉iTunes App Store、Mac 和 Mac App Store，我们失去了开发第三方 App 的能力和所有的第三方 App。再去掉 iCloud，我们失去了云端的数据。再拿掉苹果的零售店，我们失去了真机体验和良好的购物环境。再去掉广告、包装和手机上的苹果 Logo……，当所有的这些都不存在的时候，你确信自己手里还是一部 iPhone 么？&lt;/p&gt;&lt;p&gt;当这样的手机厂商衰落的时候，比如诺记、比如摩托，大部分用户只是一声叹息，转身就去买下一部手机了，留给厂商一个绝望的背影。&lt;/p&gt;&lt;p&gt;苹果不是这样的厂商，iPhone 也不是这样一个冰冷而精巧的物件，它是通往缤纷体验的入口。苹果围绕着 iPhone，iPad，Mac 这些冷冰冰的硬件，打造了一整套温暖的、注入了情感的生态环境，最终形成了一系列完整的用户体验，这才是软件和硬件设计的灵魂。从更广泛的角度来定义设计的时候，你会发现，只有产品设计者融入了情感，这些情感才会通过用户对产品的每一次使用和触碰中传递开来，最终形成用户与产品公司的连接。这样的连接有多牢固，决定了这个公司在浪潮之巅能跳跃多久。&lt;/p&gt;&lt;p&gt;看到我每天都会使用的 iPhone，iPad 和 Mac，我想，我可能是最不希望苹果公司倒掉的那些人之一吧。如果有用户在意你的公司，关注你的价值，那这样的公司，在股票走势上不会差到哪里去。&lt;/p&gt;&lt;p&gt;实际上很多国内的产品公司已经在构建这样的设计链条了。我从今年开始关注 Android 手机的设计，并使用了三部Android 手机，分别是小米的米3，锤子的 T1和华为的 P7。&lt;/p&gt;&lt;p&gt;江湖传言，有多少人爱小米，就有多少人恨小米，现在看来，这句话同样适合锤子科技。但这两家公司确实在产品设计中注入了设计者的情感，并试图建立这样的生态环境。小米一直在打造自己的粗粮帝国，从MIUI、手机、平板、手环到社区、营销方式，都提供了非常一致的体验。锤子虽然是后起之秀，产品线极为单一，但是锤子从一开始就把「情怀」和体验放在第一位的，他们的网站、Smartisan OS、T1手机无不传递了这样一种信息。&lt;/p&gt;&lt;p&gt;华为的 P7，似乎走的是传统大厂的路子。P7本身的工艺设计可谓精良，轻薄、适手，Emotion UI 也非常漂亮易用，但是你在某些细节上能感觉出设计的不一致性。比如整体的 UI 都是非常现代、扁平、缤纷、华丽，但是偶尔会蹦出一个厚重的笨笨的界面，打破体验的平衡感，让人有种「你特么是在逗我」的赶脚。其实从包装上也可以明显的感觉出来，iPhone 的包装让人感到简约，米3 让人感到质朴，T1 让人感到喜悦，P7就只能让人感到简陋，无论是外包装和内部配件，都很难说这是一个旗舰产品的包装盒。这种设计让人一入手的感受就是：这仅仅就是一部手机而已，无他。&lt;/p&gt;&lt;p&gt;做为一个有技术底蕴的华为帝国，不会没有意识到这一点，去年华为荣耀已经作为独立品牌经营了，相信华为在未来的设计中，会更加注重技术、设计和一致性体验的整合。&lt;/p&gt;&lt;p&gt;真正的好设计对于用户来说应该是透明的，它确实有用，你无法离开，就像空气一样。只有空气变糟的时候，你才会觉察出来。&lt;/p&gt;&lt;p&gt;再举个例子，近些年我一直在做开发工具和应用平台相关的工作，我们的用户是全天下最难伺候的程序员，给程序员开发工具可不是闹着玩的。自古文人相轻，老婆永远是别人的好，文章一定是自己的好。程序员同样如此。如果你胆敢给程序员做了一个不好用的功能，他们会暴力不合作或非暴力不合作，动之以情晓之以理威逼利诱请吃冰激凌告诉美眉微信号都不能动摇他们的铁石心肠。他们完全不顾自己刚才被产品经理虐的体无完肤的残酷事实，转身就拿出永不妥协的精神和你死磕到底。&lt;/p&gt;&lt;p&gt;对于这样一群可爱的程序员，他们的情感诉求是什么呢？后来我琢磨出来了，除了1024，大致有三点：&lt;/p&gt;&lt;p&gt;1、程序员要写代码&lt;br&gt;2、使用你提供的工具时能获得能力上的提升&lt;br&gt;3、写有价值的代码以获得精神上的愉悦&lt;/p&gt;&lt;p&gt;如果你提供的开发工具和平台能够满足这些需求，程序员会乖的像猫咪一样一口气写八个小时的程序。这也是一种设计链条。&lt;/p&gt;&lt;p&gt;前几天看了一篇文章「张小龙：走出孤独」，其中的一段话很喜欢，送给大家：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;一名多次见过张小龙的记者评论说，他更愿意活在自己能掌控的世界中，而对于无力去掌控的东西没兴趣。现在他可以掌控的东西越多，也就变得愈发的强大和自信。他穿着短裤在办公室里走来走去，确保团队开发出的每一行代码和每一个产品细节都灌注了他的情感。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;写到这里身边的电话响了，接通后电话那一端传来女儿美妙的声音：爸爸，妈妈喊你回家吃饭呢。&lt;/p&gt;&lt;p&gt;好，吃饭！&lt;/p&gt;&lt;p&gt;关于老罗和王自如的优酷之战，我直接说自己的看法吧：&lt;/p&gt;&lt;p&gt;1、王自如针对 T1 的评测视频显然是有倾向性的，比如「就假设它是质量合格的」「背负傻大笨粗的骂名」「拆穿」「不是说这个 ROM 根本不能用」「其实没犯什么致命错误」等等，这些语言不应该出现标榜中立的测评机构。&lt;/p&gt;&lt;p&gt;2、不打无准备之仗。显然两个人都做过精心准备，并且都带了道具。但是老罗所有的准备都用上了，自如所有的准备都没用上，以至于我们不知道他准备了什么。&lt;/p&gt;&lt;p&gt;3、如果我有老罗的气场和自信，不会表现的那么凌厉，打断别人和人格侮辱的语言，不提倡。稍微温和一点，得分更高。&lt;/p&gt;&lt;p&gt;4、如果我是自如，根本不会给老罗现场对质的机会，大家写文章对质嘛。&lt;/p&gt;&lt;p&gt;5、关于第三方和投资的问题，同意我的好兄弟道哥（安全宝吴翰清）的看法。&lt;/p&gt;&lt;p&gt;6、「T1是东半球最好用的手机」，这是老罗的突破点。情急之下，自如只是轻描淡写的点了一下，老罗连痒痒都没挠。&lt;/p&gt;&lt;p&gt;7、敌人就是敌人，不用心慈手软，双方都是。&lt;/p&gt;&lt;p&gt;8、T1我用了一个多月了，是一部好手机，如果能够解决续航和发热量的问题就更好了。注：我是个普通用户，不是发烧友。&lt;/p&gt;&lt;p&gt;9、老罗踩到狗屎，能让狗屎后悔。&lt;/p&gt;&lt;p&gt;10、iPhone 是这个星球上最好的手机。&lt;/p&gt;&lt;p&gt;文章来自微信平台「MacTalk By 池建强」，未经许可，请勿转载&lt;/p&gt;</description><pubDate>2014-08-28T21:57:26+08:00</pubDate></item><item><title>你行你上</title><link>http://zhuanlan.zhihu.com/p/19830221</link><description>&lt;p&gt;从 Smartisan T1 开始，我陆续在 MacTalk 里写了一些产品设计和用户体验相关的文章，字里行间透出了些许产品经理的沧桑魅力，于是很多人在我走来走去写来写去的时候说，咦，这个老家伙的背影像条产品狗哦。&lt;/p&gt;&lt;p&gt;有位读者就回复我说：哈哈，很期望你设计一款流逼的产品出来！翻译过来就是，你凭什么对这些产品指指点点呢？你行你上啊！&lt;/p&gt;&lt;p&gt;不止于此。&lt;/p&gt;&lt;p&gt;前阵子有位知友在知乎提问并邀请我回答：池建强写过哪些厉害的程序？翻译过来就是，你写过什么知名的程序呢？你凭什么写人生元编程呢？由于现在非常流行挑战和澄清什么的，我忙不迭的上去表白了一番，居然获得了一百多个赞，也算怪事。&lt;/p&gt;&lt;p&gt;其实无论是否做出过优秀的产品，编写过厉害的程序，如果你对某个物件有自己的看法，只要有理有据，大胆表述不后悔，广大人民群众有不同意见或指出你的错误，是好事，大家可以一起提高。比如上一篇文章里有位读者就对衬线体和非衬线体的描述提出了自己的看法，害得我又专门买了本「字体设计数问」来学习，挺好。&lt;/p&gt;&lt;p&gt;但「你行你上」，就有点让人郁闷了，你怎么知道人家没上过呢？没从政难道就不能讨论民生了么？没养过猪不也看见过猪跑么，保持独立思考的能力非常重要，但是「你行你上」的讨论方式，不提倡！&lt;/p&gt;&lt;p&gt;落实到我个人，看到这两个问题，是万分惭愧的，无论「厉害的程序」还是「流逼的产品」，从哪个层面定义，我的回答都是否定的：没写过什么厉害的程序，也没做出过知名的产品。&lt;/p&gt;&lt;p&gt;工作了十几年，也写了很多行代码，但是「厉害的程序」却是没有。&lt;/p&gt;&lt;p&gt;上大学时高考志愿报错去了三流院校，毕业后直接分配到车间擦了几个月的散热器，然后开始学习 HTML 和 Javascript 投身互联网的大熔炉，结果被融掉了。然后在洪恩学习了 C、Perl 和 Java，做了洪恩在线和数字校园等项目，但是那些底层技术架构都是我当时的老板设计的，我还是技术小球，只能贪婪的吸取养分。&lt;/p&gt;&lt;p&gt;在洪恩时我已经开始带团队了，团队里有北大的硕士和清华的博士，他们的技术都远超于我，但是我也能把团队工作协调的很好，这也体现了当时洪恩非常开放的环境。不过这一点也只是说明了，团队里的人写过牛逼的程序，比如他们后来写出了完美时空的游戏引擎……&lt;/p&gt;&lt;p&gt;后来去了 Rocket Software 开始学习分布式开发，用了 Python 和 Java，维护老外的一套类似 Corba 的分布式开发平台。我虽然读了他们大部分的源代码，但工作只是新模块扩展和老模块维护，提交 bug 和修复 bug，那时的工作有点类似伞哥离开网易后的工作内容，不过伞哥用的是 Lisp，我用的是 Python。当然，伞哥的个人生活和工作经历波澜壮阔，充满彪悍之风和各种各样的想象力，我是万万比不了的。&lt;/p&gt;&lt;p&gt;一切都不在点上，直到我开始全盘负责并从零打造一个商业产品，也就是 GAP 平台（国际化应用软件开发平台），以前积累的知识和技能都开始像礁石一样浮现水面，我几乎在这个平台上实现了自己的大部分技术想法，并编写了大量的前期代码。目前这个平台产品的版本是4.1，已经服务于上千家企业。&lt;/p&gt;&lt;p&gt;那么多企业中跑着我曾经编写的代码，这一点是唯一让人感到自豪的东西。&lt;/p&gt;&lt;p&gt;但是，由于这个平台是个商业产品，目前还不能开源，而且不具备什么互联网思维，也没有放到云上，所以，我依然没有踩到点上，也没什么厉害的程序给大家展示。&lt;/p&gt;&lt;p&gt;有兴趣的话：&lt;/p&gt;&lt;p&gt;关于这个产品的介绍，可以看：&lt;a href="https://link.zhihu.com/?target=http%3A//www.itari.com.cn/itari/articles/gap" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;GAP平台&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;关于这个平台组合的项目 Demo，可以看：&lt;a href="https://link.zhihu.com/?target=http%3A//www.itari.com.cn/itari/articles/gap" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;GAP平台&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;关于这个产品的使用手册，可以看：&lt;a href="https://link.zhihu.com/?target=http%3A//www.itari.com.cn/gapdoc/html/index.html" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;企业级应用开发平台——GAP&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;另一个比较有意思的事是我从 2012 年末开始持续的写作，这件事我觉得有可能做得会比编程好一些，不过到目前为止，同样乏善可陈，经年以后，图书销量也不过万数，革命未成功，咱们还在努力，见谅。&lt;/p&gt;&lt;p&gt;无论如何，我的很多选择都没有找到风口，不管是不是猪，反正是没飞起来，所以现在依然老老实实坚持编程和写作。&lt;/p&gt;&lt;br&gt;&lt;p&gt;本文来自微信公众平台「MacTalk By 池建强」，未经许可，禁止转载。&lt;/p&gt;</description><pubDate>2014-08-20T22:29:36+08:00</pubDate></item><item><title>云端的信息协作</title><link>http://zhuanlan.zhihu.com/p/19828521</link><description>&lt;p&gt;人和动物根本的区别之一就是，人类把讯息传递这事弄的越来越高级了。&lt;/p&gt;&lt;p&gt;信息论之父克劳德·香农说过，通信的基本问题是，在某一点精确地或近似地复现在另一点所获取的信息。这些讯息往往都带有意义。这句话传递的信息有两个，首先信息必须要进行传递，其次信息应该是有意义的，没意义的信息会导致通信过程也失去含义。&lt;/p&gt;&lt;p&gt;早期的非洲人用「会说话的鼓」来进行信息传递。不过酷爱音乐的非洲兄弟从来不会好好说话，他们用鼓点表达「回家」的时候会敲出「让你的脚沿着去时的路返回」这样的节奏。想表达「别害怕」时，他们会敲打出「你的心提到了嗓子眼，请把它放回原处」。现在想想这种讲话方式还是挺崩溃的，如果在丛林中被虎狼追咬，敌人打杀，估计鼓语还没敲完，人已经分分钟挂了。当然，现代人也没好到哪去，现在平庸的影视编剧创造出了更为矫情的语言，比如：&lt;/p&gt;&lt;p&gt;「这新置的床柔软舒适，弹性十足，小憩片刻原是再好不过。虽说日上三杆，若得温柔梦乡，倒也不负了这悠长假期。」&lt;br&gt;「说人话！」&lt;br&gt;「好困，让我再睡会…..」&lt;/p&gt;&lt;p&gt;这些都属于信息传递的再加工。后来人们开始用灯塔、火把、狼烟实现信息的传递，再后来用电报、电话，然后，世界就进入了比特信息时代。人类作为个体以各种方式创造和传递信息，传统出版、论坛、博客、微博、微信、各种专栏等等，每一个人都把信息持久化成文字和音像，并向世界传递着自己的声音。&lt;/p&gt;&lt;p&gt;到目前为止，个人信息的记录和传递已经做的足够好了，私人笔记可以记在 Evernote、DayOne、有道云笔记，公开信息可以发到微博、博客、微信平台、朋友圈和个人网站，但是，如何有效实现工作团队的信息传递、资料共享、版本记录等协作行为，一直没有很好的解决方案。最近应网易有道云笔记团队的邀请，参与了「有道云笔记·协作」的内测，颇多感受，在此与君分享。&lt;/p&gt;&lt;p&gt;由于我很早就开始用 Evernote 作为自己的私人笔记软件，所以不是有道云笔记的重度用户。不过有道云笔记的协作版并不是原有软件的延展，而是一个全新的软件解决方案。与业内现有的团队协作产品偏重于企业社交或是任务分配功能不同，有道云笔记·协作是一款以工作资料为中心的团队管理、编辑和沟通的产品。它为你和你的团队提供线上的资料库，图片、文档、程序、文件夹等各种类型的办公资料都可团队共享和协同编辑，并支持多终端使用。&lt;/p&gt;&lt;p&gt;可以这么说，有道云笔记的协作版是一款云端的信息协作软件平台，以工作资料为核心，面向项目的一线执行者设计，团队成员通过组成群组，实现工作资料的共享、编辑和沟通等。群主可以通过分享邀请链接、群号、输入成员有道云笔记账号或是昵称，邀请团队成员加入群组。&lt;/p&gt;&lt;p&gt;由于我有网易通行证，用邀请码直接登录 &lt;a href="https://link.zhihu.com/?target=http%3A//note.youdao.com/group/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;有道云笔记协作群&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; 即可。登录以后的界面大致是这样的：&lt;/p&gt;&lt;img src="https://pic1.zhimg.com/8025e14d7ac448dacc548271ae13c650_b.jpg" data-rawwidth="2400" data-rawheight="1600" class="origin_image zh-lightbox-thumb" width="2400" data-original="https://pic1.zhimg.com/8025e14d7ac448dacc548271ae13c650_r.jpg"&gt;&lt;p&gt;初次使用有道云笔记·协作的 Web 版时，我吓了一跳，整个软件的所有字体都使用了宋体，也就是衬线字体，包括标题和内容。&lt;/p&gt;&lt;p&gt;衬线字体在每个笔画的开始和结束的地方都会有修饰，强调笔画的粗细和错落有致。宋体是一种标准的衬线字体，字形结构和手写的楷书一致，衬线特征非常明显，由于传统纸媒可以非常细腻的展现出衬线字体的特征，让人们易于阅读，所以直到今天，大部分书刊杂志的正文，都采用了衬线字体。不过在互联网时代，无衬线体则更为广泛的被人接受，因为显得「干净、轻松和休闲」，体现了互联网时代的阅读特征，而且用屏幕去展示衬线体，永远达不到纸媒的效果，所以，几乎所有的大站和互联网服务都是用各种类型的无衬线字体。在电子书领域，也大致如此，就我所知，只有多看的部分电子书采用了衬线体。&lt;/p&gt;&lt;p&gt;有道云笔记·协作的所有字体都采用宋体给人一种非常「Word」的感觉，更像传统软件而非互联网服务。于是，我把自己的建议和对 UI 的体验提交给了有道团队，很快，现在 UI 的字体就成了这个样子。&lt;/p&gt;&lt;p&gt;在协作页面中，从左到右依次是群列表、资料库和讨论区。群列表显示用户加入的所有群组名称，在这一栏中，用户还可以选择新建群和加入群。加入群需要知道群号，新建群以后可以通过邀请链接和搜索已有用户的方式添加成员，非常方便。&lt;/p&gt;&lt;p&gt;中间一栏为资料库，支持所有格式的文件上传，包括 Office 等常用文件格式。团队成员可上传文件夹及各种格式的工作资料，并协同编辑。协作过程中团队成员可以针对每个文件进行讨论，可以对文档进行预览、编辑和版本对比，团队成员编辑的每篇笔记都支持多版本对照功能。文档发生的所有的变动一目了然。当然，你也可以直接创建有道笔记格式的文档，文档的后缀为 note。&lt;/p&gt;&lt;img src="https://pic4.zhimg.com/df194bc5a86b4b9f822e1fb373164e3f_b.jpg" data-rawwidth="2396" data-rawheight="1596" class="origin_image zh-lightbox-thumb" width="2396" data-original="https://pic4.zhimg.com/df194bc5a86b4b9f822e1fb373164e3f_r.jpg"&gt;&lt;p&gt;如上图所示，团队成员可针对一份会议记录进行协作修改，每修改一次，系统将自动生成新版本。并可显示不同版本间的区别。绿色标出的表示与前一版比较新增的内容，红色表示与前一版比较删除的内容。非常方便。&lt;/p&gt;&lt;p&gt;最右侧一栏为讨论区。用户通过文字、图片等信息针对群内文档和相关工作进行讨论。同时资料库中的任何更新，在讨论区中都有通知，团队成员可轻松了解最新进展。最新的 Android 版本增加了语音讨论的功能，但是还达不到微信的流畅程度。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;基于以上描述，我们可以看到，有道云笔记协作版把组织、文档和信息交互非常清晰的整合到一起，从组织结构（群），到文档管理和基于单一文档的讨论，再到群内讨论，信息的传递非常流畅。在文档的管理上也做的非常细致，几乎做到了代码级别的版本管理和信息比对，这一点对需要随时交互和迭代的小团队非常重要。&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;当然，由于是内测版，现有版本的功能稳定性和完成度还有待加强。另外，用了几个星期，我也有些产品相关的看法，或者叫建议吧，在这儿说一说，主要是针对 Web 版的。&lt;/p&gt;&lt;p&gt;1、虽然 UI 采用了无衬线字体，但整体的结构还是不够「Modern Design」，偏传统软件。滑动、隐藏和跟随等操作可以更多的引入进来。比如当用户在编辑文档时，群列表和讨论区是否可以隐藏起来，让用户专注于文档的编写和修订？加入群和新建群等操作完全可以实现 DIV 跟随显示，而不是显示在屏幕中央，让用户把鼠标挪过去操作。&lt;/p&gt;&lt;p&gt;2、建议文档编辑器提供「写作模式」，目前很多在线编辑器都可以实现类似功能。什么是写作模式？就是编辑文章的时候整个屏幕除了编辑器工具栏之外什么都没有！一望无际，让写作者专心创作。知乎的写作模式如下，可以参考：&lt;/p&gt;&lt;img src="https://pic2.zhimg.com/82e110777fe921be7fc31c61517cbdbd_b.jpg" data-rawwidth="1880" data-rawheight="1608" class="origin_image zh-lightbox-thumb" width="1880" data-original="https://pic2.zhimg.com/82e110777fe921be7fc31c61517cbdbd_r.jpg"&gt;&lt;p&gt;3、对 Office Word 的文档进行预览操作是对某些格式和图表的处理并不完善。&lt;/p&gt;&lt;p&gt;4、目前讨论区只有群组交流，你说点家长里短全世界都知道了，但是团队协作时点对点的交流必不可少，建议纳入研发计划。&lt;/p&gt;&lt;p&gt;5、缺乏全局搜索功能，说过的话，写过的文，都应该可以通过全文检索查询出来。&lt;/p&gt;&lt;p&gt;6、现有的协作是以群组和文档为核心的，是否可以增加频道和频道订阅的概念，以讨论内容为时间线，形成头脑风暴，对频道感兴趣的人可以通过订阅的方式自由加入和退出。这个轻量级的功能会非常适合小团队及时讨论和创意发挥。&lt;/p&gt;&lt;p&gt;7、所有的文档编辑都需要在线完成，将来是否会提供离线功能？&lt;/p&gt;&lt;p&gt;8、没有8了，再写就成产品经理了。&lt;/p&gt;&lt;p&gt;在使用有道云笔记·协作版的时候，我常常会想到另一款协作软件 Slack，虽然二者定位不同，但整体的架构风格有相似之处，不过 Slack 在 UI/UE 的细节上走的更远一些，建议有道的产品经理深度试用一下。&lt;/p&gt;&lt;p&gt;在多终端覆盖方面，有道云笔记·协作提供了 Web 版，Android 版，Mac 版和 Windows 版，iOS 版本还在开发中。Android 版是原生程序，功能基本涵盖了 Web 版，操作更为简洁。Mac 版和 Windows 版基本都是在 Web 的基础上封了一个本地外壳，操作方式和 Web 版本完全一致。考虑到原生程序的效率、稳定性和离线功能，我想未来的 PC 版本应该会有原生程序的协作版吧。&lt;/p&gt;&lt;p&gt;目前有道云笔记·协作版已开始限额内测。用户只要进入有道云笔记·协作官网（ &lt;a href="https://link.zhihu.com/?target=http%3A//co.youdao.com/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;有道云笔记·协作&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; ），提交内测信息，经过筛选后，就可以得到内测邀请码，用户可凭邀请码体验全新的有道云笔记·协作。&lt;/p&gt;&lt;p&gt;今日题图：By Nauman Ashraf&lt;/p&gt;&lt;p&gt;点击原文，申请参与有道云笔记·协作版内测。&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//co.youdao.com/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;有道云笔记·协作&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;也可以在此文章下留下姓名和邮件，我会统一转给有道团队。&lt;/p&gt;</description><pubDate>2014-08-18T21:24:11+08:00</pubDate></item><item><title>我在大学里学到的几件事</title><link>http://zhuanlan.zhihu.com/p/19827473</link><description>&lt;p&gt;我在前些日子的一篇文章「野百合也有春天」里写过这么一段话：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;对于中国现在的环境来说，完成大学本科的基本素质教育是非常必要的。你在大学生活中不仅仅会学到知识，而且能够重塑自己的人生。你可以碰到更多的人，遇见更高的山，见到更长的河。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;文章发出后，有几个「自学成才」的读者不停的在微信后台质问我：我高中后自学计算机编程，工作三年工资成千上万，而我的高中同学还在大学里晃悠，您说我为什么要浪费四年青春年花在可有可无的大学生活上？我说生活并非争一日之长短，大学生活会为你打开很多扇窗。读者继续质问：如果我不需要那么多扇窗呢？我就想早工作早挣大钱。我说那得看你要挣的钱有多大，眼界多宽。读者继续质问：如果我就想一辈子挣死工资呢？我说那也得有人给你一辈子死工资啊……&lt;/p&gt;&lt;p&gt;最后我终于崩溃了，不得不抛出「只有偏执狂才能生存，世界上到处是有才华的穷人」等救命箴言才得以逃脱。读者终于满意了，他们吹着德胜门的口哨心满意足的睡去，我也在淡淡的忧伤中睡着了。&lt;/p&gt;&lt;p&gt;昨天下午，一位身在农村的家长读者给我发来语音微信：请问一个三流大学的学生，学计算机科学与技术专业该重点读什么书？做那些事？才能对日后走上社会参加工作有用？农村供一个大学生不容易，我们只是希望他毕业后能够自食其力，有一份工作养活自己。&lt;/p&gt;&lt;p&gt;微信一连发了几条，内容大致如此。第一次收到家长为孩子问的问题，我没敢怠慢，很快就回复了：首先把必要的基础课学好，比如数学、数据结构、算法等。然后学习一两种编程语言，深入学习，并做一些实战的项目或软件。除此之外，多读一些人文类的图书，开阔视野，提升心智，避免只是为了工作和金钱学习。现在是计算机改变世界的大时代，只要自己努力，他会比我们想象的走得更远，飞得更高。祝开心。&lt;/p&gt;&lt;p&gt;那位家长对这个回复似乎比较满意，而我，一个三流大学的毕业生，却陷入了深深的思考。我使劲回忆，大学四年，我到底学到了什么呢？&lt;/p&gt;&lt;p&gt;我觉得我可能学到了这些东西。&lt;/p&gt;&lt;h4&gt;找到学习的方法&lt;/h4&gt;&lt;p&gt;大学里会教你很多走出大学校门后再也不会用到的知识，这一点最为人诟病。但是以我的经验，总会有些知识在你日后的生活中发挥作用。关键是你无法判断哪些知识会在什么时间点发挥作用，所以精力足够的话，尽可能涉猎更多的领域，多学一点是一点。&lt;/p&gt;&lt;p&gt;比如你上大学时一心想做一个改变世界的程序员，于是你清晨在煎饼果子的感慨里复习算法，深夜在方便面的唏嘘中编写程序，你在毕业之前已经是某个尖端领域的行家里手，结果毕业没多久你突然决定改行去做律师了……即便如此，你也可能在某次案件的资料搜集中用到某些计算机编程知识。就是这样。&lt;/p&gt;&lt;p&gt;另外，大学更多的时候提供的是环境、资源和似乎无穷无尽的时间，你要通过不断的试错找到适合自己的学习方法，授之于鱼不如授之于渔。如果你在毕业的时候具备了快速学习新知识的技能，那么后续的道路上无论有多少艰难和坎坷，都不能阻止你迎接鲜花和掌声。&lt;/p&gt;&lt;p&gt;时间很重要，对于大部分人来说，大学几年是唯一一段可以肆意妄为的时期。你可以自由的支配自己的思想和行为，你可以不用舍弃什么或拥有什么，时光流淌，也在为你歌唱。走出校门之后，可能再也没有这么大块的时间让你用来学习和思考了，要珍惜。&lt;/p&gt;&lt;h4&gt;学会忍耐&lt;/h4&gt;&lt;p&gt;大学之前我从来没有和家人以外的人长相厮守过，入学之后你就要和六个素不相识的人挤在一间十平方米的屋子里过生活，你不得不学会与别人和平共处的能力，忍受别人的磨牙、梦话、各种气味和各种习惯。半夜惊醒看到对面床上的兄弟在盘腿打坐，不要尖叫，翻个身继续睡觉。那时候的大学里宿舍夏天没有空调，天气热到铁质的床栏开始发烫时，要能睡着，睡不着去水房接水把身体冲到冰凉，继续睡着。要学会不早睡也能不迟到，学会在没有任何准备的情况下发言，学会别人抄自己作业的时候微微一笑，学会收敛自己，善待他人。&lt;/p&gt;&lt;p&gt;我的大学专业是机械电子工程，凡是电子和计算机相关的课程我都能学的很好，但机械就差强人意。我的每一张机械图纸都是通宵达旦完成的。当晚自习结束，已经完成绘图工作的同学们陆续离开教室的时候，我一边痛恨为什么要画这些一模一样的螺钉螺母、螺纹和轴承，一边去买了方便面和水，用一晚上的时间去对付那些主视图、俯视图、左视图和断面图，各种粗实线、细实线、波浪线、双折线常常搞的我焦头烂额，我经常拿着改了好几版的图纸告诉老师，这是我能画出的最好作品了。老师摇摇头说，你画的还不够多。当时我的心都碎了。&lt;/p&gt;&lt;p&gt;在这个阶段，我学会了忍耐孤独和面对绝望。&lt;/p&gt;&lt;h4&gt;天外有天&lt;/h4&gt;&lt;p&gt;在大学里你会遇见更高的山，见到更长的河，你会发现天外有天。无论你在高中的时候有多么优秀，大学里总有比你更优秀的。他们不但比你聪明，而且比你勤奋。当你早晨在睡梦里醒来时，对面的数学课代表已经去教室里上自习了。当你开始过四级的时候，人家已经过六级了。当你考了三次最终以62分的成绩冲破六级封锁线的时候，人家已经开始英语演讲了。你的围棋被杀到复盘，乒乓球打到崩盘，你在所有的优势项目里一败涂地。&lt;/p&gt;&lt;p&gt;这时候，承认天外有天，并认识到人生是长跑，曙光在前方！&lt;/p&gt;&lt;h4&gt;善待离别&lt;/h4&gt;&lt;p&gt;人生自古伤离别，大学生活也是一样。尤其是毕业季，很多人哭的声嘶力竭，抱着桌子腿不肯走，或者抱着人腿不让走，仿佛一放手就是错。其实不必如此，大学生活只是人生的一段经历，一群人由于各不相同的目的走到了一起，相互扶持，带来欢乐和悲伤，走过了这一段之后，相忘于江湖就好。人的一生中能够不断与你发生交集的人就是有限的那几个，照顾好他们，然后不断向前。&lt;/p&gt;&lt;p&gt;我很早就认识到了这一点，所以毕业的时候不仅没有流泪，反而是高高兴兴的去上班了，因为又有了新的起点。当然，由于我那时比较幼稚，不懂得用若有所思和频频点头来掩饰自己的心情，被部分同学斥为白眼狼和冷血动物，每每想起常扼腕叹息，你们要注意这一点。&lt;/p&gt;&lt;h4&gt;热爱运动&lt;/h4&gt;&lt;p&gt;每一所大学都提供了丰富的体育项目供你选择，不要总是沉浸在宿舍、自习室和小树林里，认识到运动对你未来生活的重要性，选择自己喜欢的一项或几项并全身心投入其中。大学时我疯狂的喜欢踢足球，常常在烈日当空的球场上来回奔跑，踢得灰头土脸眼镜飞满天，但是身心愉悦。我喜欢的另两项运动是羽毛球和游泳，它们一直陪伴我到现在。&lt;/p&gt;&lt;p&gt;要知道，无论大学里的肚子如何平坦腹肌如何分块，不热爱运动的话，它们迟早会隆起并合体。&lt;/p&gt;&lt;h4&gt;大量阅读&lt;/h4&gt;&lt;p&gt;老妈说我是个爱读书的孩子，因为我在初中和高中的时候已经把金庸和古龙的小说都读完了。后果就是大学时大家都在恶补这两门「专业课」时，我开始在图书馆阅读大量感兴趣的专业书籍、小说、史料、哲学和各种杂文。相对于专业书籍，人文类的书给我给更大的帮助，它们让我站在历史的长河中看起落，在人类的文明中听潮汐，我开始思考我是谁、从哪里来、到哪里去这样的终极问题，虽然到现在也没想清楚，但是我知道了比学习某个技能更重要的事情，就是认知世界。人类所能想象到的所有美好和黑暗，都能从书里找到。&lt;/p&gt;&lt;p&gt;智者说：A reader lives a thousand lives before he dies. The man who never reads lives only one. 你想活一千次，还是只活一次，自己选吧。&lt;/p&gt;&lt;h4&gt;好好谈一场恋爱&lt;/h4&gt;&lt;p&gt;大学里的时间肆意流淌，你会产生一种「年华不老，青春永驻」的感觉，你会觉得校门之外会有无数俊男或美女在等着你，但残酷的现实会告诉你，这些都是错觉。大学里的女生才是最美好的，能够认识到这一点的男生，就去好好谈一场恋爱吧，请珍惜你的心动女生。&lt;/p&gt;&lt;p&gt;反正我们家大领导是我在大学的时候就挑好的，你们自己看着办。&lt;/p&gt;&lt;h4&gt;追求卓越，不要追求完美&lt;/h4&gt;&lt;p&gt;刚上大学的时候常常想拥有完美，完美的比赛、完美的活动、完美的作业、完美的考试、完美的女友，后来发现，完美的东西都不长久，追求完美会让自己和他人都陷入尴尬的境地。事实上我们基本上不可能把所有的部分都做得十分完美，最好的办法就是容忍或去掉那些不完美的部分，争取这一次把事情做对，下一次再把事情做好，下下次让事情变得卓越……&lt;/p&gt;&lt;p&gt;追求卓越，让事情变得更好，而不是追求完美。&lt;/p&gt;&lt;p&gt;毫无疑问，大多数时候，生活才是最好的老师，这位老师平时沈默寡言，只是在旁边看着你奔跑、跌倒、前行、转圈，偶尔在你懈怠或迷茫的时候站出来说一句，醒醒，该上路了，或者让你去学点什么。这时候你就该起身奔跑或去学点什么，而不是继续呼呼大睡。生活的召唤，永远是我们前进中最好的原动力。&lt;/p&gt;&lt;p&gt;大学生活也是一种生活，只不过是一种值得让你回味一生的特殊生活，如果你还在上大学，好好珍惜她。已经毕业的同学也不用伤感，你们还有 MacTalk！&lt;/p&gt;&lt;p&gt;文章来自微信公众号「MacTalk By 池建强」，未经许可禁止转载。&lt;/p&gt;</description><pubDate>2014-08-17T20:44:56+08:00</pubDate></item><item><title>北京之北</title><link>http://zhuanlan.zhihu.com/p/19816804</link><description>&lt;p&gt;今天的文章写给在北京北部奋斗的兄弟姐妹们。&lt;/p&gt;&lt;p&gt;第一次认识到北京的辽阔是在1996年，那年的夏天很热，一如今夏。暑假里我从老家来到北京找假期留校（北科大）的表弟玩耍。一出西站，浑身就被热浪席卷，感觉非常不适。北京的海拔比老家低500米左右，在家乡习惯了天高气爽，坡上牛羊，来了北京处处不适应。做为一个汗人，从西站长途跋涉到军事博物馆地铁口，已经汗透重衣，上了地铁，晃悠了近一个小时终于到了西直门，找了一辆公交车，继续向北。&lt;/p&gt;&lt;p&gt;那时的北京还时不时刮一场沙尘暴；那时的雾是一种美好的东西，起雾的时候大家会深呼吸，唱北京有最清新氧气；那时的三环刚刚全线通车两年，四环还躺在规划局的图纸上。我和公交车师傅一起，一路向北，穿过三环，穿过虚拟的四环，走在坑坑洼洼的柏油马路上，由于年久失修，马路被磨损得不成样子，马路两旁是稀稀拉拉的杨树，越走越是荒凉。看着公交车上的人越来越少，我问司机：师傅，这还是北京吗？师傅说，北京大着呢！又走了一段还没到，我又问：师傅，这还是北京？师傅说，悟空，你也太心急了，刚走了一半呢。于是我不敢再问了，虽然丫不会念紧箍咒，万一不开心把车开到荒郊野外也不好啊。其实我的担心是多余的，那时已经在荒郊野外了。&lt;/p&gt;&lt;p&gt;终于看到了北科大的校门，瘦小的表弟正在门口等着接我。我说你们学校怎么在荒郊野外啊，校门也这么破。他说，还行吧。第二天表弟找了两辆破自行车，扔给我一辆，说，走，咱们去找林研所的表哥玩（我们还有个博士表哥在林业研究所）。于是我们上了车，再次向北向西。我说，要骑多久？表弟说，怎么也得一个小时吧……我听了差点从车上掉下来，骑那么长时间真的不会骑到铁岭吗？真的不会，我们穿过了虚拟的万泉河快速路和五环，到了香山脚下，也到了林研所。&lt;/p&gt;&lt;p&gt;从此，我知道了北京是个「大」城市，我也开始在北京之北兜兜转转……&lt;/p&gt;&lt;p&gt;最初我在北京工作和生活是以五道口为中心的，后来听说这里成了「宇宙的中心」。我当时住在五道口东升乡的三层楼里，对面是破旧的清华东门和一片开阔地，我们常常中午去那里踢足球。左侧是虚拟的清华科技园，那时是一片低矮的厂房。2002年的时候，马路对面的华清嘉园已经建起来了，一平米要五六千，这个价格对我们这些外地屌丝来说是天价，我们纷纷跑到上地买房。后来听说华清嘉园的房子居然涨到10万一平米了。就在那个「10万」的时间点，有人写下了这些文字：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;早晨，我站在36层房子的阳台上，为自己倒了一杯37℃的Water。我轻轻吹干浮在上面的水垢，望向窗外。虽然雾霭满天，但闭上眼，就能感知不远处的最高学府，当年差300分没有考上的大学，如今做了我的邻居。&lt;/p&gt;&lt;p&gt;楼下是忙碌的上班族，他们像蚂蚁一样在地铁和公交车上滚来滚去。我愉悦的聆听，看脚下卑微生命的喘息。&lt;/p&gt;&lt;p&gt;这里是五道口——宇宙的中心。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;我没有过上这样的生活，因为没有买华清嘉园的房子。&lt;/p&gt;&lt;p&gt;后来虽然工作变迁，未立业而成家，但是基本都在北京之北晃悠。北京的经济、科技和环境伴随着房价火箭般的速度一同发展，有的变好了，有的更糟了。互联网大潮席卷全球，中国大好的 IT 儿女，纷纷投身到北京之北，各大科技公司、软件公司、互联网公司纷纷入驻清华科技园、中关村软件园……真是纷纷又纷纷啊，可以说北京之北汇聚了中国最多的 IT 从业人员。&lt;/p&gt;&lt;p&gt;终于，到了2007年，用友集团北京的所有分子公司全部入驻新建的「用友软件园」，软件园的位置在北京最北，永丰基地，也就是出了五环，到了上地，再往西往北十公里，就到了。在那边开车，一不留神就能开到六环外边去。我的公司其时还属于用友集团，所以一同搬迁到了永丰。这个决定让很多人的生活更好了，有些人的生活变糟了，我属于前者。虽然2007年的永丰基本上属于鸟不拉屎猫狗都嫌的地界儿，但是车少树多路好，自然环境极佳，离我家也近，每天车程不到半小时。&lt;/p&gt;&lt;p&gt;2007年到2009年那段时间上下班是最开心的，宽阔的北清路畅通无阻，西山清晰可见，早晨的朝阳和旁晚的落日让人心醉，恍惚间我会产生一种在北美的某个小镇上班的感觉。可惜，现在的永丰已经车水马龙，人声鼎沸，各大公司再次向北进驻永丰，原来静谧平和的日子已经一去不复返了。&lt;/p&gt;&lt;p&gt;用友软件园内的环境非常优美，工作和生活所需一应俱全，有时候我觉得，自己在这个园子里工作了这么久，一部分原因就是喜欢这儿的楼宇和草坪吧。&lt;/p&gt;&lt;img src="https://pic4.zhimg.com/6c6395aa66f6c6066599e5f4e54b99d7_b.jpg" data-rawwidth="538" data-rawheight="718" class="origin_image zh-lightbox-thumb" width="538" data-original="https://pic4.zhimg.com/6c6395aa66f6c6066599e5f4e54b99d7_r.jpg"&gt;&lt;img src="https://pic1.zhimg.com/e3bd74f145bc3d376ed91f651d50ebfc_b.jpg" data-rawwidth="1256" data-rawheight="836" class="origin_image zh-lightbox-thumb" width="1256" data-original="https://pic1.zhimg.com/e3bd74f145bc3d376ed91f651d50ebfc_r.jpg"&gt;&lt;p&gt;这是我常常光顾的体育馆……&lt;img src="https://pic2.zhimg.com/5228cac9057c035d558af4053d4452ed_b.jpg" data-rawwidth="818" data-rawheight="613" class="origin_image zh-lightbox-thumb" width="818" data-original="https://pic2.zhimg.com/5228cac9057c035d558af4053d4452ed_r.jpg"&gt;&lt;/p&gt;&lt;p&gt;这是我在北京工作最北的地方了，未来会怎样，没有人知道，也许我会继续北上，回家乡编程和写作也未可知。无论如何，我要祝福这些在北京之北创造了各种奇迹的中年、青年和少年，希望他们在敲打键盘编写代码的同时，能够买得起房，买得到车，看得起病，读得起书，养得起娃，互联网的世界因为他们而精彩，他们值得拥有更加美好的生活！&lt;/p&gt;&lt;p&gt;文章来自「MacTalk By 池建强」，未经许可，禁止转载.&lt;/p&gt;</description><pubDate>2014-08-04T23:29:14+08:00</pubDate></item><item><title>黑天鹅与大数据</title><link>http://zhuanlan.zhihu.com/p/19812440</link><description>&lt;p&gt;上一篇文章里引用了「黑天鹅事件」这么个高贵冷艳的词汇，惹得众多读者发来讯息，让我讲讲黑天鹅的事。今天给大家简单说一点我对黑天鹅事件和大数据的认识。&lt;/p&gt;&lt;p&gt;如果你像很多爱读书的人一样，比如我，就会知道「黑天鹅」并不是什么新词，这个词源于澳大利亚的黑天鹅。十七世纪的欧洲人认为所有的天鹅都是白色的，因为他们从来没有见过其他颜色的天鹅，当然，我到现在也没见过其他颜色的天鹅。到了十八世纪初，欧洲人远渡重洋来到澳洲，一上岸就惊奇的发现，居然有的天鹅是黑色（shai）儿的！欧洲人吓尿了，因为他们之前那么相信自己的判断，认为世上只有白天鹅，其坚信的程度，和我们小时候赌咒发誓二十一世纪共产主义一定要实现，是一样一样的。残酷的事实让欧洲人的信念土崩瓦解，他们跑回老家奔走相告：妈妈，原来世界上也有黑天鹅啊。史称「黑天鹅事件」。&lt;/p&gt;&lt;p&gt;黑天鹅的出现预示着，世界上永远存在不可预测的重大和罕见事件，意料之外，一旦出现却有可能改变一切。无论你去过多少地方，观察过多少只白天鹅，一只黑天鹅的出现就能让你之前所有的推理和结论全部失效。人类总是过于相信自己的经验，希望自己的判断、决定和计划能如期而至，但是现实总是让我们手足无措。无论是泰坦尼克号的沉没、第二次世界大战、9.11袭击、美国的次贷危机、互联网浪潮等等，都不是人为能够预测出来的，但这些事件的发生，对人类历史发展的进程产生了重大的影响。&lt;/p&gt;&lt;p&gt;甚至普通人日常生活中的选择，也存在很多黑天鹅现象，我以前在微博写过一句话：我有两个朋友，一个坚韧不拔，对公司不抛弃不放弃，十几年过去了，一路从程序员成长为技术副总裁，然后公司因为一个突如其来的财务丑闻倒闭了……另一个朋友总是在选择中跳槽，在跳槽中选择，最后在一家公司工作了两年后，公司上市了，丫还去纳斯达克敲了钟！大家可以感受一下，然后静下心来想一想，你所生活过的这十几年，或几十年，哪些日子是在计划中度过了？&lt;/p&gt;&lt;p&gt;当然，很多人会说我们现在有了大数据相关的技术，我们的信息浩如烟海，如果说过去的数据用筐装就够了，现在得用列车和舰艇运输，我们用千百万台连接到一起的计算机对这些数据进行计算、加工和统计，难道还预测不出一两只黑天鹅来么？在自然界的物种领域，当世的科技和讯息的传播几乎已经不会再犯十七世纪欧洲人的错误了，但是就「黑天鹅事件」来说，依然难以预测。&lt;/p&gt;&lt;p&gt;讲一个猪的故事。有一头不在风口的猪，自打出世以来就在猪圈这样一个世外桃源生活，每天会来一些站立行走的生物，时不时扔一些好吃的进来，小猪觉得日子惬意极了。他高兴了就去泥里打滚，忧伤了就趴在猪圈的护栏上看夕阳西下，春去秋来，岁月不争。经过数百天的大数据分析，小猪觉得日子会一直这样过下去，直到他从小猪长成了肥猪……在春节前的一个下午，一次血腥的杀戮改变了猪的信念：尼玛大数据都是骗人的啊……惨叫嘎然而止。&lt;/p&gt;&lt;p&gt;无论是你的个人收入、图书销量、知名度、Google 搜索量、血压、牙患、股票价格，都有可能是「黑天鹅事件」，它们在过去的几百天之内只发生了微小的变化，并且具备一定的趋势，你以为事情会一直这样发展下去了，就像太阳每天从东边升起，西边坠落一样自然，但是到了1001天，砰的一声，一个过去从未有过的巨大变化发生了！比如，今天「康师傅」就被立案调查了。&lt;/p&gt;&lt;p&gt;泰坦尼克号的船长曾经说过：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;根据我所有的经验，我没有遇到任何值得一提的事故。我的整个海上生涯只见过一次遇险的船只。我从未见过失事船只，从未处于失事的危险中，也从未陷入任何有可能演化为灾难的险境。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;然后他就驾驶着当时全世界最为安全的巨轮泰坦尼克号出海了……&lt;/p&gt;&lt;p&gt;人类不知道的远远比知道的更有意义。历史永远不是线性发展，每一次跳跃前行中都有「黑天鹅」的身影。这就是「黑天鹅事件」要告诉我们的真相。&lt;/p&gt;&lt;p&gt;那么普通人如何面对「黑天鹅现象」呢？如果我说「他强任他强，清风抚山岗；他横由他横，明月照大江」，大家会不会点赞呢？料想是不会的，所以我的看法是：&lt;/p&gt;&lt;p&gt;1、保持独立的人格和思考，持续提升个人能力。在改变历史进程的「黑天鹅事件」中，个人的作用可能微乎其微，但是在生活中就有用了。比如你早晨起了床，刷了牙，吃了早饭，为自己的梨形身材套上合身的西装并扎好领带，高高兴兴去上班，然后发现自己失业了。没关系，哥一身是胆满腹经纶左右手都能编程，分分钟找到下家并薪资翻倍。&lt;/p&gt;&lt;p&gt;2、努力让自己的生活发生正面的「黑天鹅事件」，寻找报酬具有突破性的职业和工作，工作成果不受时间限制，也不是按件记酬。比如我，现在就寄希望成为图书销售百万的技术作家神马的……&lt;/p&gt;&lt;p&gt;3、通过反证接近真相。当所有人都认为某件事的发生是理所当然的，不要急着附和，往其他方向看一看想一想，不是有句老话嘛，我不能证明这件事是正确的，但我可以证明它是错误的。不是不让大家过马路，而是不要闭着眼睛过马路。&lt;/p&gt;&lt;p&gt;等等，说了半天，大数据是干嘛的？就目前数据计算能力，大数据主要应用于经营决策、智能推荐、定向营销、机器学习和人工智能等方面，至于预测「黑天鹅事件」？还是等失联的飞机找到再说吧。&lt;/p&gt;&lt;p&gt;《黑天鹅：如何应对不可预知的未来》的作者说过：历史和社会不是缓慢爬行的，而是在一步步地跳跃。它们从一个断层跃上另一个断层，其间极少有波折。而我们（以及历史学家）喜欢相信那些我们能够预测的小的逐步演变。我们只是一台巨大的回头看的机器。&lt;/p&gt;&lt;p&gt;认识到这一点，对大家的日常生活和未来发展会有帮助。&lt;/p&gt;&lt;p&gt;文章来自公众平台「MacTalk By 池建强」 ，未经许可，禁止转载。&lt;/p&gt;</description><pubDate>2014-07-30T13:34:20+08:00</pubDate></item><item><title>野百合也有春天</title><link>http://zhuanlan.zhihu.com/p/19810986</link><description>&lt;p&gt;今天是睿问环节，给大家讲一个故事，然后是我的回复。近期收到了不少邮件，但这个故事最为完整和青涩，我修改了一些措辞和别字，完整呈现。&lt;/p&gt;&lt;p&gt;池老师：&lt;/p&gt;&lt;p&gt;今年五月中旬，我在京东买了两本书：《人生元编程》和《黑客与画家》，刚买回来的时候很兴奋的看了一下午，后来因为学校布置的任务有点多，经常为实现一些功能通宵查找资料以及相关代码模块，所以书一直随身带着，但是没有看，我想我坐完这趟列车就该回去好好看书学习了。现在我在列车上给您写这封邮件。&lt;/p&gt;&lt;p&gt;2009年10月24日是我人生的一个转折点，正在上高三的我走出了高中校园，和老爸一起坐火车去了广州打工（出去打工因为家里穷还有当时鬼迷心窍读不下去）。放弃了高考的我，就走向了一条没有没有路灯照明的公路。但是，因为那时年轻，所以毫无畏惧。&lt;/p&gt;&lt;p&gt;到了广州，就在我姨夫厂里面做学徒工（烫图排版），当然我老爸不放心我也留在了他厂里面做事。我当时跟着我师傅学的是CorelDraw X2，可能是自己与生俱来的优势吧（自我陶醉一下），一个礼拜后，我就能独立完成工作，或许是这个行业要求的不多吧，再或者我对自己要求不高。其实，自己下班后都有回顾的，我老爸会问我问题「为什么是那样」（其实是陪着我学，让我快点掌握，现在想起了当时的自己是多么的让人不放心）。&lt;/p&gt;&lt;p&gt;写到这儿，天光开始放亮，给可能正在梦中的池老师说声「早上好」吧，第一次这样用心去感受黎明，真是「众人皆睡我独醒」。&lt;/p&gt;&lt;p&gt;接着说吧，那时候上班特别喜欢上QQ，何只是上班呢，吃饭、走路、睡觉等少不了聊QQ。2009年下半年正是处于金融危机的时候，熊市当道，但是腾讯股份却没有像其他上市公司那样出现惊人的下跌。我想我们这些对腾讯QQ情有独钟的人默默地做了不少贡献。QQ昵称红名显示，聊天记录漫游，各种钻和各种充，帮它顺利度过难关。暂且让我把腾讯作为中国互联网普及的标识，它可能代表着当时IT行业的飞速发展，时代需要它，没有让它变为历史，所以有了今天的腾讯和微信。&lt;/p&gt;&lt;p&gt;当时不知道怎么回事进了一个网站建设群，好像是因为学Photoshop时在网上无意中找到的，然后每天开始熬夜学习Photoshop。后来在群里认识了一位朋友，他比我大，我称呼他金兄，他当时推荐我学习Java，还给我推荐马士兵老师的教学视频，说实话我只会写个「HelloWorld」。可是那时我更喜欢学Html，因为那个特别能找到成就感，可以随时看到效果，不知道为什么不喜欢用Dreamweaver，可视化开发效率多高啊，不过我不用，我就用记事本写代码。当时我能用记事本写个问卷调查类型的页面，还会用表格布局。我与IT行业的缘分就是那时候开始的吧。&lt;/p&gt;&lt;p&gt;2010年4月，由于一些原因，我决定离开我姨夫的厂出去独立生活（偷偷的离开了，没有带走一毛钱）。先是来到了一家网吧做网管，虽然工资低，但是我跟着那里的技术员还是学了不少东西（DOS命令，装机，拆机……至少当时对我来说很多了）。差不多两个月之后，我又去了一家广告公司，在那里做所谓的平面设计（就是各种仿，各种抄），但是技术上也确实有不少提升。&lt;/p&gt;&lt;p&gt;一直到2012年7月，期间陆陆续续做了很多不同的工作：销售，跟单，翻译（英语口语还行，做过口译），操盘手等。&lt;/p&gt;&lt;p&gt;经过几年的折腾，不能说经验丰富，但是确实发现了不少问题，感觉自己学习能力强，但是也还是需要有人给我方向，没有学历和专业也是硬伤。于是我回家了，来到了补校，复习了一年，参加了高考，2013年9月去了上海上大学，如今就读软件技术专业，目前学校安排的课程把大部分的J2SE内容讲完了。&lt;/p&gt;&lt;p&gt;给您发邮件的目的是想知道如何去成为一名优秀的程序员。还有想和您成为朋友，更希望能成为我的老师，在我的人生道路和职业生涯中给我指点迷津。&lt;/p&gt;&lt;p&gt;小 K&lt;br&gt;2014年7月26日上午7：08&lt;/p&gt;&lt;p&gt;——————————————&lt;/p&gt;&lt;p&gt;小 K ，&lt;/p&gt;&lt;p&gt;你能在漫漫长夜无心睡眠的列车上想到我而不是别的什么人，我还是很开心的。清晨收到你的邮件，我感到北京的天都变得更蓝了，我的文字还是影响了一些人。&lt;/p&gt;&lt;p&gt;我曾经以为我的经历是相对坎坷的，比如高考志愿报错去了三流院校，毕业后直接分配到车间擦了几个月的散热器，自学编程投身互联网的大熔炉，结果被融掉了，后来多次选择似乎都没有找到风口，不管是不是猪，反正没飞起来就是了，所以现在依然老老实实坚持编程和写作。但是编程和写作也没做出什么惊天动地的成就，以至于今天还被人在知乎问道「池建强写过哪些厉害的程序」。非常惭愧，确实没写过什么厉害的程序，所以写完这篇文章后，我准备去知乎上「坦白从宽，抗拒从严」。&lt;/p&gt;&lt;p&gt;你的经历显然比我更加丰富多彩，你因为经济压力高中辍学，充满了成就一番大事业的气势离开家乡，做过排版，干过网管，写了 HTML 和「Hello World」，还当过销售、翻译、操盘手等工作，这些艰难困苦也好、疯狂放纵也罢，都会成为你后续生活中的一笔财富。上天没有让你含着金钥匙出生，相信他会给你一些别的东西。&lt;/p&gt;&lt;p&gt;而且，让人非常高兴的是，你在经历过这一切之后明白了自己的长处和短板，重新回到了校园。对于中国现在的环境来说，完成大学本科的基本素质教育是非常必要的。你在大学生活中不仅仅会学到知识，而且能够重塑自己的人生。你可以碰到更多的人，遇见更高的山，见到更长的河。凭借你已有的阅历和能力，利用大学里的知识和浩如烟海的互联网资源，你完全可以在大学毕业的时候在某个领域达到相当的高度。重要的是利用资源和利用时间。&lt;/p&gt;&lt;p&gt;关于要不要读大学，读完大学要不要读硕士，也是我经常被问到的问题。我的观点是，不要相信辍学生改变世界。&lt;/p&gt;&lt;p&gt;虽然国外有比尔·盖茨和史蒂夫·乔布斯这两位最著名的大学辍学生，国内的韩寒和罗永浩甚至连高中都没有上完，但这些显然是「小概率」和「黑天鹅事件」，比尔·盖茨也明确表示：「我可不是那种不学无术的辍学生，我只是没拿到学位而已，因为那时我觉得创业比学位更重要」。如果你不觉得自己天赋异禀，完成大学本科的学业是必须的，你的获得的机会和资源将远远大于那些「辍学生」。至于那些高学历给低学历打工的例子，不是特例就是意淫，切记。&lt;/p&gt;&lt;p&gt;关于你的问题「如何成为一名优秀的程序员」，可以拆分为两个：&lt;/p&gt;&lt;p&gt;1、如何学习一门编程语言。我之前曾经写过一篇学习编程的文章，就收录在《MacTalk·人生元编程》中，希望对你有所帮助。&lt;/p&gt;&lt;p&gt;2、技术人员的职业发展。&lt;/p&gt;&lt;p&gt;如果你是个初入江湖的技术小球，敲打键盘之余，常常冲着窗户外幻想多年后功成名就看夕阳西下的日子，那么，请停止幻想，要想成为加薪晋级，赢取白富美的人生赢家，你面临着两条路，每一条都艰辛而漫长，只有战胜坎坷，才能实现梦想。&lt;/p&gt;&lt;p&gt;第一条：成为技术大牛！这还不够，你不能在延庆郊区的一所没有互联网的小房子里默默的牛，技术得转化为产品或服务，持续为你所在的公司或组织提供价值，假以时日，必有所成。&lt;/p&gt;&lt;p&gt;第二条：技术之余挖掘自己其他方面的潜力，产品、管理、布道、营销等等，通过技术+其他附加值的方式完成一个技术小球的逆袭，假以时日，必有所成。&lt;/p&gt;&lt;p&gt;世界上永远存在第三条路，不过那条路上有太多的第三方力量，我就不能给你建议了……&lt;/p&gt;&lt;p&gt;另外，关于老师的事情，常常让我更尴尬，就像是你在路上走的久了，突然被一群人抬起来放到了一堵高墙之上，高墙上是很难受的，因为没有根，连墙头草也做不了，所以你挣扎着想要下来，一不小心滚落到了墙的那一边，爬起身拍拍土一看，妈的是监狱！这下连点坏事都做不了了。所以，这个世界上没有「老师」，没有「成功学」，没有「人生导师」，你的人生只能自己导，别人导，会掉沟里。我希望成为你的朋友，如果你有技术和生活上的困惑，可以随时发邮件给我。&lt;/p&gt;&lt;p&gt;最后用你文中的一句话结束今天的文章：因为年轻，所以我们无所畏惧。野百合也会有春天！&lt;/p&gt;&lt;p&gt;池建强&lt;br&gt;2014年7月27日下午9：30&lt;/p&gt;</description><pubDate>2014-07-28T09:39:47+08:00</pubDate></item><item><title>你为什么不移民？</title><link>http://zhuanlan.zhihu.com/p/19808567</link><description>&lt;p&gt;身边很多朋友移民了，尤其是 IT 相关的技术人员。与人聊天时常常有人问我，你怎么还不移民？我只好回复，老了，移不动了。对我来说，移民最好的时代已经过去了，何况我也从来没有真正动过移民国外的念头。但是移民热从来不是现在开始的。&lt;/p&gt;&lt;p&gt;在我工作过的几个公司里，似乎洪恩软件的同事移民的最多，而且说走就走，不着一点痕迹。&lt;/p&gt;&lt;p&gt;记忆中最早移民的是一位赵姓同事，我们暂且叫他赵君吧。赵君是南方人，身形消瘦，个子不高，来了北京很多年，依然保持一口南方口音，说起来惭愧，我这个北方人，来北京没几年口音就完全变成京腔了，常常被很多人问，你丫是北京土著么？这时我就红着脸低下头小声说，俺还暂住着呢。基于此，每次听到赵君的口音，我都为自己的忘本难过。另外，关于南方人北方人，传统的观念总是南方人懦弱，北方人勇武，其实纵观历史，南方人在民族大义方面总是表现的更坚定一些，历史上有很多南朝和南人，他们常常在北方被灭的情况下独立坚守和斗争，包括近代的中日战争，也是北方早早沦陷。了解了这些东西，我有时候就会为自己是北方人惭愧个十分钟半小时的，同时也很喜欢和南方的同事交朋友。&lt;/p&gt;&lt;p&gt;赵君就是我的好朋友，从职责上来说，他就是那个时代的产品经理，时不时提一些产品需求让我们实现，但是他的弱点是不懂代码，经常被我们忽悠说，这个不能做那个太麻烦。那时候我们被他称为「牛娃」，他经常背着手围着我们这些程序员团团转，然后感慨，你们这些牛娃啊，永远不明白我的心！然后吟唱着「我要这天，再遮不住我眼，要这地，再埋不了我心，要这众生，都明白我意，要那些程序员，都烟消云散……」边唱边走，渐行渐远。&lt;/p&gt;&lt;p&gt;然后突然有一天，他告诉我，自己要移民了。我说你要去哪？他说要去丹麦，那是一个充满童话的国度，那里没有程序员。然后他就义无反顾的走了，带着他的小女朋友去了丹麦。再以后偶尔相逢于 QQ 之上，再以后渐渐的失去了联系，直到今天。不知道他在丹麦过的好不好，毕竟那里的童话属于他的下一代。&lt;/p&gt;&lt;p&gt;今天已经无法考证他的移民和「程序员逼迫产品经理远走异国他乡」这种狗血故事有没有关系，我只能在此祝他一路安好，生命中再也没有程序员。&lt;/p&gt;&lt;p&gt;第二位移民的是一位美丽的王姓姑娘，当时我们做数字校园的时候，她就坐在我的旁边。王姑娘身材修长，气质姣好，一双大眼睛柔情似水，常常着一袭白色长裙，让人想起白衣飘飘的年代。王姑娘很快和公司内一位才华横溢的帅哥出双入对，我们都称之为郎才女貌，一对璧人。可惜两人性格不合，不久后分手，很快王姑娘和另一位不起眼的男生双双去了捷克，让人大跌眼镜，为什么每一朵鲜花下面都有一滩肥料呢？后来兜兜转转听说王姑娘在捷克也并不幸福，最终把全部精力用在了求学上，据说她当时为了练习英文写作，每天要用英文写两千字的文章，这样写了半年，终于能够在英语写作的时候完全抛弃中文的念头。想一想还是挺可怕的，现在让大家每天写一篇千字文，能坚持下来已属奇迹了，况不用母语乎？&lt;/p&gt;&lt;p&gt;王姑娘后来也音讯皆无，听说辗转去了墨西哥求学，所以回想起洪恩那段时光的时候，常常伴随着一个白衣飘飘的东方女子在加勒比海的墨西哥湾翩翩起舞的样子，但是人的影像却再也看不清了。&lt;/p&gt;&lt;p&gt;第三位移民的是一位程序员，那是一位2000年左右的前端程序员，虽然他也能写后端程序，但显然他更偏好 Javascript，而且热衷于网络灌水，他不停的在 QQ 上灌水，在 BBS 灌水，在 MSN 灌水，在洪恩在线的论坛灌水，在水木清华 BBS 灌水，他的工作就是不停的编程和不停的灌水，于是我们忘了他不停编程的事情，把他叫做「水管」。&lt;/p&gt;&lt;p&gt;水管很瘦，常常踢踏者一双烂拖鞋来上班，坐下就开始编程，喝红酒，灌水，编程，睡觉，十分放浪形骸。但是他的工作总能及时完成，完成之后灌水之余还能帮助别人写点程序。那时候他在参加一个 BQQ 的项目，就是基于浏览器的 QQ，期间使用了大量的 Javascript 技术。他最爱写的是正则表达式，有一次他让我帮着看看一段程序出了什么问题，我看到了一屏幕曲径通幽的代码问道，这是什么？他说，这一阵屏幕代码表示了一个正则表达式。于是哥屈辱的走开了。&lt;/p&gt;&lt;p&gt;水管想移民我是很早就知道的，他一直向往美国的生活，所以按部就班考了托福和 GRE，然后就无情的抛弃了我们这些奋战在一个壕沟的程序员，带着女朋友毅然出国了，然后念了硕士，念了博士，念到头发都白了，终于开始工作。这是移民后唯一一位依然和我保持联系的朋友，通过微博，通过微信。&lt;/p&gt;&lt;p&gt;他常常告诉我，微软又裁员了，Visual Studio 的经理被裁掉了，纽约刮台风了，纽约断水了，水到腿肚子了云云。一般水到腰的时候我就会问一句，当年学的泳姿没忘吧？他说没忘。那就用蛙泳，我嘱咐道。之后就陷入再一次的沉默和下一次的唤醒。&lt;/p&gt;&lt;p&gt;然后，更多的朋友离开了，他们去了美国、澳洲、加拿大、新西兰和很多国家，我甚至为他们签过很多推荐信，有些人甚至已经从国外回来了，我却依然没有移民。&lt;/p&gt;&lt;p&gt;所以人们忍不住问我，你为什么不移民？&lt;/p&gt;&lt;p&gt;其实移民这种事，可以扯出一箩筐的东西来，包括国仇家恨、世界和平、全球变暖、全球变冷、国外的晴空、国内的雾霾、地沟油和协警、国外的教育和国内的户籍等等等等，很多人因为这些东西选择了移民，而我没有，我们做程序员这一行的，早就练成了一颗坚固的心和强悍的身，这点困难不算什么。我最终没有选择移民离开这个国家的原因其实很简单，就俩：&lt;/p&gt;&lt;p&gt;第一，小时候常常被教育爱这个国家，于是就爱了，当年但凡中国和其他国家发生摩擦的时候都是义愤填膺，恨不得自己扛枪上阵，每次都是被老爹一巴掌打掉眼镜后作罢。一旦有人说中国不好就想上去和人家拼命，只要有中国队的比赛都要在电视前呐喊助威，每次都被中国足球队伤到脾胃而痴心不改。&lt;/p&gt;&lt;p&gt;渐渐长大以后，走了更多的路，读了更厚的书，慢慢开始淡化国家的概念。国家本身就是政治、利益和各种主义的产物，纵观人类的历史，国家存在的阶段不超过十分之一，所以人更多的应该关注这个世界，理解这个世界和民族的兴衰，看全人类在历史长河中的起起落落，才不枉来人世间走一回。我不觉得移民是什么值得高兴的事情，也不觉得把子女早早送到国外读书是个体面的活动。从长远来看，人应该更多的关注历史和未来，从近处着手，人应该努力改变身边的环境和生活。&lt;/p&gt;&lt;p&gt;所以于我而言，我更愿意像村上春树先生那样，旅居各个国家，写字、编程和认知世界，而不是成为那个国家的人民。&lt;/p&gt;&lt;p&gt;第二，这篇土地上有太多值得我留恋的东西，亲人、朋友和熟悉的环境，都让人难以割舍。老爸老妈年岁渐增，需要陪伴，子女幼小，需要抚养，兄弟相依，朋友相见，其乐融融，心向往之。移民之后，还能剩下什么？再好的环境也难以比拟这些，况且我又是个保守的老男人。&lt;/p&gt;&lt;p&gt;曾经有个年龄和我相仿的朋友卖掉了北京的豪宅移民澳洲，因为没技术英语差找不到工作，于是生了俩娃，一边领政府补助一边消费带去的积蓄，生活过的挺好，他的工作除了照顾孩子就是钓鱼烧烤，因为驱车几十公里就是大海，烧了半年后我在 MSN 对他说，你终于过上自己想要的生活了吧，他告诉我，现在闻到烧烤的味道就想吐，准备去做点小买卖了……&lt;/p&gt;&lt;p&gt;补充一句，这个兄弟在国内时可是个优秀的产品经理哦（根本停不下来……）。&lt;/p&gt;&lt;p&gt;回忆总是不可靠的，它就像被时光蛀虫蚕食了的木头，重新拿起来的时候总要忍不住去用新鲜的木屑去修修补补，虽然这些修补是真实的，但木头是虚幻的。所以，写了这么多故事，都是随想随写，如果文中的人物不幸看到了这篇文章，千万不要对号入座，因为，说的就是你吧……&lt;/p&gt;&lt;p&gt;—————————————&lt;/p&gt;&lt;p&gt;我脑海中常常想起这样的场景，老爸在漠北举旗，老哥在天津起意，我于京城振臂一呼，分分钟我们就全家团圆了，何苦来哉移民国外，享受隔海想念的苦处？&lt;/p&gt;&lt;p&gt;人生已至四十不惑，该想明白的都想明白了，没想明白的估计也想不明白了。后面的时间只要把想明白的事情做好已是大幸。有机会就游历世界，没机会就衣锦还乡，就这样吧。&lt;/p&gt;&lt;p&gt;文章来自微信公众账号「MacTalk By 池建强」，未经允许，谢绝转载。&lt;/p&gt;</description><pubDate>2014-07-24T22:45:20+08:00</pubDate></item><item><title>Don’t be a Hater</title><link>http://zhuanlan.zhihu.com/p/19806632</link><description>&lt;p&gt;问：为什么锤子手机 T1 刚刚开始销售就迎来铺天盖地的负面新闻？&lt;/p&gt;&lt;p&gt;答：我特马怎么知道，可能中国人在高压下生活了很多年，已经不再喜欢锤子了吧。&lt;/p&gt;&lt;p&gt;老罗确实喜欢吹牛，他常常强调自己一直在用生命吹牛，拳打苹果，脚踢三星，一锤在手，天下我有。在以低调和中庸为美德的中国，这么吹牛显然是会付出代价的，但是代价不应该是谩骂、抹黑和诅咒，我从来没见过一款产品受到如此铺天盖地的诋毁和中伤，甚至有个所谓的自媒体撰文「为什么锤子手机没能成功」，你大爷，人家才刚上路呢……&lt;/p&gt;&lt;p&gt;在重度使用了一周 T1 之后，我对这款手机和这个团队充满了期待，我希望在他们手里能够生产出最好的 Android 手机。T1 本不应该有这样的遭遇，有时候我只觉得这并非人间。由此我想到了很久之前写过的一篇文章，叫做「不要做一个 Hater」，文章已经收录到&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/%3Fp%3D1008" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;《MacTalk·人生元编程》&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;中，很多老读者应该读过。文章的内容放到现时环境中来读，无比应景，修改了部分内容，贴出来重温一下。我希望每个读到这篇文章的人，永远不要做一个 Hater，无论你有什么理由！&lt;/p&gt;&lt;p&gt;MacTalk 开通以后，我收到过很多寻求建议的问题，也尝试回过一些，剩下的那些是我没能力回复的。每个人的一辈子都是独自来独自去，但是一路走来我们总会有很多同行者，这样大家就会有交流、建议、意见、批评和忠告。但是，在这群人里，永远存在一小撮「通晓真相、上达天听」的人们，他们的建议永远是负面的，意见是否定的，忠告是没有用的。比如你想学编程，他会说，你的逻辑能力不适合编程；你要去做销售；他会说，性格决定命运，你这性格要能卖出东西我跟你姓；你说我要去创业，他会说，这个项目类型没人会投资的，早做早死晚做晚死；你说我要站着把钱挣了，他说，醒醒这是在中国……当你「果然」遭遇了一点挫折的时候，这些人就会祭出万试万灵杀手锏：你看，我早就说过……&lt;/p&gt;&lt;p&gt;我把这样的人统称为 Hater，这种人对自己不了解或没有勇气尝试的事物永远持否定态度，他们认为，你没有开始就已经失败了，成功永远在远方的云上！&lt;/p&gt;&lt;p&gt;如果你发现一个人所有的时间都用来否定什么，那么他的意见不听也罢，这些意见只会让世界变得更恶心一点点。甚至那些鼓励的建议也仅仅参考而已，因为不是这些提建议的人去做事和承担后果。如果你已经心有所向，那就追随你心。人生要经历无数次的选择，才能勾勒出你的一生。也许，最漫不经心的那次选择，就是你一生最重要的选择。想好了，就去做，没想好，就去试错，做事的人总是让人敬佩的。正因为我们在做事，所以才会遇到失败，这时候那些口诵大悲咒「我早就说过」的 Hater 是完全可以忽视的，因为所有人都是在试错中成长，那些不犯错的人充满了各种幻觉，其实是因为他不再成长了，或者是因为他的脸已经被打肿了。&lt;/p&gt;&lt;p&gt;李笑来在《把时间当做朋友》一书中写道：他们一定要给你泼冷水的。泼冷水的愿望之强烈，你无法想象。那种强烈借助了太多的力量：怀疑、嫉妒、恐惧、 愤怒。而在表现的过程中却又包装上另外一层表皮：关怀、 爱护、友爱、帮助。&lt;/p&gt;&lt;p&gt;虽然李笑来没有把「他们」定义为 Hater，但我想意思是一样的。所以我们首先不要让自己成为 Hater，另外也没必要去听取 Hater 的忠告。&lt;br&gt;&lt;/p&gt;&lt;p&gt;世界不会因为 Hater 的存在而停止转动，而真正的创造者，则一直大步前行！&lt;/p&gt;&lt;br&gt;&lt;p&gt;文章来自微信公众账号「MacTalk By 池建强」，未经允许，谢绝转载。&lt;/p&gt;</description><pubDate>2014-07-22T10:05:11+08:00</pubDate></item><item><title>Smartisan T1，不被产品左右</title><link>http://zhuanlan.zhihu.com/p/19802864</link><description>&lt;p&gt;五月份参加完锤子科技的产品发布会之后，我写了一篇「感受世界的温暖和激情」，被足球界的老愤青、媒体界的新标兵三表同学斥之为上半部分粉丝心态严重，所以我今天决定直接写下半部分。&lt;/p&gt;&lt;br&gt;&lt;p&gt;这篇文章并不是一个迟来的测评，因为除了 MacTalk 的读者和一些朋友，没人催促我成文。之所以写，是因为我是个电子消费品爱好者，另外，所有认真做事的人都值得尊敬，我只希望这款产品能变得更好。&lt;/p&gt;&lt;br&gt;&lt;p&gt;文章在主观感受的基础上尽可能做到客观、中立，抛弃情怀、主义和精神，如果没扔干净……有本事你来咬我啊！&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;strong&gt;包装篇&lt;/strong&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;在一个阳光明媚的早晨，天蓝的不容分说，太阳挂在半空，不刺眼，但金光四射，我接到了锤子科技公司的短信。短信里说，您的 Smartisan T1 到了，并且，在您收到手机的时候，我们已经准备了一次升级，开机后连上 Wi-Fi 就可以完成升级了。看到这条短信我心情很愉悦，用了这么多年手机从没有厂商提醒过我升级系统，一般的原则都是：可以升级了，你爱升不升，就酱。&lt;/p&gt;&lt;br&gt;&lt;p&gt;由于在发布会上老罗已经倾情介绍了 T1的包装盒，拿到实物后我并没有特别惊艳的感受，倒是包装盒外附送的卡托让我惊喜了一下，因为 T1使用的是 Micro 卡，而我正好有一个无线 Nano 上网卡，有这个卡托就可以直接使用手机了，省去了上网买卡托的麻烦。&lt;/p&gt;&lt;br&gt;&lt;p&gt;从短信到卡托，都体现了一个企业在细节上的心思，当然这些体验都是针对我们这种正常人的，一件事永远存在两个维度，光明和黑暗。比如很多人对短信的态度是：「丫刚发货 ROM 就要升级，是成品吗？」，对卡托的态度是：「送个几块钱的破卡托就想收买人心么？」看到这些评论我在呵呵之余，不仅想起「苹果五部曲」里的一段话：&lt;/p&gt;&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;史蒂夫·乔布斯早年把苹果的系统设计成封闭式的时候，人们说他有性格，酷。后来他为了迁就市场开始有所妥协的时候，用户们又说乔帮主稳健，牛逼。&lt;/p&gt;&lt;p&gt;比尔·盖茨呢？当他朝左的时候，人们说他王八蛋，当他朝右的时候，人们说他龟儿子，当比尔.盖茨把他几乎所有的财产都捐出来做慈善事业的时候，所有人都翘起了大拇指。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;你要人家怎么样嘛？有时候，做人仅仅是正常一点就够了。&lt;/p&gt;&lt;br&gt;&lt;p&gt;拿出「天生骄傲」的 T1之后，打开隔层，就可以看到四个成比例摆放的白色配件，分别是 USB 线和绕线器、圆形充电插头、螺丝盒和像工艺品一样的螺丝刀。如果你是个完美主义者或强迫症患者，一定会在这些配件的设计中得到满足，色彩搭调，大小适中，每个物件都在正确的位置上。USB 线的手持部分采用了凹凸设计，根据手指的直觉，凹面向上一插必中。这种设计虽然不如苹果的 Lightning 线可以正反通吃，但是用最微小的代价创新性的解决了误操作问题，有感而知，值得钦佩。另外，我太喜欢了那个螺丝刀了，精美！&lt;/p&gt;&lt;img src="https://pic3.zhimg.com/792d013cc1f040efeb4f99ff09d454c2_b.jpg" data-rawwidth="1282" data-rawheight="984" class="origin_image zh-lightbox-thumb" width="1282" data-original="https://pic3.zhimg.com/792d013cc1f040efeb4f99ff09d454c2_r.jpg"&gt;&lt;br&gt;包装盒通体黑色，与黑色的 T1、白色的配件放在一起显得沉静、质感和简约，走的是低调奢华有内涵的路子。但是，与同样简洁的 iPhone 包装盒比起来，这货是不是有点太大了？&lt;br&gt;&lt;p&gt;&lt;strong&gt;硬件篇&lt;/strong&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;T1真机比我想象中要轻一些，在锤子科技官网的效果图上觉得 T1会比较厚，见到实物发现 T1 只比 iPhone5S 厚一点点，查了下资料，一个是8.23mm，一个是7.6mm，差0.63mm。但是在整体的重量上 T1 的确是超过 iPhone5S 和米3的，如果你用惯了 iPhone5/5S，开始单手握持 T1 会有沉重的感觉。&lt;/p&gt;&lt;br&gt;&lt;p&gt;T1 在工业设计上完美的遵循了对称的美学。对称性普遍存在于世界之中，是人类最容易接受的一种美。比如晶莹的雪花，美丽的蝴蝶，彩色的花瓣，宏伟的古建筑，古朴的瓷器等无不呈现出妙趣天成的对称之美。很多电子消费品也会遵循对称设计，但往往妥协于工艺的难易程度，像 T1这样执拗的几乎遵守了绝对对称的设计，我还是第一次看到。T1 面板底部的三个实体功能键居中排列，触感十足。机身的两侧各有两个功能键，可以用来调整音量、亮度、截图、抢拍等，绝对居中。底部的 USB 接口居中，两侧是对称的扬声器和对称的两颗固定背板的螺丝。顶部是耳机插孔和电源键，为了对称性，电源键做成了和耳机孔大小一致的圆形按钮，与耳机孔对称排列。背板上的摄像头的位置也保持了与上沿、左沿相等的距离。唯一没有遵循这个原则的就是背板上的 Logo，磨砂的圆形 T 标记处于背板的中上位置。&lt;/p&gt;&lt;br&gt;&lt;p&gt;T1 的显示屏和背板都采用了充满质感的玻璃材料，背板经过打磨后在边缘部分具备微妙的曲面过渡，增加了单手握持的舒适感。整体的对称设计和玻璃材质、曲面设计，让整部手机厚重里透出晶莹温润和流光溢彩，如果手掌干燥的话，你会感到机身如丝般顺滑，这一点让我欣喜若狂。但是，如果你是个大汗手，那么 T1 将变成一款指纹机。&lt;/p&gt;&lt;br&gt;&lt;img src="https://pic1.zhimg.com/d24cd1fec2eea1989f5ab8209be6bc14_b.jpg" data-rawwidth="1024" data-rawheight="1365" class="origin_image zh-lightbox-thumb" width="1024" data-original="https://pic1.zhimg.com/d24cd1fec2eea1989f5ab8209be6bc14_r.jpg"&gt;&lt;p&gt;好的说完了，说说我觉得不如意的地方。由于绝对对称导致中间的两颗功能键在单手握持的时候并不在手指边上，而在手指靠下一点的位置，如果你想调节音量，需要弯曲拇指才能够到。&lt;/p&gt;&lt;br&gt;&lt;p&gt;同样是为了追求对称性，电源键做的太小了，按压不是很方便，开关机或关闭屏幕的时候往往需要摸索一番才行。从易用性上来说，设计成 iPhone5S 那样的长方形按键似乎更好一些。&lt;/p&gt;&lt;br&gt;&lt;p&gt;另外，T1 的背板没有做任何磨砂处理，光洁如玉，顺滑如丝，代价可能是无尽的指纹和划痕。&lt;/p&gt;&lt;br&gt;&lt;p&gt;最后，在现在追求极致轻薄的工业时代，T1 似乎有点重了，尤其是针对女性用户。关于这一点，我特意咨询了一些大脸女生，她们一脸茫然，纷纷拿出大块头的三星 Galaxy Note 和红米 Note 等系列 Note 手机（上面还裹了厚厚的套子），和 T1 比了比掂了掂，表示不重啊。好吧，子非鱼，焉知鱼之乐？关于重量，我又有些释然了（罪过，希望这篇文章她们不会看到）。&lt;/p&gt;&lt;br&gt;&lt;p&gt;关于硬件篇，就剩下最后一步：打开背板，装上 SIM 卡。&lt;/p&gt;&lt;br&gt;&lt;p&gt;根据网络上的说法，具体做法是：拧开螺丝，朝上轻轻一推，咔哒一声，背板就开了。我去找那两颗螺丝，结果开心的发现，真机的螺丝是不拧上的，于是我轻轻一推……什么事都没有发生！我又发力推了一把，背板散发出幽幽的光芒，印照着我大汗淋漓的脸庞，纹丝不动！我看了看背板和整机严丝合缝，心想，麻旦难道被骗了？&lt;/p&gt;&lt;p&gt;我在微信上找到了锤子科技内部员工：你们说说吧，这特么怎么回事？他们鼓励我：池老师您别着急，做法没错，就是您劲太小了，得保持手掌干燥，双手握持手机底部向上推。没事，您就使劲推吧，我们的锤子是很硬朗的。于是我擦干手掌，鼓足勇气和吃奶的力气，使力一推，咔哒一声，背板终于开了。&lt;/p&gt;&lt;br&gt;&lt;p&gt;SIM 卡终于见到了 T1，它们马上要幸福的生活在一起，但我却陷入了深深的忧伤，那些没有男朋友的女性 T1用户该怎么办呢？记住，如果以后你们看到一个美女对着 T1 愁容满面的时候，一定要第一个冲过去说，放着我来！&lt;/p&gt;&lt;br&gt;&lt;p&gt;***************************&lt;/p&gt;&lt;br&gt;&lt;p&gt;发了昨天的文章之后，很多读者回复说图太少了，今晚闲来无事，用手机多拍了几张，以飨读者。&lt;/p&gt;&lt;br&gt;&lt;img src="https://pic3.zhimg.com/f6677ca67b2d5a3f55dd99cff2b59c4a_b.jpg" data-rawwidth="450" data-rawheight="600" class="origin_image zh-lightbox-thumb" width="450" data-original="https://pic3.zhimg.com/f6677ca67b2d5a3f55dd99cff2b59c4a_r.jpg"&gt;&lt;img src="https://pic3.zhimg.com/9fd19db66cfb6402f163ee3bf74da0da_b.jpg" data-rawwidth="450" data-rawheight="600" class="origin_image zh-lightbox-thumb" width="450" data-original="https://pic3.zhimg.com/9fd19db66cfb6402f163ee3bf74da0da_r.jpg"&gt;&lt;br&gt;&lt;p&gt;今天网路上突然爆出了 T1 的一些产品质量问题，有些读者问我是否也出现了类似问题。目前我拿到的真机在外观上没什么问题，在设计上值得商榷的地方我都在硬件篇里写过了。至于其他用户的手机是否有问题，我并不关心，我又不是锤子科技的股东，他们也没付我一毛钱广告费，所以，应该关心的是老罗和锤子科技的员工。我们还是从产品设计的角度去品评这款产品吧，今天是「软件篇」。&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;strong&gt;软件篇&lt;/strong&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;首先需要明确的是，Smartisan OS 是基于 Android 4.4的操作系统，所以其根本上还是一个 Android 系统，很多人会把 T1 的操作系统拔高到 iOS 的层面去比较，事实上这是不合适的，对 Smartisan OS 也是不公平的，因为两者的科技含量完全不同。能和 iOS 相提并论的，目前只有 Android 本身。但这不妨碍我们在原生 Android 系统的基础上打造自己的创新性定制系统，实际上几乎整个世界的手机厂商都在这么做。这一点是我们这个软件篇的大前提。&lt;/p&gt;&lt;br&gt;&lt;p&gt;我体验过很多 Android 的定制系统，基本大同小异，而 Smartisan OS 确实不走寻常路，自有我精彩。无论是输是赢，这种尝试和勇气都值得我们尊敬。&lt;/p&gt;&lt;br&gt;流畅度&lt;br&gt;&lt;p&gt;T1 是我用过使用最为流畅的 Android 手机，这么说可能不太贴切，因为我压根就没用过几部 Android 手机。那就换一种说法，T1 的流畅程度非常接近 iPhone5，包括桌面切换，动画效果，打开 App 和 App 的使用效果等，都非常平滑。为了测试其 GUI 处理大数据的能力，我分别在 iPhone5和 T1上操作了微信的朋友圈分组功能（该令人发指的功能我已在「给微信产品经理的十个建议」进行了吐槽，有兴趣的可以去历史消息里翻翻），iPhone5在显示上千个用户信息时只是略有卡顿，T1就差一些，常常会忧伤的告诉你：「微信快不行了，你是要关掉它呢，还是要关掉它」。我选择了继续等待，最后也算别别扭扭的完成了操作。&lt;/p&gt;&lt;br&gt;&lt;p&gt;Android 系统内核的进程管理模式并没有设定为优先处理 GUI 行为，这一点和 iOS 完全不同。iOS 对GUI 的处理优先级是最高的，如果我记得没错，响应顺序依次为Touch、Media、Service、Core层，换句话说，只要你把自己胖嘟嘟的手指放上屏幕，系统就会尽可能去优先响应 GUI 操作，也就是 Touch 这个层级，然后才是其他服务层。当然，iOS 为什么比 Android 快，这个几乎是可以用一篇长文来描述的，比如硬件加速问题、开放性和封闭性的硬件适配问题等，这里不再细说。&lt;/p&gt;&lt;br&gt;&lt;p&gt;所以，Android 手机能够达到 iPhone5的流畅度，我还是很满意的。当然，我们不排除这是 Android 4.4的功劳。&lt;/p&gt;&lt;br&gt;桌面&lt;p&gt;桌面系统是 Smartisan OS 最大的亮点，与其他 Android OS 比起来，识别度非常高。T1的桌面采用了九宫/十六宫格设计理念，并通过细线将桌面切分为一块块的磁贴，每个图标都处于磁贴中央。图标的移动动画极其精致，你并不是单独拖动一个图标，而是在拖动一个悬浮起来的磁贴，操作起来非常有质感。&lt;/p&gt;&lt;p&gt;Smartisan OS 对原生的 Android 应用的图标做了全新的设计，设计水准属于上品，和九宫格或十六宫格的布局配合起来浑然天成。但是新安装的第三方程序图标就没那么美好了，因为锤子手机并没有形成标准，没有Smartisan Human Interface Guidelines，很少有厂商会单独给锤子科技做图标，老罗作为一个强迫症患者，为了保证 UI 的一致性，为很多 App 重绘了图标，但是这些图标的水准和那几个原生图标相比就逊色多了。另外，新安装的 App 上会有个大大的new，这一点我觉得有过度设计的意思，虽然点击图标后这个new 就会消失，但还是不如 iOS 里左下方那个若隐若现的蓝点来的自然。&lt;br&gt;&lt;br&gt;&lt;img src="https://pic4.zhimg.com/b3906fd769fe981174fbc13ea918e4c7_b.jpg" data-rawwidth="576" data-rawheight="1024" class="origin_image zh-lightbox-thumb" width="576" data-original="https://pic4.zhimg.com/b3906fd769fe981174fbc13ea918e4c7_r.jpg"&gt;&lt;img src="https://pic4.zhimg.com/b3906fd769fe981174fbc13ea918e4c7_b.jpg" data-rawwidth="576" data-rawheight="1024" class="origin_image zh-lightbox-thumb" width="576" data-original="https://pic4.zhimg.com/b3906fd769fe981174fbc13ea918e4c7_r.jpg"&gt;&lt;/p&gt;&lt;p&gt;原生图标秒杀第三方图标界面。&lt;/p&gt;&lt;br&gt;&lt;p&gt;Smartisan OS 专门为桌面提供了设置项，你可以选择安卓原生、九宫格、十六宫格，可以选择隐藏桌面图标名称。桌面的多板块设置让 T1的桌面系统成为最为高效的图标整理和启动工具。在多板块界面里，你可以选中多个图标直接组成新桌面，可以点击多版块中的图标实现快速启动，还可以对某个桌面的图标进行保护和隐藏。经过几天把玩后，我选择了十六宫格的桌面，单一界面和多板块的界面如下，进入多板块界面的方式也很快捷，点击面板底部的 menu 键或在桌面上做双指捏合的 pinch 操作即可。&lt;/p&gt;&lt;br&gt;&lt;img src="https://pic2.zhimg.com/524fd1eab84551ca7dc7c7a63d6fcb4d_b.jpg" data-rawwidth="576" data-rawheight="1024" class="origin_image zh-lightbox-thumb" width="576" data-original="https://pic2.zhimg.com/524fd1eab84551ca7dc7c7a63d6fcb4d_r.jpg"&gt;&lt;img src="https://pic4.zhimg.com/b61d4c2ef397c588eebaff51e25c3e47_b.jpg" data-rawwidth="576" data-rawheight="1024" class="origin_image zh-lightbox-thumb" width="576" data-original="https://pic4.zhimg.com/b61d4c2ef397c588eebaff51e25c3e47_r.jpg"&gt;桌面的动画也是我非常喜爱的，当你切换桌面主题或滑动解锁的时候，桌面上的磁贴都会做一个非常华丽的悬浮后贴合的动作，每次看到这个动画，我都想起微风拂过水面的涟漪或是秋风吹过落叶翻滚的场景。&lt;br&gt;&lt;br&gt;&lt;p&gt;整体来看，锤子手机的桌面系统创意十足，里面有很多值得设计者学习的地方。看到别人高调吹牛，光喷是没有用的，那样只会让你成为一个年轻的喷子，然后变成一个年老的喷子。而真正的创造者，则一直大步前行。&lt;/p&gt;&lt;br&gt;人性化设计&lt;p&gt;Smartisan OS 做了很多人性化的设计，比如针对左右手操作的设置，截图时可选区域，静音时可选静音时限，短信延时发送，快速抢拍功，联系人按照地点、使用频率和添加时间排序等，给我留下深刻影响的有这么几个：&lt;br&gt;&lt;/p&gt;&lt;p&gt;1、手掌横扫消除角标：这个操作我试了几次都没成功，后来发现必须要掌缘贴合屏幕才行。不过非常遗憾的是目前只有几个原生的 App 会出现角标，其他第三方程序还没来得及做。&lt;/p&gt;&lt;p&gt;2、拇指下拉屏幕悬停：我不是左撇子，但一直喜欢用左手单手操作手机，这个功能让我在大屏的 T1上依然可以单手操作，而且响应成功率非常高。&lt;/p&gt;&lt;p&gt;3、日历的事件拖拽操作：如果你平日事物较多，而且又是个拖延症患者，总会有完不成的工作需要挪到明天或后天，我们以前的操作都是通过编辑完成，在 T1的日历 App 中，你可以长按事件，然后将其拖拽到其他日期，非常方便。&lt;/p&gt;&lt;br&gt;屏幕&lt;p&gt;T1 屏幕的显示效果非常棒，和 iPhone5放在一起几乎没什么区别，在强光下的表现则是 iPhone 好一些。不过 T1屏幕更大，更适合电子阅读，这一点非常吸引我。另外，系统的自动调整屏幕亮度已经做的足够用了。&lt;/p&gt;&lt;br&gt;浏览器&lt;p&gt;浏览器是我常用的 App之一，但 Smartisan OS 做的乏善可陈，书签既不能和 iCloud 同步，也不能与 Google Chrome 同步，另外首页连个快捷方式都没有，这一点 MIUI 的原生浏览器做的更好一些。&lt;/p&gt;&lt;br&gt;输入法&lt;p&gt;用惯了 iOS 的输入法，切到 Android 的输入法还是需要稍稍适应一下，虚拟键盘的流畅程度超过 MIUI。默认输入法触宝中文的智能纠错和提示功能很棒，输入长句子大概有70%的正确率。&lt;/p&gt;&lt;br&gt;音乐&lt;p&gt;T1的音质非常不错，我分别用 iPhone 的 EarPods 和小米的新版活塞耳机试听，音色清亮，层次分明，我觉得挺好。不过在音效方面我不是专家，不再多说。&lt;/p&gt;&lt;br&gt;&lt;p&gt;系统自带的音乐内置播放器类似经典黑胶唱机，你可以拨弄拨弄唱盘和唱针来操作音乐，但是唱盘只有个暂停功能，唱针是管快进快退的，我被这两个操作彻底搞晕了，直到问了锤子科技内部员工才搞清楚。&lt;/p&gt;&lt;br&gt;&lt;p&gt;T1 不提供耳机，也不适配现有的耳机，目前线控只能实现暂停和下一首的功能，无法实现音量控制。锤子的研发人员表示：暂时不会支持音量增减，也暂时不会出自己的耳机。听到这个反馈我很不开心。&lt;/p&gt;&lt;br&gt;&lt;p&gt;另外，听音乐的时候如果有通知或短信等音效出现，基本上会中断音乐，然后再继续，而不是像iOS那样，音乐的音量降低变成背景音，然后再继续。我觉得后者更舒缓一些，体验更好。&lt;/p&gt;&lt;br&gt;通知&lt;p&gt;用惯了 iOS 的通知，你会觉得 T1的通知太简陋了，除了通过下拉菜单看通知基本没有别的办法。每个 App 的通知方式不可定制的，所以你没法像 iOS 那样，在锁屏的手机上看到通知信息。&lt;/p&gt;&lt;br&gt;&lt;p&gt;另外，系统大部分第三方 App 都不支持角标通知，这让习惯了 iOS 角标的我有些无所适从。&lt;/p&gt;&lt;br&gt;&lt;p&gt;软件篇就到这里结束吧，我挑了一些自己印象深刻的元素和功能进行了描述，希望对移动互联网的从业者有所帮助，也希望锤子科技的手机能够做的更好。&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;strong&gt;续航与发热&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;最后来谈一谈 T1 的续航和发热情况，这一点似乎是大家最为诟病的缺陷。我第一天拿到真机后安装了几屏应用，使用或充电过程中手机发热量都比较大，掉电也是以迅雷不急掩耳盗铃之势。这种情况在两天之后有所缓解，使用时间变长，发热量减少，但长时间使用的发热量仍然是大于 iPhone5的，我想这是锤子科技一定要解决的问题，只能期待下一版的 ROM 了，希望不是以牺牲流畅度的代价来减少发热量。&lt;/p&gt;&lt;br&gt;&lt;p&gt;*****************************&lt;/p&gt;&lt;br&gt;&lt;p&gt;至此，关于Smartisan T1 的文章写完了。总结一下，T1 这款手机的设计没有被市场上的大众手机品类和 iPhone 所限制，也没有去刻意迎合大众，而是有独特的思考和创新之处。一款产品被设计出来，其实大众并不关心你的过程、情怀、匠心和理想，也不会关心产品创造者，他们看的是最终的产品。而对于创造者，每个创意、细节和过程都需要去用心打磨和实现。一旦你最初的设计体验出错，之前的一切努力将化为乌有，不容易。&lt;/p&gt;&lt;br&gt;&lt;p&gt;目前看来，T1 的方向是正确的。要么设计，要么死去，这是一个残酷的世界。&lt;/p&gt;</description><pubDate>2014-07-17T08:45:25+08:00</pubDate></item><item><title>给微信产品经理的十个建议</title><link>http://zhuanlan.zhihu.com/p/19798653</link><description>&lt;p&gt;前几日参加吴军老师的新书发布会时，聊到了腾讯的微信。因为吴军在腾讯带过两年搜索业务，所以对大公司的各种掣肘和纠结同样感慨万千，大家就琢磨着，如果微信没有长在腾讯，可能会去哪儿呢？掰着指头算了半天，最后大家觉得，还是尊重历史的选择，就让微信长在腾讯吧。一个选择，可能是偶然的，也可能是必然的，但选了之后就是必然。&lt;/p&gt;&lt;p&gt;公司内部的竞争不是什么大事，无非是哥哥拿了弟弟的橡皮，弟弟动了哥哥的铅笔，良性竞争的话没准还能凑一幅素描画出来。但是，弟弟想革哥哥的命，这就需要一点勇气了。微信之前，QQ 为腾讯带来巨大的用户数量，广告和游戏为腾讯带来巨大的现金流量，大家相依相偎相安无事。但是破坏者微信出来了，这个最初的移动 IM 应用在2012年注册用户就突破了2亿，同年发布了朋友圈、微信公众平台和开发者中心，微信迎来了爆发式的增长，从一个相对单纯的 IM 变成了社交、媒体和微信 App 应用的大平台，生态环境日趋完善。也是从那时起，腾讯的市值开始突飞猛进。&lt;/p&gt;&lt;p&gt;江湖传言，微信崛起后腾讯员工就像企鹅怀抱 AK47，走起路来都「杠杠」的。如果你竟然是微信开发团队的，那基本就是你有霸天虎，我有擎天柱的气势，人挡救人，神挡杀神！一边是微信的红火，一边是 QQ 的落寞。看着微信春风沉醉的面庞，QQ心想「小马哥从前陪人家看月亮时，叫人家腾讯 QQ，现在新人换旧人了， 微信倒成了腾讯的微公主……」&lt;/p&gt;&lt;p&gt;想想吧，新浪能做个微薄和微博竞争么？阿里能做个四十大盗和淘宝竞争么？百度能做个移动搜狗和搜索竞争么？不能！所以，微信还是出在腾讯好了。&lt;/p&gt;&lt;p&gt;最近被微信的几个朋友拉进一些群里，群名高端大气，叫什么微信智囊团之类的，大概齐是征求微信用户意见或建议的意思。我一看这么开放公平公正，于是就开心的加入了。作为一个70后程序员，我是个出名的实心眼，进去就把自己想到的意见或建议 balabala 说了一通。结果几个小伙伴面面相觑，有个兄弟说，大哥你是在卖萌吗？或者说咱们不是来卖萌的吗？卧槽原来是这样，当时我就觉得整个世界都不好了，觉得天下都是80后和90后的了。大家一看我很伤感，就安慰我说，老同志你别难过，意见都记下了，我们还得再考虑考虑，毕竟现在的微信已经不是以前的微信了，怎么改，最终还得龙哥定。&lt;/p&gt;&lt;p&gt;好吧。&lt;/p&gt;&lt;p&gt;鉴于这帮熊孩子基本不会把我的建议传达给微信事业部传说中的龙哥，我决定在自己的平台写一写，如果有些功能你也需要，那就帮着转一转，如果能够改进一个几亿人使用的产品，哪怕只是一个像素，也算改变世界。&lt;/p&gt;&lt;p&gt;微信产品的决策者是我见过最节制的设计者和运营者，他们金山在前而不动，美女坐怀而不乱，以不打扰用户为己任，有目的有计划的进行着不可告人的秘密，那就是成全用户，陶冶自己。他们在商业规划和生态环境上当然有自己的战略和战术，这个轮不到咱们操心，我只是从一个普通用户的角度，说一说我用微信的时候，在想些什么。&lt;/p&gt;&lt;h3&gt;关于微信App&lt;/h3&gt;&lt;p&gt;1、通讯录的分组管理功能&lt;/p&gt;&lt;p&gt;首先问大家个问题，不知道微信的通讯录有分组功能的同学有多少？请起立！好，前面这几万名同学请坐下吧，你们不用羞愧，哥也是在一个偶然的机会里才知道的。&lt;/p&gt;&lt;p&gt;那是一次长途旅行，我和二爷鉴书的作者邱岳从杭州赶赴京城。在不停歇的聊了6个小时以后，我终于败下阵来，开始不停的喝水和看表，二爷则露出了胜利的微笑，这时他突然狡黠的抛出了一个问题：哥你知道微信通讯录有分组功能吗？这个问题彻底击溃了我，我只知道朋友圈长按照相按钮能发文本消息，谁能想到通讯录还能分组呢？&lt;/p&gt;&lt;p&gt;二爷以最终胜利者的姿态为我演示了这个功能：打开「发现-朋友圈」，按照相按钮，选择一张图片，确定，然后就进入输入文字的界面。点击这个界面的倒数第二个条目「可见范围」，进入下一个界面，点击最下面的「编辑我的分组」，biu 的一声，你终于可以「快捷方便」实现通讯录的分组管理了。世界属于80后！&lt;/p&gt;&lt;p&gt;这还不算，如果你花了一下午对几百个用户分组后还想对其进行编辑，那就要了亲命了。比如你想删除一个组里的用户，就需要再次重复以上步骤，选一个组，越过几百个用户头像，在最下面会出现一个「—」字，点一下，你会发现组里的几百个图标的左上角会出现一个红色的「-」标，然后你就可以继续翻越那几百个头像去寻找你要删除的人了，翻的过程中一不小心碰到界面的某个地方，所有的「-」标就消失了，请重来一次，谢谢。等你找到那个要删除的主之后，拉黑丫的心都有，现在你们知道这个功能有多么令人发指了吧。&lt;/p&gt;&lt;p&gt;SNS 的用户分组功能在移动 UI 上确实麻烦，但也不至于做成这样，最不济的，这部分功能放到 Mac 版微信上去做嘛，总归不能搞成这么隐藏晦涩的东西。&lt;/p&gt;&lt;p&gt;至于为什么要分组，请看下一条。&lt;/p&gt;&lt;p&gt;2、分组发送和分组查看朋友圈&lt;/p&gt;&lt;p&gt;通讯录分组，一是为了查看方便，二是为了分组发送和分组查看朋友圈。目前微信是支持分组发送的，但由于通讯录分组设计过于隐晦难用，分组发送形同虚设。为什么要分组发送，朋友圈毕竟和微博不一样，相对私密，有些照片可能愿意与家人分享而不予外人，所以这个需求还是有的。没有分组功能，有些想发的东西，自然就不发了。&lt;/p&gt;&lt;p&gt;为什么要分组查看？微信朋友圈原本定位成熟人社交，但一个产品做出来就会有自己的特性和发展轨迹，聚会时的扫一扫和雷达导致朋友圈发展到现在，是不是朋友的都加了，但是每个人不一定想看到所有人的信息，对吧？没有分组查看功能，如果我想看冯老师的卖萌和道哥的闷骚，就必须要去通讯录里打开他们的相册看，否则在朋友圈里翻找会变得漫长而痛苦。&lt;/p&gt;&lt;p&gt;分组查看的功能其实比分组发送更为重要，毕竟在信息爆炸的年代，能过滤掉一些无效信息，于人于己都是好事。&lt;/p&gt;&lt;p&gt;3、批量确认用户添加请求&lt;/p&gt;&lt;p&gt;这个需求是我每次在微信平台里开放私人微信时最痛苦的事情，一下涌进来几百个新朋友的确认信息，每次要做的是：点击接受，进入该用户界面，返回，再点击下一个，这么搞五十次基本上杀人的心思都有了，微信的朋友们你们看着办吧。&lt;/p&gt;&lt;h3&gt;关于微信公众平台&lt;/h3&gt;&lt;p&gt;4、素材搜索&lt;br&gt;微信公众平台已经运营快两年了，目前还是无法根据关键字查找图文素材。如果你想找一篇之前写的文章，就要去翻页查看，翻页查看，直到找到为止。虽然现在有了微信搜狗，但是，在公众帐号的 Web 控制台加一个图文素材搜索功能很难吗？&lt;/p&gt;&lt;p&gt;5、用户管理&lt;br&gt;微信公众平台已经运营快两年了，目前还是无法根据关键字查找用户。用户管理虽然有分组功能，基本也是形同虚设，如果有个朋友订阅了你的公众号，你想把他加到星标组，唯一的做法是让他在后台给你发一条消息，否则茫茫人海中，你们相遇的机会几乎是零。&lt;/p&gt;&lt;p&gt;6、统计&lt;br&gt;统计就不用说了，如果能够再快一些，再实时一些就更好了。&lt;/p&gt;&lt;p&gt;7、微信认证&lt;br&gt;以前在微信平台用微博认证就可以了，现在限制越来越多，必须要微信认证。但是，如果你是个体户或独行侠，无组织无纪律，基本没有微信认证的口子，想交那300块钱，门都没有。这个倒不算什么建议，算个请求吧，尽快让个人用户也微信认证一下，我们不差钱儿。&lt;/p&gt;&lt;p&gt;8、微信公众平台移动助手&lt;br&gt;目前只能通过 Web 控制台管理微信公众号，为什么不搞个移动助手呢？只要能够收发读者的消息和发送图文素材就可以了，要求不高。&lt;/p&gt;&lt;h3&gt;关于 Mac 版微信&lt;/h3&gt;&lt;p&gt;9、保持状态&lt;br&gt;每次打开都空空如也，上次说的话都去哪儿了，都特么去哪儿了？不说别的，能够和微信移动 App 保持一个状态就好了。&lt;/p&gt;&lt;p&gt;10、增加朋友圈的功能&lt;br&gt;有 Mac 的时候我们不想用 iPhone，所以，如果 Mac 版微信能否发朋友圈信息就最好了，顺手解决通讯录分组问题。&lt;/p&gt;&lt;p&gt;没有十一了，凑了十条我已经很爽了，以上建议仅供参考，希望微信的朋友能够看到。虽然你们已经做的足够好了，但是，如果你们无动于衷的话，我就去应聘微信的产品经理！&lt;/p&gt;&lt;br&gt;&lt;p&gt;文章来自微信公众号「MacTalk By 池建强」，未经允许谢绝转载，谢谢。&lt;/p&gt;</description><pubDate>2014-07-11T13:24:11+08:00</pubDate></item><item><title>Linus，一生只为寻找欢笑</title><link>http://zhuanlan.zhihu.com/p/19796979</link><description>&lt;p&gt;每个人桌面上一台电脑，这曾经是无数计算机先驱的梦想，这个梦想很早就实现了，在1997年，乔老师和比老师就说过，「比尔，我们共同控制了100%的桌面系统市场」，当然乔老师没说的是，比老师控制了97%，乔老师还不到3%。时至今日，乔老师走了，比老师颓了，移动终端把传统的 PC 市场冲击的七零八落。普通用户都知道了Windows、Android、OS X 、iOS、BlackBerry等等，但是，他们依然不了解的是另一款在计算机发展史上起到了革命性作用的操作系统：Linux！&lt;/p&gt;&lt;p&gt;当大家使用 Google 搜索时，使用 Kindle 阅读时，使用淘宝购物时，使用 QQ 聊天时，很多人并不知道，支撑这些软件和服务的，是后台成千上万台 Linux 服务器，它们时时刻刻都在进行着忙碌的运算和数据处理，确保数据信息在人、软件和硬件之间安全的流淌。可以这么说，世界上大部分软件和服务都运行在 Linux 操作系统之上，神马云计算、大数据、移动互联网，说起来风起云涌，其实没有 Linux 全得趴窝（微软除外）。&lt;/p&gt;&lt;p&gt;但是，Linux 和它的缔造者 Linus Torvalds 一样低调，这么牛逼的一个物件，居然只有程序员知道它的传奇，这不科学！所以我准备在这个系列中写写Linus Torvalds：他是 Linux 和 Git 的缔造者，他是一个传统的黑客，与沃兹一样，少年成名，崇尚自由，一生只为寻找欢笑，他，是一个真正的程序员。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;注：为了防止大家把 Linux 和 Linus 搞混，我在后面的文章中统一采用 Linus 的中文译名：李纳斯。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;李纳斯在2001年出过一本自传，叫做《Just for Fun》，是他和大卫·戴蒙合著的，当年我有幸读到这本书，了解了很多李纳斯的生平轶事，那时我就琢磨，这个天才已经达到人生的巅峰了吧，结果这位兄台并未停止前进的步伐，转手就在2005年搞出了分布式版本控制系统 Git，目前几乎全世界的程序员都在用 Git管理他们的代码，著名网站 Github 就是基于 Git 构建的。无论是 Linux 还是 Git，得一即可得天下，结果这哥们以一己之力发起了俩项目，而且都是主力开发人员。最终的结果是，成全了程序员，陶冶了用户，造福了一方百姓。正如李纳斯自己所言：「My name is Linus, and I am your God.」&lt;/p&gt;&lt;h4&gt;Linus（一）——生命的意义&lt;/h4&gt;&lt;p&gt;1969年末，李纳斯出生于芬兰的赫尔辛基市，算是赶上了60后的尾巴。小时候他是个其貌不扬的孩子，除了一个鼻子长的「富丽堂皇」之外乏善可陈。他为了让鼻子看上去小一些，经常戴上眼镜就不愿意摘下来，这个策略和现在的很多大脸女生购买三星的 Galaxy Note 手机有异曲同工之妙。幼时的李纳斯不修边幅邋里邋遢，不怎么费劲数学和物理就学得极好，社交圈却一塌糊涂，他母亲经常和别人说，这孩子非常好养，只要把他放到一个有电脑的小黑屋里，然后再往里扔点薯条和意大利面，就行了。李纳斯对此表示认同。&lt;/p&gt;&lt;p&gt;李纳斯把年幼的自己定位成 Nerd（书呆子），但是从他的自传里我却感受到了这位天才的有趣之处。他在书的前言里写到：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;我对生命的意义有种理论。我们可以在第一章里对读者解释生命的意义何在，这样就可以吸引住他们。一旦他们被吸引，并且付钱买了书，剩下的章节里我们就可以胡扯了。（注：做人要厚道啊）&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;关于生命的意义，李纳斯的解释是，有三件事具有生命的意义。它们是你生活当中所有事情的动机。第一是生存，第二是社会秩序，第三是娱乐。生活中所有的事情都是按这个顺序发展的，娱乐之后便一无所有。因此，从某种意义上来说，生活的意义就是要达到第三个阶段。你一旦达到了第三个阶段，就算成功了。但首先要越过前两个阶段。&lt;/p&gt;&lt;p&gt;为什么李纳斯会这么说呢，我摘段原文给大家看看，非常有趣：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;李纳斯：我给你举个例子来说明这一观点。最明显的是性，它开始只是一种延续生命的手段，后来变成了一种社会性的行为，比如你要结婚才能得到性。再后来，它成了一种娱乐。&lt;br&gt;&lt;br&gt;大卫：性为什么是娱乐?&lt;br&gt;&lt;br&gt;李纳斯：好吧，我是在对牛弹琴。我举一个别的例子。&lt;br&gt;&lt;br&gt;大卫：别别，还是说说性吧&lt;br&gt;&lt;br&gt;李纳斯：它是在另一个层次上的blablabla……&lt;br&gt;&lt;br&gt;大卫(自言自语)：哦，参与就是娱乐，而不是在一旁观看。好，我明白了。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;那生存、社会秩序和娱乐又是如何与技术扯上关系的呢？&lt;/p&gt;&lt;h4&gt;Linus（二）——天才也疯狂&lt;/h4&gt;&lt;p&gt;李纳斯是这么解释的，技术的诞生同样是为了人类的生存，而且是为了让人生活的更好。汽车让人跑的更快，飞机让人飞得更高，互联网让人懂得更多，手机让人通信更快，一旦这些技术成了规模，就要并入社会秩序，然后下一个阶段就是娱乐，别看手机现在就是个打电话的工具，但是很快会进入娱乐阶段……（12年后的今天，手机已经彻头彻尾变成了一个娱乐工具，打电话反而成了附属功能）。&lt;/p&gt;&lt;p&gt;李纳斯说：「一切事物都将从生存走向娱乐，但这并不意味着在某个局部地区没有倒退的现象，而且毫无疑问许多地方都有这种情况。有时事物的发展往往分裂的。」&lt;/p&gt;&lt;p&gt;从这些内容我们可以看出，李纳斯有自己的一套理论，而且能自圆其说，其实每个人都有自己的理论，一件事做或者不做，都是自己说服自己，每一次进步，要么是推翻自己的理论，要么是完善自己的理论。李纳斯在很小的时候就建立了自己的理论领地，那就是数学、物理、逻辑，最后是计算机，所以他绝不是自己描述的 Nerd，而是一个大智若愚的牛娃，就像射雕里的郭靖一样，看着傻，其实比谁都精，脑子里装的都是十年二十年后的事儿。而且李纳斯比郭靖牛的地方是，就一个启蒙老师，还是自己的外公，和郭靖一比，高下立判！李纳斯基本上就是个自学成才的典范。&lt;/p&gt;&lt;p&gt;李纳斯的外公是赫尔辛基大学的一位统计学教授，数学家。他有一台Commodore VIC-20计算机（Commodore 是与苹果公司同时期的个人电脑公司，曾经创造过一系列辉煌，1994年破产），这台电脑的主要功能就是没有功能，你唯一能做的事情就是用 Basic 语言在上面编写自己的程序，老爷子当年就是这么做的，比如做一些数学运算和公式计算等。但是老爷子年老眼花，也不愿意打字，于是就把自己的外孙李纳斯放在腿上，让他帮助录入写在纸片上的程序。这种很有场面感的场景一再出现后，李纳斯除了对数学有了初步的认识，同时也把计算机玩的娴熟，很快他就在外公的指导下开始编写自己的程序。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;评：很多大师级的人物，很小的时候就能在某个领域内头角峥嵘，展现出一些东西，然后经过长期的练习和创作，最终成为一代传奇。在这个过程里，环境是很重要的，逆境出人才基本上是个伪命题，这句话唯一的作用就是遇到困难时给自己打打鸡血。李纳斯就是个高知子弟，10岁人家就开始玩计算机了，我们10岁在干什么，打沙包么？甩方宝么？即使你在计算机方面有出众的天赋，但18岁以前连计算机的面儿都没见过，你就只能默默的牛逼了。等你真正开始展现出自己才华的时候，人家操作系统已经开发出来了，一入世就差别人十年的身位，除了冷冷的绝望，你还能感受到什么？&lt;/p&gt;&lt;p&gt;所以现在人们没事就北上广深杭，不是喜欢人多嘴杂空气差，而是在这些一线城市可以接触更多的人和事物，见更高的山，渡更宽的河。不是为了情怀，而是拥有格局。见都没见过，还同一个起跑线呢，一跑就得趴窝。所以，无论这些地方环境多恶劣，竞争多激烈，来的永远多过走的，不为别的，只是为了缓解些许绝望的感觉……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;李纳斯用外公的计算机学会了 Basic 语言，并开始编写各种简单有趣的游戏，然后他又发现了 Basic 并不是计算机唯一能理解的语言，在它的下面，还有一种语言是由0和1组成，可以直接被计算机识别，于是李纳斯又开始用机器码编程，这次他可以控制更多计算机的细节，他与机器变得更加亲密。然后李纳斯就开始上中学了，中学的几年于他而言，其实没有太大变化，因为那些年他几乎都是坐在电脑前面度过的，在这个阶段，他熟练的掌握了汇编语言。&lt;/p&gt;&lt;p&gt;终于有一天，李纳斯向编程世界挺进的步伐变得缓慢下来，因为他上大学了，原因之一是他必须集中精力读书，原因之二是找不到什么项目去做。还有一件事，李纳斯开始服兵役了，那段时光对他来说是如此特殊：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;在手执武器上了一个月的「体育课」之后，我便觉得在我有生之年完全有资格从此一动不动，享受平静的生活了。惟一可做的事情就是把编码打入键盘，或者手里端着一瓶比尔森啤酒！&lt;/p&gt;&lt;/blockquote&gt;&lt;h4&gt;Linus（三）——改变一生的书籍&lt;/h4&gt;&lt;p&gt;终于，让李纳斯痛苦不堪的兵役终于结束了，除了敲锣打鼓欢庆重生之外，他开始继续拓展自己的编程之路，这时候，生命中最重要的一本书出现了，书的名字叫做《操作系统：设计和实现》，作者是 Andrew S. Tanenbaum。用李纳斯的原话表述就是「这本书把我推上了生命的高峰」。&lt;/p&gt;&lt;p&gt;那个时代 Unix 已经开发出来了。最早 Unix 是用汇编写的，开发过程中 Unix 的两位创始人Ken Thompson 和 Dennis Ritchie觉得用汇编写程序实在是太苦逼了，男人应该对自己好一点！于是老哥俩决定用高级语言来完成下一个版本，他们首先尝试了Fortran，失败！然后又基于BCPL（Basic Combined Programming Lanugage）创建了 B 语言，B 语言可以被认为是那个时代的解释型语言，不能直接生成机器码，效率上完全没法满足系统的需求，再次失败！我们都知道，一再失败的情况下总会有一位英雄人物挺身而出，这次是 Dennis Ritchie，他从失败的大坑中爬起来拍拍土抹抹泪，继续对 B 语言进行改造。这次 Dennis 为 B 增加了数据类型，并让 B 语言能够直接编译为机器码，然后又为这门语言起了个极其响亮的名字：「New B」，读一读神清气爽，念一念气冲云霄，从此一代语言巨星冉冉升起，40年后依然排在兵器排名榜第一位，怎一个牛字了得！当然，Dennis可能考虑了十几年后中国人民的感受，把「New B」改为了 C 语言，并用 C 语言重新编写了 Unix 的内核，Unix 与 C 从此珠联璧合，长相思守，再也无法分离。&lt;/p&gt;&lt;p&gt;操作系统、Unix 和 C 语言可以说是李纳斯心目中神山上的三座圣杯，为了至高无上的荣耀，他首先要攀上峰顶，把这三座圣杯捧在手中，然后再琢磨建造自己的宫殿的事儿。在那一年的夏天，李纳斯开始了高强度的阅读和学习，用他的话说就是做了两件事，「一件事是什么都没做，另一件事是读完了719页的《操作系统：设计和执行》。那本红色的简装本教科书差不多等于睡在了我的床上」。&lt;/p&gt;&lt;p&gt;李纳斯认为，Unix 是一个简洁、干净的操作系统，在 Unix 上的大部分任务都是通过一些基本操作完成的，这些操作被成为「System Call」，顾名思义，这些操作就是你对系统的呼叫，系统通过响应你的呼叫完成工作。比如 fork、clone（创建子进程），比如 open、close、read、write（文件访问）。这些基本的系统调用通过组合可以完成大部分功能。同时，Unix 还提供了极为强大的IPC（进程间通信）方式：pipe（管道）。很多工作在GUI（图形界面）软件环境下的读者，最常用的IPC操作可能是复制、粘贴、鼠标拖拽，这些操作虽然简单，但是必须由人来完成，想要自动化就很困难。而这些在 Unix 上实现起来就像大自然一样自然，你只需要在程序之间开辟出一段缓冲区作为管道，然后父进程和子进程就可以通过这个管道实现进程间通信了。举个例子，以前给大家介绍的查找历史命令的脚本，就利用了管道的功能，如下：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;history | grep apache
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这行命令的含义就是查找包含 apache 的历史命令，其中特殊字符【 | 】用来告诉命令行解释器（Shell）将前一个命令的输出通过「管道」作为接下来的一行命令的输入，就这样，一个简单的进程间通信就完成了。&lt;/p&gt;&lt;p&gt;总之，李纳斯在读完这本书之后，就像郭靖修习了九阴真经全本一样，对机器和代码的世界有了更为透彻的认知，接下来的事情就是等待一个打造传奇的机会。&lt;/p&gt;&lt;p&gt;等待的过程中，李纳斯也没闲着，他又开始编程了。好的程序员对编程的喜爱是溢于言表的，以下摘录一些李纳斯的编程感想：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;对于喜爱编程的人来说，编程是世界上最有趣的事，比下棋有趣得多！因为你可以自己制订游戏规则，而你制定什么样的规则，也就会随之出现与此规则相符合的结果。&lt;/p&gt;&lt;p&gt;在电脑世界中，你就是创世者，你对所发生的一切拥有最终的控制。如果你功力深厚，你可以是上帝――在一个较小的层面上。&lt;/p&gt;&lt;p&gt;你可以建筑一个这样的房子，有一个活板门，既稳固又实用。但是每个人都可以看出一个仅仅以坚固实用为目的的树上小屋和一个巧妙地利用树本身特点的美妙小屋之间的差异。这是一个将艺术和工程融为一体的工作。编程与造树上小屋有相似之外……在编程中，实用的考虑往往被置于有意思、美观优雅或有震撼力的考虑之后。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;在代码的世界里，李纳斯就是一个诗人！&lt;/p&gt;&lt;h4&gt;Linus（四）——Linux 诞生&lt;/h4&gt;&lt;p&gt;Unix 始于上个世纪60年代，在70年代得到了迅猛的发展，这时候的李纳斯还躺在祖父公寓里的摇篮里睡大觉，如果不是后来 Unix 王国自乱阵脚，出现阵营分裂和法律纠纷，可能 Linux 系统根本都不会出现。真实的情况是，Unix 浪费了大把的时间和机会，似乎就是为了等待这个大鼻子、头发纷乱的芬兰小子长大，然后一决高下。李纳斯赢得了自己的时间，他一刻不停的磨练自己的技艺，在清晨的微光中练习算法，在赫尔辛基的雪山上编译代码，随时随地补充的粮草和武器。二十一年之后，李纳斯抚着雪亮的刀锋上路了，他要去追寻属于程序员的最高荣耀。&lt;/p&gt;&lt;p&gt;1991年一月，李纳斯花费了三千五百美元，分期付款购买了一台杂牌组装电脑，内存4兆，CPU 33兆赫，还有一台14英寸的显示器，然后又买了 MINIX 操作系统，用十六张软盘把这个操作系统装到了计算机里。之后，李纳斯又用了一个月的时间，了解了 MINIX 的好和不好，并把这个系统改装成了自己得心应手的「战斗机」，开始了战斗的人生。就是在这台电脑上，催生了 Linux 的初始版本。&lt;/p&gt;&lt;p&gt;Linux 的诞生离不开 MINIX，MINIX 是 Mini Unix 的缩写，是 Andy Tanenbaum 教授编写的迷你版的 Unix 操作系统，源代码可以提供给大学和学生，用于操作系统教学，采用了微内核设计。其中的代码还作为《操作系统：设计与实现》的示例程序，这本书我们在 Linus（三）中提到过，给了李纳斯极大的启发。&lt;/p&gt;&lt;p&gt;李纳斯使用了 MINIX 之后，发现这个系统有很多缺陷，比如性能问题、内核问题、文件系统问题，最大的问题是终端仿真器，也就是我之前总提到的 Terminal，登录学校里的 Unix Server 和上网时，李纳斯都需要终端，但是 MINIX 无法满足这个需求。如果普通人遇到这种问题，估计就是发会呆然后洗洗睡了，或者说「你行你上啊」，李纳斯不是普通人！&lt;/p&gt;&lt;p&gt;他决定抛开 MINIX，从硬件层面开始，重新设计一个终端仿真器。牛人就是不同凡响，这个决定表明了李纳斯需要从 BIOS、CPU等硬件层面重新开发出一套系统，除此之外，还需要了解如何把信息写入显示器，如何读取键盘输入，如何读写调制解调器，早期储备的汇编语言和 C 语言能力终于派上了用场……&lt;/p&gt;&lt;p&gt;两个月之后，终端仿真器完成，对此李纳斯非常骄傲：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;对于我了不起的成就，萨拉（妹妹）是了解的。我把终端显示给她看，她盯着显示器看了大约五秒钟，看着上面是一串A和一串B，说了声「很好」，然后就没有然后了。我意识到我的成就并不辉煌，这犹如你指给人看你铺设的一条长长的柏油马路，但想向别人解释这条马路的意义是完全不可能的。&lt;/p&gt;&lt;p&gt;当时是三月，也可能是四月，就算彼得盖坦街上的白雪已经化成了雪泥我也不知道，当然我也并不关心。大部分时间我都穿着睡衣趴在相貌平平的计算机前面噼噼啪啪的敲打键盘，窗户上的窗帘遮得严严实实，把阳光和外部世界与我隔离开来。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Linux 操作系统就这样开始了，一发不可收拾。李纳斯的当时编程状态是这样的：编程――睡觉――编程――睡觉――编程――吃饭――编程――睡觉――编程――洗澡――编程……&lt;/p&gt;&lt;p&gt;实现了终端仿真器之后，李纳斯马不停蹄，开始添加磁盘驱动和文件系统，那一年李纳斯还在上课，但是课程很简单，他唯一的课外活动就是参加每周三晚的同学聚会，这个长着大鼻子的技术天才，常常会因为担心自己缺乏社交能力和容貌丑陋而失眠，对那时的他来说，唯一有趣的事情就是把驱动程序写出来。于是他咬咬牙对自己说，还得干下去。（看来没有女神的好处就是可以写个操作系统出来，然后把自己叫做 上帝）。&lt;/p&gt;&lt;p&gt;随着工作的进展，终端仿真器正在开始向一个操作系统的方向发展，李纳斯显然也看清楚了这一点。&lt;/p&gt;&lt;p&gt;在整个创造 Linux 的过程中，我们没有看到李纳斯使用了什么样高级工具，估计那时也没有，整个系统基本上是一行行代码敲出来的，纯手工打造，这些先贤的编程功底和效率让我们叹为观止，所以，现在，我决定打开终端，输入 vi，然后键入：to be continued，感受一下李纳斯当年编程的风采……&lt;/p&gt;&lt;p&gt;随着李纳斯不断的敲击键盘，他的终端仿真程序也不停的扩张，从刚开始的小树苗长成了一株盘根错节的大树，树根牢牢的抓住土地，枝丫努力的伸向天空，花朵和果实开始在高远的天空中烁烁发光，所有的细节都在李纳斯的掌控之中。懂行的技术人员都看得出来，这个大鼻子的芬兰小子是准备开发一个操作系统啊。&lt;/p&gt;&lt;p&gt;是年6月份，李纳斯基本确定了要开发一个操作系统内核的计划，并开始着手搜集 Unix 操作系统标准的相关资料。1991年7月3日，格林威治时间上午10点钟，李纳斯在 MINIX 新闻组发出了一封求助邮件，寻求有关 Posix 标准的帮助，他在邮件中写道：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;目前我正在 MINIX 系统下做一个项目，对 POSIX 标准很感兴趣。有谁能向我提供一个机器可读的最新的 POSIX 规则？如果能有个 FTP 地址就更好了。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;这份公开的邮件是标识 Linux 问世的最早证据。邮件发出后不久，有人就寄来了厚厚的 POSIX 标准，同时赫尔辛基工学院的 Ari Lemke 也对李纳斯的邮件做出了响应，为李纳斯提供了一个 FTP 地址，用来上传他即将完成的操作系统。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;注：POSIX 全称是可移植操作系统接口（Portable Operating System Interface）。IEEE 最初制定 POSIX 标准，是为了提高 UNIX 环境下应用程序的可移植性。随着技术的发展，POSIX 开始不局限于 UNIX 系统，后续的 Linux 和 Windows NT 都部分的遵循了该标准。POSIX 在李纳斯开发的过程中起到了灯塔的作用，直接后果就是 Linux 系统从一开始就走在了正规军的康庄大道上，基本没有跑偏过。Linux 几乎可以适配各种类型的硬件体系结构。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;标准和 FTP 地址都有了眉目，李纳斯开始实现各种 System Call，以便让 Shell 运行起来。这段时间的工作让李纳斯时常感到灰心丧气，看着增加的代码量，工作似乎前进了一大步，但是检验一下功能又仿佛没有任何进展。有时候他还不得不放弃之前的想法和已经完成的代码实现，另辟蹊径重头再来，即使是在天才面前，代码也能让人欢喜让人忧。&lt;/p&gt;&lt;p&gt;终于 Shell 已经可以在新的操作系统上工作了，李纳斯开始编写拷贝（cp）和列表（ls）等程序。Shell 程序一旦完成，就好像完成了从0到1的飞跃，一切都变得无比顺利，李纳斯面前仿佛出现了一条阳关大道，一切都豁然开朗了，他说，要有光，于是就有了光。对于这种状态，李纳斯表示：「我很满意」，并且开始用「Linux」称呼这个操作系统。&lt;/p&gt;&lt;p&gt;这种满意非常重要，因为那个夏天李纳斯除了伏在电脑面前噼噼啪啪的敲击键盘，什么都没做。芬兰四月到八月的日子是一年中最美好的时光。人们到布满小岛的海上航行，去海滩上晒日光浴，到夏日小木屋中消遣时光。但是李纳斯，他只是在永无休止的编写程序，忘记了白天和黑夜，黑色的窗帘遮蔽了灿烂的阳光，也遮蔽了外面的世界。他唯一的想法就是，得赶紧把这该死的系统做出来！&lt;/p&gt;&lt;p&gt;1991年8月25日，李纳斯在MINIX 新闻组上发邮件做了一个调查，想知道大家希望这个新的操作系统具备什么特征。&lt;/p&gt;&lt;p&gt;1991年9月17日，李纳斯把已经完成的新操作系统上传到了Ari Lemke提供的 FTP 服务器上，并准备用「Freax」作为操作系统的最终代号，结果遭到了Ari Lemke的激烈反对。Ari Lemke对李纳斯说：&lt;/p&gt;&lt;p&gt;「李哥，您咋会想到用这么变态的名字命名操作系统呢？原来的Linux不挺好的嘛」&lt;br&gt;&lt;br&gt;「那样不会显得自恋么？」&lt;br&gt;&lt;br&gt;「您这样就不对了，操作系统是开天辟地的大事，人民群众都等着用您的名字命名呢，看看他们的眼神，您能辜负他们的期望吗？Linux 天生不就是用来了 Unix 遥相呼应的么？这是命，得认！」&lt;br&gt;&lt;br&gt;「这……那我就不推辞了啊」&lt;/p&gt;&lt;p&gt;以上为意译，不过基本上和古代皇帝的黄袍加身是一个意思。新的操作系统最终以「Linux」命名，并在10年后名扬天下，20年后统治服务器领域，可谓 Linux 恒久远，Linus 永流传。&lt;/p&gt;&lt;p&gt;Linux 内核0.01版本终于发布了，虽然漫长的开发过程才刚刚开始，但李纳斯终于可以松口气了：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;瞧，我真的做出了点什么。我没有在骗你们。这就是我所做的……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;创造操作系统，就是去创造一个所有应用程序赖以生存的基础环境――从根本上来说，就是在制定规则：什么可以接受，什么可以做，什么不可以做。事实上，所有的程序都是在制定规则，只不过操作系统是在制定最根本的规则。——李纳斯&lt;/p&gt;&lt;h4&gt;Linus（五）——继续前行&lt;/h4&gt;&lt;p&gt;Linux 从一诞生就被打上了开源的烙印，这一点对 Linux 的后续发展起到了至关重要的作用。从1991年内核0.01版本发布，到1994年1.0版本闪亮登场，世界各地无数的开发者为 Linux 提交了代码，李纳斯为 Linux 建立了讨论组 comp.os.linux，全世界爱好开源和 Linux 的程序员与黑客都在上面讨论问题，他们就像群蜂筑巢一样，不断的通过个体和群体的力量交替推进 Linux 的飞速发展。&lt;/p&gt;&lt;p&gt;李纳斯对自己说：嗯，没有任何东西可以阻挡 Linux 的普及！&lt;/p&gt;&lt;p&gt;这种感觉估计很多程序员都体会过，当你设计的算法得出了正确结果的时候，当你自以为解决了一个海森堡 bug（Heisenbug，表示不可重现）的时候，当你完成了一段精妙代码的时候，你摘下厚重的眼镜，推开铺满灰尘的书桌，打开办公室唯一的窗户，迎着夕阳把一只废弃的圆珠笔扔出窗外，然后冲着天空大喊：还有谁~~~？这是一种拔剑四顾心茫然的情怀。&lt;/p&gt;&lt;p&gt;李纳斯还不止于此。他不仅单枪匹马写出了 Linux 的内核，而且做出了开源的决定。他把 Linux 放到了互联网上，并且允许那些希望使用和改进它的人们根据开源协议修改和提交源代码。这两点对互联网的影响是极其深远的，估计李纳斯当年也没有想到，当时的两个小小的涟漪，经过时间和空间的放大，十几年后形成了一股互联网巨浪，到现在 Linux 依然处于风口浪尖。&lt;/p&gt;&lt;p&gt;对于 Linux 取得的成功，李纳斯将其归结为是由自己的缺点导致的：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;1、 我很懒散&lt;br&gt;2、 我喜欢授权给其他人&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;其实这两个所谓的缺点，正是优秀程序员和领导者必备的要素，它们让 Linux 成为世界上最大的开源协作项目，为喜爱 Linux 的人们带来了最美好的技术和应用，现代的互联网几乎是运行在 Linux 之上的，可以说，李纳斯改变了世界，你每一次伐开心后在淘宝上买包包，都有李纳斯贡献的力量！&lt;/p&gt;&lt;h4&gt;Linus（六）——来到硅谷&lt;/h4&gt;&lt;p&gt;1996年的春天，Linux 顺利发布了2.0版本。是年李纳斯27岁，这个芬兰小子已经慢慢厌倦了芬兰平淡无奇的日子和不眠不休的编程生活。对于一个技术天才来说，创造一套新的技术体系就像艺术家完成一个雕像一样，当一块粗砺的岩石在他的亲手打磨下逐渐显山露水，展现出其完美容颜的时候，后续的修修补补会让这些天才产生倦怠的感觉。他们需要更快的剑，更高的山和更强大的对手。尤其是期间李纳斯访问过两次美国之后，这种感觉变得愈发不可阻挡了。&lt;/p&gt;&lt;p&gt;说起来美国确实是个神奇的国度，这样一个移民国家中，居住了各种从不同国度不远万里跨海而来的种族，每个种族无论在基因上还是文化上都具有原来国家的特质，这些特质相互融合与对抗，让这块大陆上的人民更锐意进取，更开放，更自由，他们愿意去追求和接纳美好的事物，最终一不留神把美国搞成了世界文化的大熔炉，而开放的文化和环境又极大的激发了人们的想象力和创造力，近代和现代的科技成果几乎全部源于美国，要么是美国人搞的，要么是外国人在美国搞的。所以有时候我们也不用顾影自怜，嘲笑自己没有国产的操作系统和编程语言，因为其他国家也没有，或很少有，芬兰好不容易出了个天才少年，也没好好珍惜，最终落了个「流落」异国他乡的下场。&lt;/p&gt;&lt;p&gt;李纳斯一到美国就被这块新大陆吸引了，一切都是那么的新鲜和美好，他的感受与你第一次出国后在微信朋友圈发的「天是那么的蓝，云是那么的白」是一样一样的。李纳斯在自传中写道：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;我所参观的摩门教堂已有一百五十年的历史，却被照顾的很好，清洗后的教堂显示出亮丽的白色。要是在欧洲，所有的教堂都显得老旧不堪，像是蒙上了一层岁月的斑痕。看着这洁白亮丽的教堂，我脑海里产生的唯一联想竟然是迪斯尼乐园。因为它看起来太像是童话故事中的城堡，而不太是一个教堂了。&lt;/p&gt;&lt;p&gt;我记得自己徒步走过了金门大桥。在桥的这头时，我望着对岸的马林海岬，恨不得立刻就到对岸去徜徉在那美丽的群山之间。但等我真走到那边时，我几乎不愿意再挪动双腿……那时的我绝对想不到，在时隔六年以后的今天，我会坐在海风吹拂的海岬峰顶，一面俯瞰太平洋、旧金山湾、金门大桥和笼罩在雾中的旧金山城，一面对着大卫的录音机讲述着这一切。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;从美国回到芬兰之后，李纳斯对自己说，我要去美国。&lt;/p&gt;&lt;p&gt;当李纳斯透露出自己的就业计划之后，马上有多家公司递来橄榄枝，其中包括著名的 Linux 公司 Red Hat。这种感觉是如此美妙，就像你刚刚掏出一支香烟，面前已是千百个打火机舞动。但是李纳斯本着不加入任何一家 Linux 公司的原则，拒绝了 Red Hat，参加了另一个名不见经传的公司的面试，这家公司叫做 Transmeta，中译名「全美达」，你们可以从维基百科上查到这家公司，不过我打赌，知道这家公司的读者不会超过千分之一，这并不是咱们孤陋寡闻，因为美国人民刚开始也不知道这家公司在干嘛，全美达官网在1997年中上线，两年半后网站的建设情况是「This web page is not yet here」，又过了很久人们才从内部员工透露出的一点信息得知，这家公司似乎是搞处理器的。这是我所知道的唯一一家保密措施强过苹果的公司，如果不是李纳斯，这家公司就像是根本没有存在过。&lt;/p&gt;&lt;p&gt;就是这样一家公司，面试了在开源社区名满天下的技术天才、Linux 操作系统的缔造者李纳斯，并且将其招至麾下，一待就是六年。从某种程度上，这六年严重的影响了 Linux 操作系统前行的脚步，因为李纳斯没有足够的时间开发 Linux 了。&lt;/p&gt;&lt;p&gt;虽然根据 Transmeta 与李纳斯的协议，他可以继续从事 Linux 的开发，而且他确实也想这么做，比如白天为 Transmeta 工作，编写 X86 解释程序，晚上继续 Linux 的伟大事业。不过真实的情况是，晚上丫睡着了……&lt;/p&gt;&lt;p&gt;关于加班和睡眠，李纳斯是这么解释的：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;很多人都认为加班加点的工作才算真正的工作。我可不这么想。无论是 Transmeta 的工作还是 Linux 的工作，都不是靠牺牲宝贵的睡眠时间换来的。事实上，如果你想听真话，我要说，我更喜欢睡觉。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;总之，李纳斯第一次从互联网上消失了，很多悲观的开发者纷纷奔走相告，李纳斯这小子是不是被招安了？丫开始为商业公司干活了，Linux 作为自由软件是不是已经濒临死亡了？每当这时候李纳斯就会出来给大家打打气说，哥还在呢，只不过刚睡醒……&lt;/p&gt;&lt;p&gt;关于李纳斯的这段经历，曾经在硅谷工作过的一位朋友给我提供了如下文字，大意是这样的：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;每次想起李纳斯这段经历，我都要感慨万千。第一次得知李纳斯虎落硅谷的事是在2002年夏天，当地的水星报记者先是把李纳斯大吹一通，然后说他从芬兰老家搬到美国，就职于 Transmeta 已五年有余，但 H1 移民仍然停留在劳工卡初级阶段，六年期满就要打道回府了。&lt;/p&gt;&lt;p&gt;当时这份报纸的读者大概有一半人有 H1 经历，然后这一半人里的一半都知道 Linux 是啥东东，但是从未听说过 Transmeta 是何方神圣，这货居然把一代技术英雄扣在那儿为一个名不见经传的小资本家作苦力，导制全球开源事业停滞不前，真是胆大包天啊！于是很多读者跑到水星报去说，象李纳斯这样的天才愿意移民到美国，布什亲自开飞机去接都不为过，怎么可以被移民局压了五年呢balabala……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;还好，李纳斯在2003年离开了这个叫做「全美达」的公司，受聘于开放源代码开发实验室（OSDL : Open Source Development Labs, Inc），重新统领开源世界的各路英豪，全力开发 Linux 内核，Linux 再次焕发出勃勃生机，这一次，它要引领的是互联网的技术浪潮……&lt;/p&gt;&lt;h4&gt;Linus（七）——关于财富&lt;/h4&gt;&lt;p&gt;李纳斯对待财富的态度就是「视金钱为粪土」，是真的粪土。&lt;/p&gt;&lt;p&gt;那种默然的态度让人感觉非常可怕。当一个人随便动动手挂挂名签个字就能获取上千万美金的时候，他依然和自己的妻女一家人挤在圣克拉拉一栋两层楼的公寓套房里，过着一个普通程序员的生活，同时不断改进已经遍布全球的 Linux，这是什么精神？这是毫不利己专门利人的国际主义战士的精神。&lt;/p&gt;&lt;p&gt;写到这我不禁想起了绿茵场上的冰王子博格坎普，当他接到几十米外的长传，用标志性的慢速停球过掉扑上来的后卫，轻扣，过掉另一个后卫，颠球，闪过最后的防守，面对守门员的时候不是大力抽射和仰天长啸，而是把球搓出一道完美的抛物线，球越过门将，缓缓落入网窝，然后博格坎普，低着头慢慢的走开，留给对手的是优雅与实用并世无双的技艺，和令人绝望的背影！&lt;/p&gt;&lt;p&gt;默然的感觉，懂了撒？&lt;/p&gt;&lt;p&gt;很多程序员创业成功或跟随创业成功之后，自以为功成身退，最早扔掉的就是代码和编译器，然后购豪宅当天使满世界贴旅游照片，你们感受一下，这个境界是完全不可同日而语的。（请勿对号入座，如有误伤，必是友军所为）&lt;/p&gt;&lt;p&gt;事实上李纳斯在拿到第一笔真正的财富之前，一直处于日子紧巴巴的状态。当时另两位带头大哥比尔·盖茨和史蒂夫·乔布斯早已名满天下家私万贯，同时有大量的技术人员、商人和公司通过 Linux 及其相关技术获取了巨额财富，对此，李纳斯的态度是：「和我有毛关系」，他似乎对一大群才气不高的编程人员能够享受到大笔的财富并不在意。这种情况一直持续到所有的有识之士都坐不住了：李纳斯，你再也不能这样下去了！&lt;/p&gt;&lt;p&gt;伦敦的一位企业家希望李纳斯在他羽翼未丰的 Linux 公司做个董事会成员，报酬是一千万美金。李纳斯说，不用。企业家惊呆了，当他喃喃自语「卧槽你特么知道一千万美金是啥概念吗」的时候，李纳斯已默默走远。&lt;/p&gt;&lt;p&gt;Red Hat 公司为了感谢李纳斯的卓越贡献，为他提供了一些期权，李纳斯的回复同样是，不用了，我不会给你独家的授权许可的。Red Hat 的人差点疯掉：「李爷期权您就收着吧，我们什么都不要行了吧」「唔这样啊，那就放这吧」，这就是李纳斯！&lt;/p&gt;&lt;p&gt;正是这笔期权让李纳斯收获了第一笔巨额财富，因为 Red Hat 1999年8月11日在纳斯达克上市了。李纳斯先是意识到自己从身无分文突然变成了拥有五十万美元的土豪，然后是一百万，五百万，李纳斯终于变得亢奋起来，原来期权也是钱啊！终于不用再为生计发愁了，对着这个事情，李纳斯的定义是：我真是最幸运的家伙！&lt;/p&gt;&lt;p&gt;事实上李纳斯从来没有想过 Linux 能够获得如此巨大的成功。他只是为了自己方便写了一个操作系统内核并想借此获得一点回报而已，「假如我事先知道了要做到如 Linux 这般成功需要做多少基础和琐碎工作的话，那我肯定会相当沮丧的。这意味着你首先要非常优秀，并且你所做的大部分决定都导致了正确的结果。」&lt;/p&gt;&lt;p&gt;任何理智的人在登山之前凝望着高耸入云的山峰和崎岖艰险的山路时，都会陷于沮丧之中。解决办法就是先迈出第一步再说，然后，但行好事，莫问前程。&lt;/p&gt;&lt;p&gt;Linux 不仅给李纳斯带来了名声和财富，同时给大众带去了巨大的好处。年轻一代中最聪明的程序员和黑客都在使用 Linux 的产品，正是开放的 Linux 给这些天才的程序员带去了巨大的创作热情和喜悦，他们在 Linux 平台上完成了一个又一个杰出的作品，这些技术形成的生产力，对互联网的发展起到了巨大的推动作用，直到今天。&lt;/p&gt;&lt;h4&gt;Linus（八）——巨星碰撞&lt;/h4&gt;&lt;p&gt;在 Linux 出现之前，桌面操作系统的市场基本上是由比老师和乔老师控制的，虽然乔老师控制的少了一些。Linux 出现之后，桌面操作系统的格局并没有太大变化，但是服务器端市场的变化却是翻天覆地的。原本比尔希望通过 Windows NT 和 Server 系列在服务器领域复制桌面操作系统的辉煌，从而千秋万载，一统江湖。然而，世界的发展永远是多元的，没人能通过一己之力改变历史发展的多维性，比尔·盖茨也不行。于是 Linux 出现了，并以星星之火可以燎原之势一举拿下服务器操作系统的半壁江山。&lt;/p&gt;&lt;p&gt;一方是商业公司和封闭的策略，另一方是自由软件和开放的协议，这场战争一开始支持率就是一边倒的，李纳斯就像对抗风车的堂·吉诃德，但是他自己不仅没有遍体鳞伤，还在没怎么亲自出场的情况下把微软这个软件风车搞得狼狈不堪，这种情况发生在现实生活中绝对是老百姓喜闻乐见的，李纳斯成了自由软件世界里的英雄和领袖，但也就此与微软结下了世仇，比尔和李纳斯许下了永世不相见的誓言。&lt;/p&gt;&lt;p&gt;有些加盟微软的朋友告诉李纳斯，他们曾见到他的头像被钉在了微软公司的飞镖靶心上。李纳斯对此的评价是：一定是我的大鼻子太好瞄准了。&lt;/p&gt;&lt;p&gt;李纳斯与另一位业界巨头苹果之间就没这么激进了，毕竟 Linux 和 OS X 师出同门，都是从老前辈 Unix 那儿毕业的，坐在一起还能唠唠家常，事实上李纳斯和乔布斯确实有过一次历史性的会面。&lt;/p&gt;&lt;p&gt;李纳斯来到硅谷不久，就收到了一封来自乔老师秘书的邮件，邮件中写到：「听闻小李飞刀光临硅谷，蓬荜生辉，老乔不才，重回苹果，以期振昔日之雄风，如得小李相助，必将如猛虎加之羽翼而翱翔四海，天下可得。期待会面。」（当然是意译）&lt;/p&gt;&lt;p&gt;李纳斯看完之后不明白乔布斯要干什么，只是觉得很厉害的样子。毕竟李纳斯还坐在外公腿上拨弄电脑键盘的时候，苹果的沃兹已经纯手动打造出苹果的第一代个人电脑 Apple I 了。李纳斯决定去见一下儿时的偶像，并了解一下苹果的新操作系统。&lt;/p&gt;&lt;p&gt;两代科技巨星的会面被安排在苹果总部 Infinity Loop，乔布斯带着原 Next 公司技术总监 Avie Tevanian（Mach 之父）接见了李纳斯，双方进行了友好而亲切的会谈，然后会谈的结果和某国常规会谈一样，就是没有结果。&lt;/p&gt;&lt;p&gt;其时乔布斯十年放逐回归苹果，举手投足已是大宗师气势，他对李纳斯说，我大苹果虽然现在看起来有点颓，不过海盗精神永存，我们已经准备好重新起航了。目前个人电脑领域仍然只有两个玩家：微软和苹果。如果 Linux 和苹果能够珠联璧合，那一切将是最好的安排，所有的开源爱好者都能够用上优雅与极客并存的 MacLinux 了。然后 Mach 之父 Avie Tevanian 向李纳斯详细介绍了整合 Mach 和 Linux 内核作为 OS X 混合内核的计划，之后庞大的 OS X 体系将构建在 Mach 和 Linux 内核的基础之上。 同时乔老师表示，基于 Mach 和 Linux 的内核系统将采用开源的方式运作，这样全世界的开源爱好者都可以为 Mac 和 Linux 开发程序。&lt;/p&gt;&lt;p&gt;这几乎是一个完美的双赢方案，乔老师都被自己描绘的蓝图打动了，永远年轻，永远他妈的热泪盈眶！谁能拒绝苹果公司和乔布斯如此完美的邀请呢？&lt;/p&gt;&lt;p&gt;李纳斯能！&lt;/p&gt;&lt;p&gt;乔布斯认为自己的扭曲现实力场加上苹果巨大的市场潜力一定会让李纳斯怦然心动，没想到这个芬兰小子在计算机面前待久了，水米油盐不进，任凭乔布斯口吐莲花，我自巍然不动。首先李纳斯对 Mach 就不感冒，他认为 Mach 几乎犯下了所有的设计错误，它让系统变得复杂而效率低下；其次李纳斯觉得乔布斯可能没意识到，Linux 的潜在用户要比苹果系统多；第三李纳斯乐观的认为，虽然 Linux 的目标不是占领桌面操作系统，但是显然「我们很快就能做到这一点了」。所以李纳斯当时的反应是：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;为什么我要关心这些？我为什么要对苹果公司的故事感兴趣？我不觉得苹果公司里有什么有趣的事情。我的目标也不是占领什么桌面操作系统的市场。（嗯，虽然 Linux 马上就要做到这点了，但这从来就不是我的目标）&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;现在看来，李纳斯当时对 Linux 在桌面操作系统的前景过于乐观了，虽然他天纵奇才桀骜不驯，但是也无法预测到 OS X 和 iOS 在十年后引领移动开发的浪潮。不过即使知道 OS X 未来的大发展，心高气傲的李纳斯也不会接受苹果的收编，因为 Linux 一直是独立和自由的软件图腾。&lt;/p&gt;&lt;p&gt;无论如何，这次非正式的会谈没有达成任何实质性的效果，但是对后来的 IT 格局产生了巨大的影响。苹果不再关注 Linux，而是转向了 BSD。2001年苹果任命 FreeBSD 的发起人之一，老牌 BSD 黑客 Jordan Hubbard 为 BSD 技术经理，后升为 Unix 技术总监，负责 OS X 操作系统底层核心 Darwin 的研发，最终，Mach 与 BSD 技术整合在一起，形成了混合内核。另外，苹果开始觉得开源项目也不是那么靠谱，后续他们先后研发并开源了优秀的编译器项目 LLVM 和 Clang，一举替换了整条 GCC 编译链，为 OS X 和 iOS 的性能优化和语言特性提供了巨大的帮助。这也算是苹果对那些牛叉哄哄的开源人士的回击：看，我们也可以做开源，而且比你们做的好。&lt;/p&gt;&lt;p&gt;Linux 则继续在开源、独立、自由的方式下一路狂奔，虽然在桌面操作系统领域的成就乏善可陈，但是在服务器端大放异彩，目前几乎整个互联网都是运行在 Linux 及其衍生产品之上的，可以说没有 Linux，互联网不可能得到如此迅猛的发展。&lt;/p&gt;&lt;p&gt;十年以后，移动互联网时代来临。OS X 上长出了 iOS，Linux 上则诞生了 Android，这两个移动开发领域的双子星都有一个老祖宗，那就是 Unix。一次话不投机的会谈让 OS X 和 Linux 分道扬镳，在十几年后的今天，它们又以一种不同的方式相见了，世界永远都是多元的，可能冥冥中自有天意吧。&lt;/p&gt;&lt;h4&gt;Linus（九）——Linus 和 Git&lt;/h4&gt;&lt;p&gt;很多人在完成了类似 Linux 这样宏伟的软件产品之后，基本上就止步不前了。但是李纳斯却从未停歇创新的脚步。2003年加入开放源代码开发实验室之后，李纳斯重新全职投入 Linux 内核的研发，并开始酝酿自己的另一个跨时代的产品。&lt;/p&gt;&lt;p&gt;2002年，Linux 内核开发团队开始采用 BitKepper 作为代码版本管理工具。BitKeeper 是一套分布式的版本管理工具，它满足了 Linux 内核开发的技术需求。但是 BitKeeper 只是暂时对 Linux 等开源软件团队免费，并不是自由软件。2005年 BitMover 公司不再免费赞助 Linux 开发团队。对此李纳斯表示非常遗憾，但遗憾之后他并没有自怨自艾伤心落泪，而是愤怒的与其他几个小伙伴花了几个星期完成了一套新的分布式代码管理工具，命名为 Git。两个月之后，Git 发布了官方版本，并在不同的项目中应用，自由软件社区给予了 Git 广泛的支持。&lt;/p&gt;&lt;p&gt;与 SVN 和 CVS 等软件不同的是，Git 更关注文件的整体性是否有改变，Git 更像一个文件系统，它允许开发者在本地获取各种数据，而不是随时都需要连接服务器。Git 的最大的特点就是离线分布式代码管理，速度飞快，适合管理大型项目，难以置信的非线性分支管理。&lt;/p&gt;&lt;p&gt;2005年 Git 发布之后，技术日臻成熟，很多大公司都开始采用 Git 管理自己的项目代码，2008年2月 Github 公司基于 Git 构建了协作式源代码托管网站 Github，目前该网站是这个星球上最大的源代码集散地，几乎所有的优秀代码都托管在 Github 上。Git 已经成为程序员使用最多的源代码管理工具！&lt;/p&gt;&lt;p&gt;对于 Git 的成功，李纳斯表示：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Git的设计其实很简单，它有一个稳定而合理的数据结构。事实上，我强烈建议围绕着数据来设计代码，而不是反其道而行之，我觉得这可能就是 Git 如此成功的原因。&lt;br&gt;坏程序员总是担心他们的代码，而优秀的程序员则会担心数据结构和它们之间的关系。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;从 Git 诞生到今天已经有9个年头了，Git 始终没有背离其设计的初衷：高性能、简单的设计、非线性高并发分支的支持和完全的分布式。&lt;/p&gt;&lt;p&gt;对于李纳斯来说，Git 现在是他的主要消遣工具之一。他很喜欢在 Git 上编程的感觉，因为再也不用担心锁定问题、安全问题和网络问题，这种感觉真是太美妙了！&lt;/p&gt;&lt;p&gt;我们继续期待李纳斯的第三个伟大的作品！&lt;/p&gt;&lt;h4&gt;Linus（十）——生活的意义&lt;/h4&gt;&lt;p&gt;李纳斯认为生活意义的全部就在于：生存，社会交往和寻找乐趣。因为我们所做的一切事情，最终似乎都是为了我们自己的乐趣。而进化作为主线始终贯穿其中。&lt;/p&gt;&lt;p&gt;李纳斯对进化的理解是：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;「你知道在整个太阳系，人类已知的最复杂的工程是什么吗？——不是Linux，不是Solaris，也不是你的汽车。是你，还有我。想想你和我都是怎么来的——不是什么超复杂的设计，没错，凭运气。除了运气，还有：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;通过分享「源代码」实现自由的可用性和授粉机制，生物学家把它称作DNA。&lt;/li&gt;&lt;li&gt;毫不手软的用户环境把我们不好的版本轻易地替换成更好的可执行版本，从而使种群更加优秀（生物学家把这叫做「适者生存」）。&lt;/li&gt;&lt;li&gt;大量的无方向的并行开发（试错法）。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;我从未如此严肃过：我们人类永远都无法复制出比我们自身更复杂的个体，而自然选择却不假思索的做到了。不要低估适者生存的力量。不要错误地认为你可以做出比大量的平行试错反馈环更好的设计，那样就太抬举你的智力水平了。说实话，太阳照常升起，这和任何人的工程技巧或者编程风格都没有关系。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;李纳斯一生只为寻找欢笑，但是他却取得了无数的成就和荣誉：&lt;/p&gt;&lt;p&gt;1997年，在芬兰赫尔辛基大学计算机科学系，李纳斯接受了他的硕士学位。两年后，他在斯德哥尔摩大学接受名誉博士学位，并在2000年在他的母校获得了同样的荣誉。&lt;/p&gt;&lt;p&gt;1998年，李纳斯接受了电子前哨基金会先锋奖。&lt;/p&gt;&lt;p&gt;2004年，李纳斯被《时代》杂志选为世界上最有影响力的人之一。&lt;/p&gt;&lt;p&gt;2006年，《时代》杂志欧洲版评选李纳斯为过去60年最有革命性的英雄人物之一。&lt;/p&gt;&lt;p&gt;2012年4月20日，李纳斯被宣布成为两位获奖者之一，和山中伸弥共同获得当年的千禧技术奖。该奖被普遍形容为相当于在技术领域的诺贝尔奖。&lt;/p&gt;&lt;p&gt;2012年4月23日，李纳斯进入互联网协会（Internet Society，ISOC）的网络名人堂。&lt;/p&gt;&lt;p&gt;李纳斯憎恶分明，经常口不择言，比如他对 C++的评价是：C++是一门糟糕的语言。而且有一群不合格的程序员在使用C++，他们让它变得更糟糕了。他对自己的两个产品命名的解释是：我是个自大的混蛋，我所有的项目都以我的名字来命名。开始是Linux， 然后是Git（英国俚语，饭桶的意思）。&lt;/p&gt;&lt;p&gt;不过我最喜欢李纳斯说过的一句话是：Talk is cheap, Show me the code。他一直用自己的编程人生诠释着这句话。2006年的时候，Linux 内核代码的2%依然是李纳斯完成的，他是代码贡献最多的人之一（是年37岁）。到了2012年，他对内核的贡献主要是合并代码，编程变少了，但是他依然对是否将新代码并入到 Linux 内核具有最终决定权。&lt;/p&gt;&lt;p&gt;李纳斯用自己精彩的编程人生和对自由软件的热爱演绎了现代社会中一个书呆子的胜利。如果你爱一个人，就让他去编程吧；如果你恨一个人，就让他去编程吧。代码让我们欢笑，也让我们忧伤，让我们沉默，也让我们高歌。对于程序员来说，代码是这个世界上最美妙的音乐，会编程的孩子，都是好孩子！&lt;/p&gt;&lt;p&gt;本文参考资料：&lt;br&gt;&lt;/p&gt;&lt;p&gt;李纳斯自传：&lt;a href="https://link.zhihu.com/?target=http%3A//book.douban.com/subject/1451172/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;Just for Fun (豆瓣)&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.programmer.com.cn/6617/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;Mac OS X 背后的故事（二）——Linus Torvalds的短视&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;维基百科相关资料&lt;/p&gt;&lt;br&gt;&lt;p&gt;文章来自微信公众账号「MacTalk By 池建强」，未经允许，不得转载，谢谢。&lt;/p&gt;</description><pubDate>2014-07-09T10:32:53+08:00</pubDate></item><item><title>那些年，我用过的那些 App</title><link>http://zhuanlan.zhihu.com/p/19790953</link><description>&lt;p&gt;问：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;你是谁? 你的工作是？&lt;/li&gt;&lt;li&gt;你所使用的设备是？&lt;/li&gt;&lt;li&gt;你最喜欢使用的 App 有哪些？为什么？&lt;/li&gt;&lt;li&gt;什么 App 是你绝对离不开的？&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;答：&lt;/p&gt;&lt;p&gt;我很少问自己「我是谁」，因为问了之后会陷入某种虚妄而无法自拔，但是我不介意别人问。&lt;/p&gt;&lt;p&gt;我是一名70后程序员，Blogger，《MacTalk·人生元编程》作者，热爱编程与写作，坚持与梦想同行。顺便说一下，以前我的梦想是做一款很多企业使用的软件产品和出版一本书，实现这两个梦想我用了十年的时间。现在我的梦想是，做一款优秀的大众产品，当一名小说家。当我意识到这两个梦想可能会用掉我下半生所有时间的时候，我就开始跑步了……&lt;/p&gt;&lt;p&gt;平时我希望自己能够游走在城市与旷野的边缘，现实中我发现自己只能在编程与写作之间兜兜转转。目前我的主要工作是技术管理、产品设计、编程、写作和演讲，好吧，其实我就是个打杂的……&lt;/p&gt;&lt;p&gt;我希望自己能够发现和创造美好的事物，所以今天我给大家说说我最常用的那些美好的 App。&lt;/p&gt;&lt;p&gt;先说说我的设备吧，作为一个程序员，我外出常常背着一个双肩包，包里装着我的 MacBook。我把自己的 Mac 打造的像一件华丽的兵器，丰富而快捷的软件环境让我在工作和学习中游刃有余。每次拿出Mac，我就像取出关老爷手中那柄锋利无匹的大刀一样，Mac 在手，天下我有！&lt;/p&gt;&lt;p&gt;我的主力移动设备是 iPhone5，辅助设备是米3和 iPad Air，一般外出我随身都会戴上这三个家伙。使用 Android 手机主要是为了体验另一个移动生态圈的产品，iPad Air 则能够在我外出时带来长时间的续航保证和上网需求，也是我主要的电子阅读设备。&lt;/p&gt;&lt;p&gt;由于很早就开始使用 iOS 设备，我囤积了大量的 App，目前我的 iPhone5上安装了几百个 App，但能用到的也就是20%，常常用到而又喜欢用的是这20%中的20%，所以，今天我们就来聊聊这些最常用的 App。&lt;/p&gt;&lt;h4&gt;即时通讯和社交&lt;/h4&gt;&lt;p&gt;微信基本已经取代了传统的短信功能，其丰富多彩的即时通讯功能、朋友圈和微信公众平台的整合，形成了微信特有的生态环境，微信也成为了我最常用的 App 之一。微博的功能同样不可替代，虽然其功能的繁复和信息的过载让人不厌其烦，但其开放性、公共事件的快速传播功能依然是其他社交类工具不能替代的。&lt;/p&gt;&lt;p&gt;我一般会在集中的时间段阅读和处理微博和微信的信息，避免在上面消耗太多的时间。另外，微博的分组阅读是个很有用的过滤工具，你只要花费一次时间把关注者按照承载的信息分类，以后就可以轻松的进行阅读和浏览，基本上不会错失有用的数据，因为你没有在这里看到，也会在那里看到。另外，与你相关的有效数据其实并没有你想象的那么多，有时候多读一本好书远远比你长时间泡在社交工具上要有用的多。&lt;/p&gt;&lt;p&gt;知乎是我另一个常用的知识类社交工具，不过在开始运营自己的微信公众号之后，我在知乎上回答的问题越来越少了，差不多仅限于写知乎专栏和阅读。知乎是一个严肃知识类的问答网站，目前积累了大量有效的知识问答和讨论，这在中国是个了不起的成就，因为认知世界是人们永恒的追求。&lt;/p&gt;&lt;p&gt;推特是短消息社交的鼻祖，我2008年1月加入推特，并在上面认识了很多了不起的朋友，2010年左右的推特几乎是获取最新信息的唯一渠道，不过后来微博兴起，推特被封，中文圈渐渐归于平静，现在偶尔上去，也是去看看那些坚守的老朋友。访问推特我使用的 App 是 Tweetbot，比官方的好用。&lt;/p&gt;&lt;p&gt;另外，移动 QQ 也是我常用的即时通讯工具，只不过在 Mac 上使用 QQ 的时间似乎更长一些。&lt;/p&gt;&lt;h4&gt;效率办公&lt;/h4&gt;&lt;p&gt;Mailbox 重新定义了移动端的邮件处理方式，它以精微的手势和事件的方式处理邮件，UI 简洁方便，是我平时处理邮件的主要软件之一，目前 Mailbox 支持 Google 的 Gmail 和 Apple 的 iCloud Mail。我个人非常喜欢这款软件的UE 设计。&lt;/p&gt;&lt;p&gt;有了 iCloud 之后，苹果的 iWorks 办公套装就成了我的移动办公工具，由于工作性质我常常要写文档和做 Keynote，把 Mac 上完成的文档放到 iCloud 上，就可以在 iOS 设备上直接阅读和演示，非常方便。&lt;/p&gt;&lt;p&gt;另外两个写作工具是 Day One 和 Evernote，前者用来写一些正式的文章（支持 Markdown），后者主要是琐碎的记录（富文本），同时用来阅读在 Mac 上剪藏的文章。这两款软件在 iOS 上的表现甚至好于 Mac，并且都支持云同步。&lt;/p&gt;&lt;p&gt;基本上，如果你现在做的某款软件的数据居然不支持多设备和云同步，那么，你都不好意思和云端的神仙打招呼！&lt;/p&gt;&lt;h4&gt;阅读&lt;/h4&gt;&lt;p&gt;三十岁以后我戒掉了电视，除了世界杯这样的实时赛事要看一下，其他节省下来的时间都用来看书或看美剧。我在电子设备上投入时间最多的项目也是阅读。&lt;/p&gt;&lt;p&gt;常用的电子书阅读 App 有：iBooks、Kindle、多看阅读、豆瓣阅读，这些都是国内外顶级的电子书阅读 App，用户体验各有千秋，每个 App 里的电子书都堆积如山，等着我用余生来阅读。年龄日增，慢慢你会懂得，很多时候读书只是为了认知世界，而不是学有所用。&lt;/p&gt;&lt;p&gt;传统的博客阅读我依然采用 RSS 的方式，阅读器是最新版的 Reeder，这个App 我在 iOS 和 OS X 平台上各买了两次，每次都没有让我失望。&lt;/p&gt;&lt;p&gt;稍后读也是一个重度「读瘾」患者的必备良药，虽然很多文章我并不知道它们在岁月的尽头是否还能重见天日，但是我还是不屈不挠的把它们「Reat it later」了，这方面的 App 我选择了 Instapaper 和 Pocket。&lt;/p&gt;&lt;p&gt;有了这些阅读类的 App，我常常感到知识就在我身边四周流光溢彩。时光像一条深水河，知识就是水底的暗流，虽然无声无息，但是你总能感到它的流动。&lt;/p&gt;&lt;h4&gt;音乐&lt;/h4&gt;&lt;p&gt;小时候疯狂的喜欢音乐，磁带装了不知多少箱子，后来有了 iPod，终于可以自由自在的听歌了。目前除了 iOS 自带的音乐 App，我最常用的是虾米音乐和 Jing，虾米音乐的曲库非常全面，UI 也大气，另外虾米在努力解决音乐的版权问题，这一点很让人钦佩。目前花120元包年可以在虾米下载1500首歌，每首歌8分钱，我觉得这真是太值了。&lt;/p&gt;&lt;p&gt;至于 Jing，这是一款创新性的音乐 App，它的宗旨是通过信息描述来寻找自己想听的音乐。无论是 Web 端还是移动端，其精致的交互体验和发现音乐的方式都让人迷恋。我常常用 Jing 来收听在线音乐，有时候看着它的 UI，我会想起那些听唱片的日子……&lt;/p&gt;&lt;h4&gt;视频&lt;/h4&gt;&lt;p&gt;大夏天抱着 Mac 看视频还是一件挺残酷的事，如果你胆敢在看的过程中睡着了，那么闻着肚皮的糊味醒来也是可能的，所以我推荐大家用 iPad 看视频，尤其推荐用 iPad mini，这样你睡着后打脸的效果会轻一些，有时候轻巧的 mini 甚至不能把你惊醒。&lt;/p&gt;&lt;p&gt;我常用的视频 App 有 iOS 自带的视频、播客和 iTunes U，除此之外，再给大家推荐两个视频播放 App：AcePlayer 和 CineXPlayer，这两款软件基本可以播放各种类型的视频文件（avi、mkv 等），效果都不错，收费软件。&lt;/p&gt;&lt;p&gt;另外，如果你想把自己平时拍摄的视频剪辑成一个像模像样的影片，苹果的 iMovie 绝对是最佳选择！&lt;/p&gt;&lt;h4&gt;健康&lt;/h4&gt;&lt;p&gt;现代人越来越关注健康，所以健康和智能硬件相关的 App 正成为下一波创业浪潮。我常用的健康 App 有家庭用药、Nike+ Running 和空气质量指数。&lt;/p&gt;&lt;p&gt;家庭用药是国内最大的医学专业网站丁香园组织开发的一款专门面向大众家庭用户的药品信息查询工具，常用药品应有尽有，实在是居家旅行、治病救人的必备 App。&lt;/p&gt;&lt;p&gt;Nike +是一款跑步社交软件，主要用来记录我的跑步路线和配速，如果你也在跑步，那么这款 App 值得拥有。如果你没在跑步，赶紧去跑步吧。&lt;/p&gt;&lt;p&gt;空气质量指数主要用来监控所在城市的空气质量，每天都要看两眼，目前已经做到了不以雾喜不以霾悲，任她中度污染，我自风轻云淡。&lt;/p&gt;&lt;p&gt;等七月份拿到墨迹天气的空气果，估计看墨迹天气的次数会多起来吧。&lt;/p&gt;&lt;p&gt;优秀的 App 千千万，说不尽道不完，这次就写这么多吧。如果您要问我哪些 App 是绝对离不开的？我要说，MailBox、微信、微博和阅读类 App 是我每天都在用的，前者帮我连接和感知世界，后者帮我认知和改变世界。&lt;/p&gt;&lt;p&gt;每天晚上，我都要摸摸身边的手机（别担心辐射，已关），只要硬硬的还在，我就可以安心的睡了……明天又是个艳阳天！&lt;/p&gt;</description><pubDate>2014-06-30T21:35:50+08:00</pubDate></item><item><title>产品经理最重要的能力</title><link>http://zhuanlan.zhihu.com/p/19783490</link><description>&lt;p&gt;昨天晚上我的朋友邱岳在朋友圈发了一篇文章，叫做「产品经理最重要的能力」，点进去一看，不是微信文章，而是一个博客，看了域名以后我才发现，这个博客居然是他的。作为一个低调奢华有内涵的80后，拥有数十篇文章的 Blog 居然不为人知，我不禁有些黯然神伤，这博客到底有木有人看啊？&lt;/p&gt;&lt;p&gt;邱岳，又号邱二，是微信公众号「二爷鉴书」的作者，江湖人称二爷。名字虽然讨巧，但年纪尚轻，掐指一算也快三十多了，我和他因字相识，算是忘年交。&lt;/p&gt;&lt;p&gt;很久很久以前，二爷每周都会写一篇书评，我为了定期读到精彩的书评以方便自己买书，所以就推荐了他一回，后来他就开始两周更新一次了。为了鼓励二爷，我再次在自己的公众号里推荐了二爷鉴书，结果是他把频率调整为一月一更。我以为他终于找到了自己的更新周期，结果夏季来临，一个半月后他推送了最近的一期书评。好吧，我终于知道了，这可能是个阴谋。&lt;/p&gt;&lt;p&gt;总结一下，二爷鉴书的特点有三：写书评、定期不更新和不定期更新。那多久更新一篇呢？这么说吧，等待更新的时间里你可以选择：1、学习一门编程语言，2、学习一门外语，3、买一台矿机炼比特币。当你能写 App 的时候，当你学会虚拟语气的时候，当你的矿机都烧坏了一个币也没有出现的时候，拿起手机，打开微信，biu 的一声，二爷鉴书更新了，就是这样。&lt;/p&gt;&lt;p&gt;但我没想到的是，这个小伙子还有个博客，而且博客上的文字质量并不比微信上的差，范围也广，还有情书。好的文字应该有更多人看到，所以在取得作者授权的情况下，我把他最新的一篇文章转载到「MacTalk」上，以飨读者。&lt;/p&gt;&lt;p&gt;这篇文章的核心思想就是：人人都可以是产品经理，如果你想做个好的产品经理，就得不是人！&lt;/p&gt;&lt;p&gt;以下为正文：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;产品经理最重要的能力不是某一项技能，而是「让正确的事情相继发生」。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;最近发生了两件有趣的发人深省的事情。&lt;/p&gt;&lt;p&gt;第一件是上周发现我们网页上的新闻标题在不同的系统上显示长度不同。有的可以看到完整标题，有的看到少一个字。类似问题不是第一次出现，之前我隐约觉得可能是跟字体的渲染有些关系，只是让负责这条产品线的产品经理去看看。后来大概随口问了一下工程师，工程师没提原因，只是建议我们对字数控制再严格一点，避免不同环境的显示差异。这事儿也就算结了。&lt;/p&gt;&lt;p&gt;上周发现这个问题再次出现时，我突然就有点儿着急了。于是就跟着负责的同事跑到了现场去看。看了两三台机器，大概猜到了问题，回来以后把问题输入 google，一敲回车，点开看了前三条搜索结果就弄清了原委，也找到了更好的解决方案。前前后后花了不到半个小时，解决了一个之前浑浑噩噩一直没解决的问题。&lt;/p&gt;&lt;p&gt;第二件事来自于曾经就职公司的老同事，他是个大概四五年工作经验的产品经理了，聊到他的职责，他充满了愤怒，大概意思就是合作伙伴不靠谱，工程师不靠谱，老板不靠谱。他的想法不能实现，他提的项目大家不用心，他分配的任务大家不配合。&lt;/p&gt;&lt;p&gt;言外之意就是，他已经仁至义尽，但其他人没做好，这可不是他的责任。&lt;/p&gt;&lt;p&gt;这两件事情存在我心里不停的发酵，终于促使我想通了一个道理，就是对于产品经理来说，最可贵的能力不是什么沟通、写文档、分析需求。而是「让正确的事情相继发生」。&lt;/p&gt;&lt;p&gt;之前听过一句话，是这么说的：「什么是人才？人才就是给他一件事情，他完成了。再给他一件事情，他又完成了」。我当时觉得这句话蠢透了，但现在回想起来，很想给这句话点赞。&lt;/p&gt;&lt;p&gt;当我们的目标只是应付工作任务时，我们会关注职能边界和工作责任。我们做好自己的这一部分，然后等着别人完成属于他们的那一部分，当别人没有按照期望完成工作时，我们就会冷嘲热讽，觉得是他们的无能影响了目标的实现，有意无意的想「事儿成不成无所谓，只要别是我这个环节的责任就行了」。&lt;/p&gt;&lt;p&gt;然后就是推诿，找借口，装无奈，觉得自己英雄无用武之处，黄金被沙粒埋没，被无能和愚蠢的环境、同事、老板、公司制度、公司文化所扼杀。&lt;/p&gt;&lt;p&gt;相反，若我们的目标是「让事情发生」，状态就会完全不同。为了让事情发生，就得杀红眼，就得人挡杀人佛挡杀佛。&lt;/p&gt;&lt;p&gt;工程师不理解需求，我们不论是画图、写文档、做原型还是直接表演给他们看，一定要弄到他们理解需求为止；合作伙伴不配合，我们不论是威逼还是利诱，拍桌子红脸还是跪在地下磕响头，一定要弄到他们配合为止；老板不支持，那我们就用最小的代价和完整的逻辑证明你的观点，说服他，没日没夜地说服他，厕所里堵住他说服他，电梯里拖住他说服他，满地打滚，以头抢地，把刀架在自己脖子上说服他；自己团队的同事解决不了的技术或者业务问题，不论是买书自学还是彻夜查资料还是找到其他行业大牛在他楼下跪一夜，一直到想办法找到解决方案为止。&lt;/p&gt;&lt;p&gt;别管什么边界，也别管什么权利——没权利就建立影响力，连影响力也没有就抱着别人的大腿哭着求，如果又不懂得建立影响力，又跪不下去，就别当产品经理了。另外也别太在意和谐，如果目标是让正确的事情发生，那么其他人怎么看待我们，觉得我们是不是傻逼根本就不重要。更别在意不公平，想要做成事，受点委屈太正常了，不要一天到晚苦大仇深，啜泣叹息了。&lt;/p&gt;&lt;p&gt;「让正确的事情相继发生」是唯一的标准，用结果说话，过程中吃了多少苦根本不重要。深夜拧亮台灯披上衣服离开熟睡的姑娘，清晨开门回家冲进浴室拿出钳子和针线咬着牙不哼一声取出身体里的弹头，缝合身上的伤口，换上干净衣服。姑娘睁开惺忪的睡眼问你昨晚还顺利吗？你满脸笑容轻轻告诉她，还挺顺利的。&lt;/p&gt;&lt;p&gt;这句话里的另外两个修饰词，一个是「正确」，一个是「相继」。&lt;/p&gt;&lt;p&gt;「正确」关乎于自省，能通过自我拷问或其他人的挑战不断修正和完善方案和路线。我参加过无数场评审，评审中的产品经理有两种，一种抵制别人的挑战，或奋起反抗，或冷嘲热讽，另一种热切的期望别人的挑战，甚至加入到对方的阵营中一起挑战自己，完善自己的想法，避免潜在的风险。&lt;/p&gt;&lt;p&gt;你猜哪种产品经理后来更牛逼？好的产品经理知错就改，烂的产品经理将错就错，烂到爆的产品经理永远认为自己没错。&lt;/p&gt;&lt;p&gt;而「相继」指的是按部就班的能力，刻画美好未来谁都会，凭空捏造一个完美设计的系统也没什么难的。优秀的产品经理能拿住当前的烂摊子，最大限度的利用团队有限的资源和能力，一步一步向着最终的目标前进。&lt;/p&gt;&lt;p&gt;我曾经有幸有机会旁听过一个高级项目的会议，会上公司的大老板说「你们这些产品经理最喜欢拆掉旧房子，去盖新房子，但事情是不能这么做的」。当时我心里并不服气，三年过去，回头想想，深以为然。如果一个美好的未来没有脚踏实地的路线，没有由近及远的计划，那就等于什么都没有。&lt;/p&gt;&lt;p&gt;回头反省文章开头的两件事情，作为产品经理都只是想「完成自己的任务」，觉得剩下的事情不是我们的事儿了，而是别人的责任。最终不但自己失败，整个团队也失败了。遗憾的是，任何一个产品团队的失败，只有一个罪魁祸首，就是产品经理。有句老话叫做：「成功是团队的成功，失败是产品经理的失败」，大是特是。&lt;/p&gt;&lt;p&gt;「让正确的事情相继发生」，就是产品经理的全部工作，如果在这个过程中需要懂技术，就去学技术，需要懂交互，就去学交互，需要懂画图，就去学画图，需要懂公开演讲，就去学公开演讲，需要懂 XX，就去学 XX。团队中，谁都可以说这不是我的职责范围，只有产品经理不行。&lt;/p&gt;&lt;p&gt;觉得冤枉、憋屈、不公平？抓紧时间，赶紧转行。&lt;/p&gt;&lt;p&gt;点击链接，阅读邱岳的博客：「&lt;a href="https://link.zhihu.com/?target=http%3A//qiuyuexp.com/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;Hi 冒菜: by qiuyuexp&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;」。如果你足够细心的话，还能找到二爷当年笨手笨脚写的一封情书，写得真好，字斟句酌，情真意切，是我见过最价廉物美的生日礼物，如果再加点花椒大料，世上最肉麻的情书将不做他想。下次你们家领导过生日不知道送什么的时候，好好读读这篇文章就行了，转载记得署名，署自己的名。&lt;/p&gt;&lt;p&gt;博客阅读，RSS 是最好的方式，但是你在「冒菜」的页面上是找不到 rss 或 feed 的，我尝试着在网址后面加了 feed，然后回车，居然订阅成功了（&lt;a href="https://link.zhihu.com/?target=http%3A//qiuyuexp.com/feed/" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;qiuyuexp.com/feed/&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; ），于是我再一次原谅了二爷，因为他是一个产品经理。&lt;/p&gt;</description><pubDate>2014-06-20T21:33:23+08:00</pubDate></item><item><title>苹果新贵 Swift 之前世今生</title><link>http://zhuanlan.zhihu.com/p/19774942</link><description>&lt;p&gt;上周出差劳顿，这篇文章几次动笔都未完成，常常躺倒床上就昏睡过去。南方的天气闷热潮湿，让我感到极度的不适应，等到回到北方，天高云清，空气干爽，让人产生一种「解放区的天是明朗的天」的感觉，我甚至觉得自己的手机、Pad 和 Mac 都满血复活了……直到有人提醒说它们是因为充电和网速的原因。好吧，南方酒店的网络还真叫慢啊……&lt;/p&gt;&lt;p&gt;以下是正文：&lt;/p&gt;&lt;p&gt;2010年的夏天，Chris Lattner 接到了一个不同寻常的任务：为 OS X 和 iOS 平台开发下一代新的编程语言。那时候乔布斯还在以带病之身掌控着庞大的苹果帝国，他是否参与了这个研发计划，我们不得而知，不过我想他至少应该知道此事，因为这个计划是高度机密的，只有极少数人知道，最初的执行者也只有一个人，那就是 Chris Lattner。&lt;/p&gt;&lt;p&gt;从2010年的7月起，克里斯（Chris）就开始了无休止的思考、设计、编程和调试，他用了近一年的时间实现了大部分基础语言结构，之后另一些语言专家加入进来持续改进。到了2013年，该项目成为了苹果开发工具组的重中之重，克里斯带领着他的团队逐步完成了一门全新语言的语法设计、编译器、运行时、框架、IDE 和文档等相关工作，并在2014年的 WWDC 大会上首次登台亮相便震惊了世界，这门语言的名字叫做：「Swift」。&lt;/p&gt;&lt;p&gt;根据克里斯个人博客（&lt;a href="https://link.zhihu.com/?target=http%3A//nondot.org/sabre/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;Chris Lattner's Homepage&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; ）对 Swift 的描述，这门语言几乎是他凭借一己之力完成的。这位著名的70后程序员同时还是 LLVM 项目的主要发起人与作者之一、Clang 编译器的作者，可以说 Swift 语言和克里斯之前的软件作品有着千丝万缕的联系。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;同样是70后程序员，差别怎么那么大呢？&lt;/p&gt;&lt;/blockquote&gt;&lt;h4&gt;关于作者&lt;/h4&gt;&lt;p&gt;克里斯可以说是天才少年和好学生的代名词，他在2000年本科毕业之后，继续攻读计算机硕士和博士。但克里斯并不是宅男，学习之余他手捧「龙书」游历世界，成为德智体美劳全面发展的好学生。之后就是一篇又一篇的发表论文，硕士毕业论文即提出了一套完整的运行时编译思想，奠定了 LLVM 的发展基础，读博期间 LLVM 编译框架在他的领导下得到了长足的发展，已经可以基于 GCC 前端编译器的语义分析结果进行编译优化和代码生成，所以克里斯在2005年毕业的时候已经是业界知名的编译器专家了。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;注：很多计算机专业的大学生经常问我在大学里学点什么好，看看克里斯就行了。以目前的科技信息开放程度，如果你在自己感兴趣的领域里用心耕耘，再加上那么一点点天分，毕业时成为某一个专有领域的专家应该不是问题。那时就不是你满世界去找工作了，而是工作满世界来找你！&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;克里斯毕业的时候正是苹果为了编译器焦头烂额的时候，因为苹果之前的软件产品都依赖于整条 GCC 编译链，而开源界的这帮大爷并不买苹果的帐，他们不愿意专门为了苹果公司的要求优化和改进 GCC 代码，所以苹果一怒之下将编译器后端直接替换为 LLVM，并且把克里斯招入麾下。克里斯进入了苹果之后如鱼得水，不仅大幅度优化和改进 LLVM 以适应 Objective-C 的语法变革和性能要求，同时发起了 CLang 项目，旨在全面替换 GCC。这个目标目前已经实现了，从 OS X10.9和 XCode 5开始，LLVM+GCC 已经被替换成了 LLVM+Clang。&lt;/p&gt;&lt;p&gt;Swift 是克里斯在 LLVM 和 Clang 之后第三个伟大的项目！&lt;/p&gt;&lt;h4&gt;关于语言&lt;/h4&gt;&lt;p&gt;2007年之前，Objective-C 一直是苹果自家院落的小众语言，但是 iOS 移动设备的爆发让这门语言的普及率获得了火箭一般的蹿升速度，截止到今天，Objective-C 在编程语言排行榜上排名第三，江湖人称三哥，大哥二哥分别是 C 和 Java 这样的老牌语言。同时，苹果在2012年和2013年分别对 Objective-C 进行了大规模的优化和升级改进，增加了各种现代语言的特性，让编写 App 更加容易，更多的程序员投入到了 App Store 的生态圈里……&lt;/p&gt;&lt;p&gt;在这种情况下，苹果公司为什么会发布一门新语言呢？&lt;/p&gt;&lt;p&gt;这个问题没有标准答案，不过我们可以试着去分析一下，谈谈苹果的心路历程……&lt;/p&gt;&lt;p&gt;Objective-C 是80年代初 Brad Cox 和 Tom Love 发明的，1988年乔布斯的 Next 公司获得了这门编程语言语言的授权，并开发出了Objective-C 的语言库和NEXTSTEP的开发环境。后来 Next 被苹果收购，Objective-C 阴差阳错成了苹果的当家语言。掐指一算，三十年倏忽而过，OC 也成长为爷爷辈儿的编程语言了。&lt;/p&gt;&lt;p&gt;为了伺候好这位「爷爷」，苹果煞费苦心，把 GCC 的编译链先替换成 LLVM +GCC，又替换成 LLVM+Clang，做语法简化、自动引用计数、增加 Blocks 和 GCD 多线程异步处理技术……终于，OC 在30年后重新焕发出勃勃生机，并占据了兵器谱排名第三的位置。但是，苹果却有点烦了，OC 改进了这么多年，怎么看都像是在修修补补，用 Blocks 去实现一个类似 Python 的 lambda 闭包功能，看起来总是那么别扭。好吧，既然已经全盘掌握了 LLVM 和 Clang，为什么我们不去基于现在的编译器设计一门全新的语言呢？一门属于苹果的语言！你看，邻居谷歌家里叫做 Go 的孩子不是玩耍正酣么？&lt;/p&gt;&lt;p&gt;于是 Swift 诞生了……&lt;/p&gt;&lt;p&gt;当然，事实的真相也可能是行动缓慢的乔老爷子把克里斯拉到一边说：&lt;/p&gt;&lt;p&gt;「I want to be swift to……」&lt;/p&gt;&lt;p&gt;「 行了，您别说了，不就是想要 swift 吗，我这就给您做一个去」&lt;/p&gt;&lt;p&gt;于是 Swift 诞生了……&lt;/p&gt;&lt;h4&gt;语法&lt;/h4&gt;&lt;p&gt;Swift 是一门博采众长的现代语言，在设计的过程中，克里斯参考了Objective-C，Rust，Haskell，Ruby，Python，C#等优秀语言的特点，最终形成了目前 Swift 的语法特性。我在阅读了官方教程和做了些代码实验之后，自我感觉会喜欢上这门语言，在这里简单谈点感想，更深入的内容需要你们自己去深入学习。&lt;/p&gt;&lt;p&gt;1、Swift 是面向 Cocoa 和 Cocoa Touch 的编程语言，编译型语言，生产环境的代码都需要 LLVM 编译成本地代码才能执行，但是Swift又具备很多动态语言的语法特性和交互方式。&lt;/p&gt;&lt;p&gt;2、Swift 是一门类型安全的语言，可以帮助开发者清楚的掌控代码片段中的值类型。如果你期望输入的是字符串，类型安全的特性会阻止开发者错误地为其传递一个整数。这一切使得开发者能够更早的发现和修复错误。&lt;/p&gt;&lt;p&gt;3、支持各种高级语言特性，包括闭包、泛型、面向对象、多返回值、类型接口、元组、集合等。&lt;/p&gt;&lt;p&gt;4、Swift 能与 Objective-C 进行混合编程，但代码分属不同的文件。&lt;/p&gt;&lt;p&gt;5、全面的Unicode支持，你甚至可以用一只 作为变量名，实现以下操作：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;let 狗 = "大狗菠萝"
for n in 狗 {
    println( n )
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;控制台会输出「大狗菠萝」四个字。&lt;/p&gt;&lt;p&gt;6、编程语句取消了大部分语言使用的「;」分隔符，只有一行写多条语句时才需要分号。&lt;/p&gt;&lt;p&gt;7、很多人简单阅读了 Swift 的数据类型，就认为 Swift 没有类似 Set、List 这样的数据结构，其实Swift 提供了两种 Collection 的数据类型：数组（Array）和字典（Dictionary），两个数据类型的表达式都用中括号标识。其中数组可以存储任意类型的变量，也可以强制声明存储同一种类型的变量。同时数组提供了类似 Set 功能，你可以修改、追加、替换和删除数据的元素。另外，Swift 还提供了元组（Tuple）的功能支持函数多返回值。&lt;/p&gt;&lt;p&gt;8、Swift 没有提供显式的指针，参数传递根据数据类型的不同分为值类型和引用类型，值传递进行内存拷贝，引用传递最终传递的是一个指向原有对象的指针。这一点和 Java 的参数传递是类似的。需要注意的一点是，Swift 里的数组和字典虽然都是结构体（struct），但在参数传递过程中处理方式却不一样，默认 Array 是引用传递，Dictionary 是值传递。而在 Java 中，由于数组和 Map 都是对象，所以传递的都是指针。&lt;/p&gt;&lt;p&gt;在 Swift 中，如果你不想传递数组引用，可以用 copy() 方法先复制一份出来，另外，也可以用 unshare() 表示，本变量不传递指针。&lt;/p&gt;&lt;p&gt;9、闭包，Swift 终于提供了一种优雅的闭包解决方案，比如在排序函数 sort 中进行函数传递：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;let names = ["D", "B", "R", "C", "A"]
func backwards(s1: String, s2: String) -&amp;gt; Bool {
    return s1 &amp;gt; s2
}
var rnames = sort(names, backwards)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;事实上更简单的写法是：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;var rnames = sort( ["D", "B", "R", "C", "A"] ) { $0 &amp;gt; $1 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;10、可选变量（Optional）的引入主要是为了应对一个变量可能存在也可能是 nil 的情况，这种情况在很多高级语言里都存在。比如你想使用String的toInt方法将String转化为 Int 类型，但是你并不知道这个转化是否正常，这时候系统会返回一个可选变量，如果转换成功就返回正常值，转换失败就返回 nil，如下：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;let str = "123A"
let nn = str.toInt()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这是 nn 就是可选变量，想得到 nn 的值，可以通过 if 进行判断并通过追加感叹号获取变量值，如下：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;if nn {
    println(nn!)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可选变量的引入解决了大部分需要显式处理的异常，这部分工作也扔给编译器去做了。想了解更多可选变量的用法，请阅读苹果的官方文档。&lt;/p&gt;&lt;p&gt;11、Swift 中的 nil 和 Objective-C 中的 nil 不同。在 Objective-C 中，nil 是指向不存在对象的指针，而在 Swift 里，nil 不是指针，它表示特定类型的值不存在。所有类型的可选值都可以被设置为nil，不仅仅是对象类型。&lt;/p&gt;&lt;p&gt;12、Swift 没有从语言层面支持异步和多核，不过可以直接在 Swift 中复用 GCD 的 API 实现异步功能。另外没看到 Swift 的异常处理机制，可能有了可选变量，异常的使用会非常少吧。&lt;/p&gt;&lt;p&gt;关于语法相关的内容，先写这么几点吧。&lt;/p&gt;&lt;p&gt;给大家推荐一篇王巍 (@onevcat)写的「行走于 Swift 的世界中」，深入阅读必有收获。&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//onevcat.com/2014/06/walk-in-swift/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;行走于 Swift 的世界中&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;基本上，Swift 绝对不是玩具语言，而是一门可以被大众接受的工业级编程语言。相信假以时日，Swift 必将在 App 开发领域大放异彩。&lt;/p&gt;&lt;h4&gt;性能&lt;/h4&gt;&lt;p&gt;Swift 在 WWDC 上展示出来的性能还是让人非常吃惊的，在进行复杂对象排序时，OC 的性能是 Python 的2.8倍，Swift 是 Python 的3.9倍；在实现 RC4加密算法的时候，OC 的性能是 Python 的127倍，Swift 是 Python 的220倍。总之 Python 在某一个深坑里膝盖中箭了，OC 也没好到哪去，而 Swift，就是快啊就是快！&lt;/p&gt;&lt;p&gt;对于这一点我并不是很理解，首先是 WWDC 上展示的语言层面的基准测试过于简单了，另外，OC 和 Swift 都是被 LLVM 编译成本地代码执行的，理论上针对 Swift 的优化同样可以应用于 OC，但是 Swift 居然比 OC 快那么一点点，难道 LLVM 单独针对 Swift 做了优化么？我表示不明觉厉。&lt;/p&gt;&lt;p&gt;当然，还有更较真的程序员，他在第一时间针对于循环、递增、数组、字符串拼接等功能进行了测试，发现 Swift 的性能比 OC 还是差那么一点点的（&lt;a href="https://link.zhihu.com/?target=http%3A//www.splasmata.com/%3Fp%3D2798" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;Swift? | Splasmata&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; ）。&lt;/p&gt;&lt;p&gt;无论这些测试数据是否准确，我觉得性能是我们最不需要担心的问题，苹果已经全盘掌握了这个语言的方方面面，从底层编译框架到编译器再到语言设计，优化之路才刚刚开始，我们只要给这门新语言一点耐心就可以了。&lt;/p&gt;&lt;h4&gt;所码即所得（Playground）&lt;/h4&gt;&lt;img src="https://pic2.zhimg.com/df365ee04fee4a79a3ebc854fd31bc55_b.jpg" data-rawwidth="1024" data-rawheight="582" class="origin_image zh-lightbox-thumb" width="1024" data-original="https://pic2.zhimg.com/df365ee04fee4a79a3ebc854fd31bc55_r.jpg"&gt;&lt;p&gt;对于开发者来说，Playground 是本次 WWDC 最大的亮点。能够在编码的同时实时预览输出结果是每个开发人员的梦想，这一次苹果为大家提供了这样的福利。&lt;/p&gt;&lt;p&gt;Playground 不仅实现了很多脚本语言支持的交互式编程，而且提供控制台输出、实时图形图像、时间线（timeline）变量跟踪等功能，开发者除了可以看到代码的实时运行结果，还能根据时间线阅读某个变量在代码片段中值的变化。这真是太棒了！&lt;/p&gt;&lt;p&gt;最初看到这个功能的时候我甚至以为每个 Swift 文件都可以基于 Playground 进行实时编码预览，仔细阅读文档后发现，只能在 XCode 提供的 Playground 文件中实现以上功能。看来 Playground 顾名思义，目前还只是为开发者提供了一个玩耍代码的地方。&lt;/p&gt;&lt;p&gt;当然不仅仅是玩耍，我们可以基于 Playground 做这些事情：&lt;/p&gt;&lt;p&gt;1、学习：通过 Playground 学习 Swift，制作 Swift 教程实现交互式学习，同时还可以培训其他初学者。&lt;/p&gt;&lt;p&gt;2、代码开发：执行算法程序，迅速看到算法结果，跟踪变量；执行绘图程序，即时看到图像结果，及时调整。执行通用代码，查看变量的改变情况。&lt;/p&gt;&lt;p&gt;3、实验性代码：无需创建项目，直接打开一个独立的Playground文件即可编写代码，尝试调用新的 API。&lt;/p&gt;&lt;p&gt;对于 Playground，设计者克里斯是这样描述的：Playground 功能倾注了我个人很多心血和激情，我希望新的编程语言具备更好交互性，更友好和有趣……我们希望通过这门语言重新定义「如何教授计算机科学！」&lt;/p&gt;&lt;h4&gt;开始使用 Swift&lt;/h4&gt;&lt;p&gt;作为一门新语言，Swift 定位非常明确，就是吸引更多的开发者加入苹果的软件生态圈，为 iOS 和 OS X 开发出更为丰富的 App，如果你是 App Store 的开发者，推荐尽早学习和掌握这门苹果力推的新语言。对于大部分新事物来说，越早介入，获利越多。如果你是一名 Web 相关的开发者，与其等待 Swift 增加 Web 开发的相关特性，还不如去学习一下 Go 语言 Web 编程。&lt;/p&gt;&lt;p&gt;如何开始 Swift 呢？&lt;/p&gt;&lt;p&gt;1、下载 Xcode6-Beta 版本。&lt;/p&gt;&lt;p&gt;2、下载苹果官方提供 Swift 编程语言电子书（&lt;a href="https://link.zhihu.com/?target=https%3A//itunes.apple.com/cn/book/swift-programming-language/id881256329%3Fmt%3D11" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;https://&lt;/span&gt;&lt;span class="visible"&gt;itunes.apple.com/cn/boo&lt;/span&gt;&lt;span class="invisible"&gt;k/swift-programming-language/id881256329?mt=11&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; ），中文版本：&lt;a href="https://link.zhihu.com/?target=http%3A//yuedu.baidu.com/ebook/6f6c3b1ef01dc281e43af000" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;Swift编程入门&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; 。读。&lt;/p&gt;&lt;p&gt;3、下载 WWDC Swift 的 Session 视频和PDF。看。&lt;/p&gt;&lt;p&gt;4、基于 Xcode6创建 Swfit 语言的项目，在项目中创建Playground，在其中调试玩耍。&lt;/p&gt;&lt;p&gt;5、根据官方提供的 GuidedTour.playground 学习 Swift 语法特性。下载地址：&lt;a href="https://link.zhihu.com/?target=https%3A//developer.apple.com/library/prerelease/ios/documentation/swift/conceptual/swift_programming_language/GuidedTour.playground.zip" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;https://&lt;/span&gt;&lt;span class="visible"&gt;developer.apple.com/lib&lt;/span&gt;&lt;span class="invisible"&gt;rary/prerelease/ios/documentation/swift/conceptual/swift_programming_language/GuidedTour.playground.zip&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;6、熟悉了基本的语法特性、与 OC 的混用、与 Cocoa 和 Cocoa Touch的交互、调试等功能之后，就可以构建你的第一个Swift App 了。&lt;/p&gt;&lt;p&gt;可以说 Swift 是我所见过关注度最高的新语言，一经推出即万众瞩目，媒体和开发者在数天之内对 Swift 进行了长篇累牍的报道和讨论，英文手册迅速被翻译成中文，即使是江湖上的另一位大佬谷歌 2009 年推出 Go 语言时也没有如此浩大的声势。当然，这和 Go 语言的定位有关，作为一门系统级的服务器端语言，开发者的可选余地太大了，如果谷歌推出 Go 是用来取代 Java 开发 Android App，那可能情况就完全不一样了。&lt;/p&gt;&lt;p&gt;经过 WWDC2014，苹果已经完全体现出了一个软件公司的创新能力和技术底蕴，无论是操作系统，编程语言，还是应用开发，苹果都已经准备好了，凝神静气，蓄势待发。作为开发者，我们要做的就是：Write the code, Change the world，然后期待下一个收获的季节！&lt;/p&gt;</description><pubDate>2014-06-10T22:01:33+08:00</pubDate></item><item><title>别闹，我们是一家软件公司（中）</title><link>http://zhuanlan.zhihu.com/p/19771526</link><description>&lt;p&gt;上一篇文章谈了些关于 OS X 10.10 的感受，今天接着说说 iOS 8。&lt;/p&gt;&lt;p&gt;由于 iOS 的 UI 已经在上一个版本中进行了全新的设计，这次 iOS 8 的重点是功能的增强和完善，同时支持与 OS X 的功能连接和融合。具体的改进体现在消息、多任务、通知中心、邮件、搜索、输入法、照相等功能上，详细介绍就不罗列了，我同样说说自己的几点感受：&lt;/p&gt;&lt;p&gt;1、拿到升级后的 iOS 8，不仔细看根本看不出这是 iOS 8，其实仔细看也看不出，除非你去使用上文中提到某些功能。&lt;/p&gt;&lt;p&gt;2、iMessage 基本上被改造成了没有朋友圈和微信公众帐号的微信，但是微信并不用担心什么。iMessage 虽然用户基数不小，但仍然局限在苹果自身的生态圈内，微信则通吃 iOS 和 Android。除非苹果像个蛇精病一样做一个 Android 版本的 iMessage，才有可能动摇微信在即时通讯领域的一哥地位，况且微信还有成名绝技「公众号」和「朋友圈」，怕个鸟。&lt;/p&gt;&lt;p&gt;3、邮件增加了更多的多手势操作，我谨慎的认为这是苹果团队对 MailBox 的抄袭行为，iCloud Drive 和邮件的改进可能是苹果对 Dropbox 收购Mailbox 的报复行为，从这一点看，苹果也是个小心眼。&lt;/p&gt;&lt;p&gt;4、在锁屏的情况下快速回复短信和其他社交通知是个好功能，可能手机落入恶人之手怎么办？我怎么知道我在和手机的主人聊天呢？总之大家不要丢手机就好了。&lt;/p&gt;&lt;p&gt;5、iOS 8上的 Spotlight 同样出色，除了本地搜索，还可以搜索新闻、位置、App 和歌曲等信息。不要告诉我你还在用2G 网络好么？&lt;/p&gt;&lt;p&gt;6、输入法的 QuickType 和滑动输入会让打字更快，开放第三方输入法则让很多人欣喜若狂，但她们却不是我的心动女生，因为我现在已经可以在 iOS 设备的全键盘上像风一样打字，如果风大一点，就能追上 Mac 的速度。另外我也不觉得开放第三方输入法之后，很多人就不会越狱了。相信我，他们会找到其他理由的……&lt;/p&gt;&lt;p&gt;7、Family Sharing很棒，书籍、应用、音乐、电影的共享让人感慨省下来的钱又可以多买一个肯德基全家桶了，也很方便。但是照片、日历的共享就让人充满了「老大哥」的恐惧，以后女读者发来晒书图怎么办呢？最好还是做成有选择的共享，嗯。&lt;/p&gt;&lt;p&gt;8、由于我国 iPhone 用户量与日俱增和 MacTalk 的茁壮成长，库克终于坐不住了，这次 iOS 8针对中国的本地化服务做了优化，我们可能会用上更好的地图、导航、农历和天气预报等服务，我仅表示欣慰。&lt;/p&gt;&lt;p&gt;9、期待已久的 iPad 多任务功能并没有出现，我很伤心。这里的多任务指在 iPad 的屏幕上同时显示 Safari 和 Evernote，两个 App 还可以通过某种方式进行互操作。&lt;/p&gt;&lt;p&gt;10、融合后的 OS X 和 iOS 会让更多的移动设备用户去采购一台 Mac，这也许就是库克大爷的阳谋吧。当然，有读者说这样会带来《MacTalk·人生元编程》的销量猛增，我对于这位读者幼稚的预测表示了鼓励和谨慎的乐观。&lt;/p&gt;&lt;p&gt;关于 iOS 8居然写了十条感受，看起来真的是很厉害的样子。但是，最好的永远留在最后，这次 WWDC 留给大家最大的惊喜就是开放和开发！下面我们进入第三个环节：Developer，世界终究还是属于我们的。&lt;/p&gt;&lt;p&gt;有节制的开放是苹果一直以来的选择和策略，但是在2014年，苹果终于慷慨了一回，不仅开放了各种 Kit 和4000多个 API，而且借着加利福尼亚库比蒂诺的暮色掩护，利用4年时间偷偷打造了一款全新的编程语言，并在2014年6月2日悍然发布，让全世界为之侧目（其实主要是程序员侧目，因为一部分在哭，一部分在笑，所以不好意思对视了）。&lt;/p&gt;&lt;p&gt;这次苹果开放的内容包括：Touch ID、PhotoKit、Camera API、HealthKit、HomeKit、CloudKit、SpriteKit、SceneKit、Metal等，每种类型的 API 都能够在苹果的官网上找到相关内容，相信在不久的将来，无所不能的程序员们就会利用这些或丑陋、或优雅、或强悍的 API 做出各种匪夷所思的移动应用，Write the code，Change the world，这一点几乎是不需要质疑的。&lt;/p&gt;&lt;p&gt;对于 iOS 开发者来说，App Store 还增加了几个重要的功能，一个就是 App Bundle，开发者可以将多个 App 打包销售，售价比单独购买每个 App 优惠很多，这一点对开发者和 App 用户都是利好消息。另外，苹果终于把收购的 TestFlight 整合进入 App Store 的后台，开发者可以在发布之前更好的测试软件，收集统计信息，实现「The freedom to build better apps」的梦想。最后，App 的产品展示页面终于可以上传视频啦……但是做到这一点真的很难吗？因为 Android 平台很早就有这个功能了……&lt;/p&gt;&lt;p&gt;当然，再一次，不要在乎这些细节，真正革命性的技术成果还没有这个文章系列中出场。苹果把自家公司之外的所有程序员（之内的估计也瞒了不少，这事苹果干的出来）瞒在鼓里，欺骗了全世界，也瞒住了我！这门革新性的编程语言「Swift」，将在下一篇登台亮相。&lt;/p&gt;&lt;p&gt;待续……&lt;/p&gt;</description><pubDate>2014-06-06T20:12:28+08:00</pubDate></item><item><title>别闹，我们是一家软件公司（上）</title><link>http://zhuanlan.zhihu.com/p/19768811</link><description>&lt;p&gt;去年为 WWDC 写的文章「不要，在乎，这些，细节」还历历在目，如今春去夏来，今年的 WWDC 主题演讲也结束了。今天各种媒体和社交媒体上充斥了 WWDC 的相关内容，对于这种热点新闻，我一般是不写东西的。不过微信后台涌入了大量留言，让 Mac 君还是为 WWDC 说点什么吧，否则怎么能叫 MacTalk 呢……&lt;/p&gt;&lt;p&gt;群众的呼声总是让人感到一种令人愉悦的忧伤，因为你会因为这些声音改变一些什么，于是就有了这篇文章。按照惯例，我只写一些自己的想法，想看详细特性的，直接去苹果的官网就好。&lt;/p&gt;&lt;p&gt;WWDC 是在今天凌晨1点开幕的，昨晚我犹豫了一下，还是决定看直播。决定了之后我就想，为什么会犹豫一下？估计是因为又老了一岁吧。我记得去年看直播的决定还下得斩钉截铁，今年似乎就只能斩斩草了，明年呢，也许就不会再看直播了吧，就像不会再熬夜看世界杯了一样。总之，到了我这个年龄，看直播更像一种仪式，我通过在黑暗中盯着一块屏幕看上面的人走来走去喋喋不休来告诉这个世界，我特么还没老，我还有许多事情要做呢，就是这样。&lt;/p&gt;&lt;p&gt;可以说今年的 WWDC 发布会是一场软件的盛宴，之前大家期盼的视网膜屏 MBA、iPhone6 和 iWatch 统统没有出现，库克大爷一开场就伸出了三个指头告诉我们，今儿就说仨事：OS X10.10、iOS 8和 Developer。从发布会内容来看，WWDC 似乎是从另一个角度缅怀乔布斯曾经说过的一句话：「The big secret about Apple is that Apple view itself as a software company」，很多人以为苹果是一家销售硬件设备的厂商，但乔老爷自己说了，关于苹果，最大的秘密是我们把自己看作一家软件公司。意思就是：别闹，我们是一家软件公司！&lt;/p&gt;&lt;p&gt;去年的 Mavericks 发布之后，我曾经写过一篇「品评 OS X Mavericks ——唯快不破」，主要介绍了 OS X10.9 的性能改进，那时候虎头虎脑的艾维还没有来得及对 OS X 的 UI 下手，所以10.9和10.8的 UI 变化是很小的，大部分图标都很饱满，只有新的应用 iBook 和 Map 以及部分纹理的消失体现了一点扁平化的气息。时至今日，扁平的一刀是躲不过了，我只希望自己看着刀锋落下的时候更从容一些。&lt;/p&gt;&lt;p&gt;还好，见到 OS X 10.10 的庐山真面目之后，我并没有想象中那么绝望，虽然金属感十足的立体 Dock 被半透明的毛玻璃替换了，但是图标没有被完全拍扁，色彩饱和度控制的也很好，这一点我们要感谢艾维，如果是毛玻璃上贴一层完全扁平的图标，那么这个 Dock将被我隐藏一万年。&lt;/p&gt;&lt;p&gt;关于 OS X 10.10，我说几点自己的感受：&lt;/p&gt;&lt;p&gt;1、这次 OS X 10.10的版本代号是 Yosemite，取自「优胜美地国家公园」，看来之后的版本都会拿旅游胜地开刀了。自从心爱的大猫被抛弃之后，我已经不再关心这些细节了。&lt;/p&gt;&lt;p&gt;2、采用了与 iOS 7 一致的设计语言，几乎重绘了所有的原生图标，应用程序左上角的红绿灯也首次做了改变，Dock 和大部分图层采用了半透明的毛玻璃效果，背景色彩融合和 iOS7 的效果保持一致，一扫之前的厚重和优雅，给人带来的是透明和科幻。看过很多科幻电影，华丽酷毙的系统界面都依附于一块玻璃片中，看到 Yosemite 之后，我觉得，再过十年，玻璃片中的操作系统，可能就是 OS XX。&lt;/p&gt;&lt;p&gt;就苹果官网上的效果图来看，我觉得自己对这个 UI 的接受度还是比较高的。去年我写过一句话：「不要在乎这些细节，反正你们迟早会喜欢上它的」，今年依然适用。&lt;/p&gt;&lt;img src="https://pic1.zhimg.com/3ce399b37b67601f7e66fd108995d08c_b.jpg" data-rawwidth="1520" data-rawheight="954" class="origin_image zh-lightbox-thumb" width="1520" data-original="https://pic1.zhimg.com/3ce399b37b67601f7e66fd108995d08c_r.jpg"&gt;&lt;br&gt;&lt;p&gt;3、通知中心功能增强了，Spotlight 增加了类似 Alfred 免费版的功能，并且做的更好。当然，为 Alfred 担心的朋友也大可放心，小帽子还有成名绝技 Workflow 扩展，Spotlight 想必不会有那么强的扩展性。&lt;/p&gt;&lt;p&gt;4、Safari 和 Mail 都有改进，Safari 的性能、 Mail 的大附件解决方案和图片标记功能让人心动。&lt;/p&gt;&lt;p&gt;5、iCloud 增加了类似 Dropbox 的功能，可存储各种类型的文件，并在各个设备同步。&lt;/p&gt;&lt;p&gt;6、Mac 和 iOS 进行了前所未有的功能连接和融合，你可以用 Mac 打电话，用 Mac 收取和回复 SMS 短信，在 Mac 上打开 iPhone 上的个人热点，利用 Handoff 功能在 Mac 上完成 iOS 上未完成的工作，反之亦然。举个例子，你正在 Mac 上写邮件，还没写完就要出差了，于是你合上 Mac 去赶火车，在列车上打开 iPad 即可继续完成这封邮件。这时就有朋友问了，我的 iPad 没网络肿么办？没网！这位同学你是在逗我吗？这些融合功能都是依赖网络才能完成的。&lt;/p&gt;&lt;p&gt;先写这么多吧，列了这些特性，我最关心第二点，毕竟 UI 是每天要面对的东西，而第六点，给我的惊喜最多。&lt;/p&gt;&lt;p&gt;很多人觉得 OS X 一直在向 iOS 靠拢，而我看到的是这两个体系不断的融合。Mac 和 iPhone、iPad 都是用户的选择，有人非 iMac 不用，有人喜欢躺在床上用 iPad 打脸，有的则一天到晚与 iPhone 不离不弃，现在好了，在不同的环境下，你可以用这些设备连续的做同一件事情，选择权终于回归到用户的手上，而用户永远在苹果自己构建的无形而巨大的生态圈内兜兜转转，同样不离不弃……&lt;/p&gt;&lt;p&gt;今天还有些其他工作要做，暂时就写到这吧，明天有时间我会再写写 iOS8 和 Apple 的新语言 Swift。&lt;/p&gt;&lt;p&gt;点击原文阅读：OS X Yosemite&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.apple.com/osx/preview/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;Apple - OS X Yosemite&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;文章来自微信号「MacTalk By 池建强」，微信搜索「池建强」关注&lt;/p&gt;</description><pubDate>2014-06-03T22:47:06+08:00</pubDate></item><item><title>他们曾使我空虚</title><link>http://zhuanlan.zhihu.com/p/19765436</link><description>&lt;blockquote&gt;&lt;p&gt;哪个人不是拼命挣扎，谁要你来激励？&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;明天又是一个小长假，下午来一段美好的阅读时光吧——影响我的10部短篇小说之《他们曾使我空虚》，由王朔选文并做序。&lt;/p&gt;&lt;p&gt;王朔在某一段时间内是我最喜爱的一位作家。读惯了课本上的山药蛋和八股文，第一次读王朔的小说才发现，原来中国文字还可以这么写。不夸张的说，王朔开启了中国当代白话文的另类先河，说创造了一种文风也不为过。王朔用一种满不在乎的文风，写了一系列高水准的作品，在讨大众喜欢的同时，还写了自己想写的东西，不考虑文思与结构，仅这一点，在那个年代已经足够进入大师行列。&lt;/p&gt;&lt;p&gt;在冯小刚的《我把青春先给你》里有一段刘震云老师对王朔的评价：「冯老师，学生小刘写得再好，再有智慧，再有高度，那也是人类的智慧，人类的高度，在上帝面前，这种智慧和高度都会显得十分地渺小，而上帝眼下正握着王朔老师的手在写作。王老师不仅仅是王老师，王老师是上帝派驻文坛的使者」。在读王朔的《动物凶猛》的时候，我感受到了上帝的那只手。&lt;/p&gt;&lt;p&gt;王老师才气纵横，短句子写的天下无双，这一点大家完全可以从这篇短序中感受到。序文节选如下：&lt;/p&gt;&lt;p&gt;基本上，当我空虚的时候，想要加倍空虚，我就读小说。在没有流行音乐安慰我们的时代，小说差不多是引导我脱离现实，耽于幻想的唯一东西，总能满足我精神上自我抚摩的愿望，不跟人在一起也不惊慌。我的情感发育是通过小说完成的，那使我接触到了另一个世界，一个个瞬间超越了平凡的生活。总的来说，我读小说不是为了更好地生活，寻找教义，获得人生哲理指南什么的，正相反，是为了使自己更悲观。美好的东西在小说中往往被轻易毁灭，看得多了，便也怀疑现实。日常生活很平淡，心碎的体验一般来自阅读，习惯了，也觉得是难得的享受，又安全，进而觉得快乐是一种肤浅的情绪，尤其见不得那些宏大辉煌标榜胜利成功的叙事，觉得大都是胡扯，自欺欺人，哪个人不是拼命挣扎，谁要你来激励？我不想变成畜生，很大程度上要靠优美小说保护我的人性，使我在衣食无忧一帆风顺中也有机会心情暗淡，绝望眼泪汪汪，一想起自己就觉得比别人善良，敏感，多情以及深沉。很多时候，我还以为从小说中能发现人生的真相。&lt;/p&gt;&lt;p&gt;这就是我的阅读趣味，从小说中汲取堕落的勇气和抗拒生活的力量。话说的有点大，似乎又拿小说当先生当武器了，其实也不过是一个密友，需要了，找人家聊聊，不需要了，也很久想不起来打个电话。&lt;/p&gt;&lt;p&gt;这里选的十个短篇小说都是曾令我有所感的。识者可以看出我的偏好，也无非是殇情和调侃两类，《莺莺传》《白娘子永镇雷峰塔》《驿站长》《献给爱丝美的故事》《忧国》可算殇情，《没有毛发的墨西哥人》《刎颈之交》《关于犹大的三种说法》《采薇》《他们不是你丈夫》大都是调侃，卡佛略微正经一点，博尔赫斯玩的比较深。&lt;/p&gt;&lt;p&gt;调侃，是一种很重要的文学风格，现在我终于有机会证明这一点了。欧·亨利就不必多说了，这老先生是专门幽默的，小说连起来也可拍很长的情景喜剧。《刎颈之交》相当于咱们这儿的“两肋插刀”，都说的是男人间的一种神话，我叫“流氓假仗义”。其实你早该发现调侃的绝好对象是什么，都是那吹得很大的东西。&lt;/p&gt;&lt;p&gt;推荐一个博客：数据科学与R语言&lt;/p&gt;&lt;p&gt;点击原文阅读，喜欢的就收藏一下吧，困了累了读一读，有益无害，还有助睡眠。&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//xccds.github.io/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;数据科学与R语言&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;文章来自微信号「MacTalk By 池建强」，微信搜索「池建强」可得。&lt;/p&gt;&lt;p&gt;提前祝大家假期愉快！&lt;/p&gt;</description><pubDate>2014-05-30T13:34:10+08:00</pubDate></item><item><title>我与二手车的故事</title><link>http://zhuanlan.zhihu.com/p/19761811</link><description>&lt;p&gt;我小学四年级之前一直在农村居住，那时候没见过汽车，只见过马车和小推车。搬到城市之后才发现，这世上居然有汽车这种交通工具，那时我的理想是当一名212吉普车的司机。后来见的车多了，觉得司机不够神气，我希望拥有一辆自己的汽车。这个理想在长大后也实现了，只是实现的有点晚，当然，晚，带来的好处是，我完成了人生第一笔有价值的投资。&lt;/p&gt;&lt;p&gt;毕业后真正开始攒钱是在洪恩工作的时候，那时吃住都在公司，每月的开销大概是几百块钱，还包括电话费和偶尔出去吃饭的钱，这种事情放到现在就是天方夜谭，但当时的情况是，工作了一两年就可以攒下一辆小车的散碎银子了。&lt;/p&gt;&lt;p&gt;但凡男人有点钱就开始得瑟了，我也不例外，看到别的小伙伴都开始踏车出行，我开始动买车的念头。幸好，那时候我们家大领导高瞻远瞩，非常坚决的把我这个危险的苗头扼杀到了摇篮之中，她温和的对我说：「想在买房之前买车？门都没有」。&lt;/p&gt;&lt;p&gt;时光流逝，岁月荏苒，历史再一次证明了领导的决策是高明的、正确的，是能够看出十年二十年的。这个决定拯救了整个家庭的住房问题、经济问题和家庭纠纷问题，带来的后果也不算严重，只是把购车时间延后了两三年而已。&lt;/p&gt;&lt;p&gt;终于，我有了一辆自己的十万元小车，开始了愉快的自驾生活，并且验证了一个颠扑不破的整理：开车的人是不会晕车的，这让我倍感欣慰。之前我在「旅途中的思考」一文中写过，早年间的旅行经历在我的记忆中留下了痛苦的印记，最大的原因就是我晕车。当发现开车不晕车之后，我深深的爱上了开车这项运动，很多人害怕堵车会选择公交或地铁，而我却宁愿开车而不去挤公共交通，因为坐车，无论是什么车都会让我疲惫不堪。&lt;/p&gt;&lt;p&gt;很快五年过去了，新车变旧车，小领导降临，车也显得小了，于是有了换车的念头，卖掉旧车开始提上议事日程，当时遇到的问题是：&lt;/p&gt;&lt;p&gt;1、 去哪儿卖车？&lt;br&gt;2、 手里的二手车值多少钱？&lt;br&gt;3、 如何避免被黄牛车商忽悠？&lt;br&gt;4、 怎么保证交易的安全？&lt;/p&gt;&lt;p&gt;在网上研究了一下，发现没什么合适的渠道，于是采用了一种最土的方式，到论坛上叫卖，然后和各个买家交流，谈价格，试车，最后要到车管所过户等等，极其繁琐，而且当时也没有考虑很多交易上的安全措施，拿着现金就把事办了。好在，事情终于过去了。&lt;/p&gt;&lt;p&gt;现在五年又快过去了，新车又变旧车了。我在想，时光流逝车行万里，难道二手车市场那是五年前的样子么？咨询了一下朋友，朋友和我说，别土了，人家也开始用「互联网思维」交易二手车了。每次听到这个词我总是冷不住打晃一下，详细咨询之后，据说是这样的：&lt;/p&gt;&lt;p&gt;车主可以通过网络快速的把车卖掉，并且卖出相对高的价格，整个过程还是免费的，具体操作如下：&lt;/p&gt;&lt;p&gt;1、首先进行车辆检测&lt;br&gt;车主与二手车网络运营商预约好之后，厂商的检测师就开始对二手车进行系统化的检测，半小时后即可以出一份检测报告。&lt;/p&gt;&lt;p&gt;2、300多家二手车商竞价&lt;br&gt;报告提交到网络平台，300多家二手车商就根据报告来竞价，竞价结束之后30分钟后就得出相对真实的价格。&lt;/p&gt;&lt;p&gt;3、快速交易&lt;br&gt;价格出来之后，就不进行其他形式的议价了，车主有几天的考虑时间，确定之后，马上交易。最终出价最高的车商拿到车。&lt;/p&gt;&lt;p&gt;4、快速支付&lt;br&gt;确定成交之后，二手车网络运营商会在几分钟之内把车款支付给车主，方便快捷。&lt;/p&gt;&lt;p&gt;目前我了解到的「开新二手车帮卖」在做这样的事情，主要的覆盖地区在上海周围，有卖车需求的读者可以关注一下，了解详细信息请访问：&lt;a href="https://link.zhihu.com/?target=http%3A//www.carsing.com.cn/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;【开新二手车帮卖官网】&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;这时就有朋友要问了，这种业务对车主完全免费，自己如何盈利呢。羊毛出在羊身上，我想二手车商不会白白得到竞价机会的。&lt;/p&gt;&lt;p&gt;不知道北京地区是否也有类似业务，有的话以后卖车就方便多了。&lt;/p&gt;</description><pubDate>2014-05-26T10:08:17+08:00</pubDate></item><item><title>什么样的老板是好老板？</title><link>http://zhuanlan.zhihu.com/p/19760156</link><description>&lt;p&gt;周二参加了Smartisan T1手机发布会，第二天关于锤子手机的报道铺天盖地，但是真正说到点子上的好文章少之又少，大部分报道文字极烂，充斥着恶意和嘲讽，一读之下，让人感觉你我所在的并非人间，于是我在朋友圈立下誓言：「今天各种媒体写的锤子手机报道都弱爆了，今晚洗干净了在床上等着 Mac 君的推送吧」。结果冯老师立刻加注：「你先写，写完我灭掉你的」。&lt;br&gt;&lt;/p&gt;&lt;p&gt;最终的结果显示，冯老师后发而未能制人，从文字内容和传播效果上对我没有形成压倒性的优势，对此冯老师耿耿于怀，原来准备送我的一打丁香园主题T恤的，现在估计只能送六件了。这件事让人慨叹：兵无常势，水无常形，世事难料！&lt;/p&gt;&lt;p&gt;不过，今天冯老师的这篇「京东上市了，员工有多少股票？」却是极好的，文字和内容都堪称上品，读完他的文章，让我想起了自己在2013年写过的一篇「好老板坏老板」的短文，翻出来一看，居然还可以读下去，而且文字和要表达的内容与我现在的想法并无太大出入，简单编辑之后，贴出来给大家一阅，因为写的很早，估计大部分读者已经不记得我写过这些文字了，如下：&lt;/p&gt;&lt;p&gt;（2013-01-12）上周看了一篇文章，叫做陈天桥的理想国。文章第一句是：与腾讯、百度、阿里巴巴同站在中国互联网之巅的风光，对盛大而言已是很久远的事了。这句话说得有点道理，无论是从影响力、资本、服务、产品和人才等各个方面，盛大都处于收缩和防守阶段。陈天桥是个天才的创业者，凭借一己之力把盛大带上辉煌的顶峰，也由于其强势、自我、独断等等因素，从2009年开始扩张至今，遇到诸多问题。即便如此，陈天桥依然是一位出色的企业家，属于一流之品。也许有一天，痛定思痛之后，盛大会重新展现其爆发力，再上巅峰也为可知。&lt;/p&gt;&lt;p&gt;这就延伸出一个话题，到底什么样的老板是好老板？&lt;/p&gt;&lt;p&gt;我的个人观点是，老板可以分为四类：&lt;/p&gt;&lt;p&gt;第一类：超级无敌型，既能天纵奇才带领员工冲锋陷阵，也能充分发挥下属的能力，这类属可遇不可求型。&lt;/p&gt;&lt;p&gt;第二类：天才驱动型，老板是个牛逼人物，作为这样老板的下属就尽情的学东西并严格执行就好了。创意、战略、实施都是老板定的，员工跟着喝汤就可以。陈天桥目前当属此类。&lt;/p&gt;&lt;p&gt;第三类：充分授权型，这类老板知道自己业务能力一般，但是能够聚拢人气，充分授权，为员工提供舞台和各种保障，也不失为好老板。&lt;/p&gt;&lt;p&gt;第四类：一无是处型，公司发展到一定阶段，老板的能力已经无力推动公司持续创新，但又不愿意充分授权和为员工提供责权利，试图用各种管控手段来推动公司发展，这样的后果必然是离心离德，失败可期。&lt;/p&gt;&lt;p&gt;如果你的老板是前三种，那么踏实干，好好学。如果是第四种，你们都懂的。如果你是老板，那就要考虑自己处在哪个阶段了……&lt;/p&gt;&lt;p&gt;当时写这些文字的时候，并未考虑到员工股权的问题。对于大多数人来说，个人财富从缓慢积累到爆发性增长，很多时候都依赖期权和股权。一旦涉及到利益，问题就变得复杂了。幸好，冯老师在他的这篇文章里给出了答案。&lt;/p&gt;&lt;p&gt;另外，读完他的文章，大家可以回来给我反馈一下，刘强东到底属于哪一类老板？&lt;/p&gt;&lt;p&gt;点击阅读「&lt;a href="https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMjM5ODIyMTE0MA%3D%3D%26mid%3D200462135%26idx%3D1%26sn%3D31836a0371e9cb5ffbd37a7b9ef12567%26key%3Dd7e970edec361a55e6ef308749e4c32c19f9b57ace02442ceb3988888d63ab02b27de893a64b88aa10ccd3204cca7999%26ascene%3D1%26uin%3DNTQxNzI4MDA%253D" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;京东上市了，员工有多少股票?&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;」&lt;/p&gt;</description><pubDate>2014-05-24T11:11:44+08:00</pubDate></item><item><title>感受世界的温暖和激情 - 暨锤子手机发布</title><link>http://zhuanlan.zhihu.com/p/19758328</link><description>&lt;p&gt;估计和很多人一样，我知道罗永浩也是从「老罗语录」开始的，年轻的时候有一段时间非常迷恋这种东西，老罗在调侃之余，讲了很多值得年轻人的思考，或者说，通过说相声的方式给那些不愿意读书和思考的人，提供了另一种认知世界的方式。&lt;/p&gt;&lt;p&gt;后来老罗从新东方离职，创办了牛博网。牛博网是老罗在2006年伙同黄斌创建的博客网站，网站风格和内容特立独行，与老罗的风格相得益彰。牛博网与其他博客网站最大的不同就是，邀请了一堆写字的牛人，比如连岳、王小峰、老六、莫之许、王小山、韩寒、胡缠、和菜头、宋石男、柳叶刀、柴静、方舟子等知名写作者都在牛博写作，这在一定程度上保证了博客内容的质量，并促进了牛博的繁荣昌盛。但是盛极必衰，老罗性格强势，大牌作者也都不是省油的灯的，网络上没有永远的敌人，也没有永远的朋友，没过多久，大牌作者分崩离析，牛博国际远走北美，嫣牛博奄奄一息。2013年6月，牛博网正式关闭。&lt;/p&gt;&lt;p&gt;不过老罗并没有停止「我的奋斗」，他转手又创立了「老罗英语培训学校」，并在2012年单方面悍然宣布成立锤子科技有限公司，英语老师要做手机了！&lt;/p&gt;&lt;p&gt;当时听到这个消息我还是非常吃惊的，虽然我很早就读过老罗写的「苹果五部曲」（&lt;a href="https://link.zhihu.com/?target=http%3A//tech.163.com/special/00092EL8/appleluo.html" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;老罗：苹果五步曲&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; ），知道他在产品设计和用户体验方面有很多独到的见解和思路，不过做手机，我觉得他还是把这事想简单了。&lt;/p&gt;&lt;p&gt;另外，从某种成功学角度来看，老罗之前并没有做成什么事情。作为个体的英语老师，他是成功的，但后续的牛博网在为他赢得更好声誉和更多粉丝的同时，关闭了。培训学校也没有实现什么颠覆和创新，可谓不温不火。做手机？唯一给大家留下想象空间的可能就是他的工匠精神和星辰大海一般的人脉和资源了。&lt;/p&gt;&lt;p&gt;不过老罗可不会理会我们这些程序员的想法，他开始一心一意的做手机了。&lt;/p&gt;&lt;p&gt;之后就是各种挫败、坑、嘲笑、谩骂等狗血剧情，老罗不为所动。作为一个飞翔的胖子，他在各种坑之间辗转腾挪，轻盈的跳来跳去，时不时还卖个萌，然后，丫居然变得更胖了。&lt;/p&gt;&lt;p&gt;2013年3月，锤子科技在国家会议中心发布了锤子ROM。那一次我未到现场，因为不知道这位老同志能够鼓捣出个什么东西来。发布会之后，毁誉参半，似乎骂声更盛。我的感觉是，这事没准能成！&lt;/p&gt;&lt;p&gt;秋去春来，又是一年。锤子手机终于要发布了，这次不仅有 ROM，还有硬件，甚至有传说中「秒杀人类有史以来所有手机包装」包装盒。好吧，我决定去见证这个历史时刻，如果将来真的成为「历史时刻」的话。&lt;/p&gt;&lt;p&gt;发布会前一天冯老师在朋友圈感慨：能让我自己掏腰包买机票去参加创业团队的产品发布会的，大概也只有老罗了，纯属情感上的支持，甭管最后做成啥样。如果老罗真的成了，多年以后，外孙子问我的时候也好吹一下牛：「你姥爷我当初看过他的发布会呢」，如果外孙子再问当初你为啥没做成点事儿? 我只好说「你姥爷我当年整天跟人吵架来着……」&lt;/p&gt;&lt;p&gt;我尝试进行了加工再创作：能让我自己买票而买不到票又拉下老脸去和读者要票参加创业团队的产品发布会的，大概也只有老罗了，纯属情感上的支持，甭管最后做成啥样。如果老罗真的成了，多年以后，外孙子问我的时候也好吹一下牛：「你姥爷我当初看过他发布会呢」，如果外孙子再问当初你为啥没做成点事儿? 我只好说「你姥爷我当年整天劝你冯姥爷别和人家干架来着……」&lt;/p&gt;&lt;p&gt;于是两个70后就都到了锤子发布会的现场，同去的还有InfoQ 霍泰稳、安全宝吴翰清（道哥）和百度张辉等好兄弟。发布会结束以后几个老家伙面面相觑，都很沮丧。「老罗比咱大着好几岁，还这么拼，最后还把事做成这样了，咱们怎么办？」「没话说，继续拼吧」。于是老几位立下了再干几十年的誓言，洒泪而别。&lt;/p&gt;&lt;p&gt;可以说，这次发布会是一届成功的大会！&lt;/p&gt;&lt;p&gt;老罗的演讲技巧、呈现能力和现场感染力在国内几乎无出其右，演讲内容和老罗本身的特质浑然天成，他的任何动作和话语都可能成为笑点和引发掌声。当然，作为一个常常演讲的老同志，这些东西并不能影响我的判断。反而是发布会的 Keynote 吸引了我一大部分注意力，每一张幻灯片的内容、动画和过场都精心准备过，并且达到了预期的效果。整个 Keynote 的水准是可以媲美苹果产品发布会的，甚至在某些方面有所超越。&lt;/p&gt;&lt;p&gt;至于锤子手机的软硬件参数和功能，现在评测和描述的文章已经满天飞了，无需再着笔墨，我只谈谈这部手机打动我的地方。&lt;/p&gt;&lt;p&gt;1、手机很漂亮，第一眼看上去像是大号的 iPhone5S，但是在结构和细节上完全不同。&lt;br&gt;2、在选择好的硬件材料的同时，没有对工业设计妥协。给人的感觉是机身的各个部件都在正确的位置上，充满了对称的美感，这一点 iPhone5S 应该是做了妥协的，比如摄像头距离上边框和左边框的尺寸是不一样的。&lt;br&gt;3、81宫格的设计应该是目前最方便最快捷的整理 App 的方式，没有之一。&lt;br&gt;4、最快抢拍功能：无需点亮屏幕，挤压手机两侧的按键就能够迅速调出相机应用。&lt;br&gt;5、通过屏幕两侧的功能键满足左右手人群的需求。&lt;br&gt;6、5寸屏变3.5寸屏的解决方案。&lt;br&gt;7、区域截屏功能。&lt;br&gt;8、其他在短信、电话、录音、便签、静音等方面的创意和改进。&lt;br&gt;9、电池背板的解决方案。&lt;br&gt;10、不贴膜带套的保险解决方案。&lt;/p&gt;&lt;p&gt;另外一些想法，&lt;/p&gt;&lt;p&gt;1、价格问题。我一直认为锤子手机的价格会定在3000左右，至于4000说，仅仅是个营销上的小技巧吧。但3000元是不是用户可接受的价位，也需要时间检验的。&lt;br&gt;2、9宫格的设计我并不喜欢，但81宫格是建立在9宫格之上的，所以只能忍了。&lt;br&gt;3、关于拟物化还是扁平化，这并不重要，整体上美观、简洁、易用，这就够了。&lt;br&gt;4、很多人说锤子手机的这些功能我也能做出来，这种话毫无意义。就像当年做作业一样，一道难题别人做出来了，你看了一遍发现自己也会做了，但牛逼的永远是第一个想出办法的人，无论这个办法看起来有多简单。&lt;br&gt;5、锤子ROM上的这些改进需要产品经理和程序员花费大量的时间、精力去设计打磨并编码实现，不是一件简单的事。&lt;br&gt;6、改变世界不是闹着玩的。&lt;/p&gt;&lt;p&gt;最后，这部手机销售前期会卖的很好，但能否卖的更好，取决于产品在使用过程中体现出来的软硬件质量，而不是老罗的粉丝质量。另外可持续的创新精神也是衡量一个科技公司的重要指标。&lt;/p&gt;&lt;p&gt;发布会期间，老罗宣布把所有的门票收入一百多万软妹币捐给了OpenSSL 基金会。从程序员的角度来看，这不仅是一件牛逼的事情，而且让人感动，我们都知道做开源是一件很艰难的事情，国内就不用提了。那么多大公司使用了那么多开源软件，真正为开源做出贡献的又有多少？所以，对这件事的定义就只有两个字：「牛逼」，对于那些「炒作和吸引眼球」之类的评价，我们只好温和的说，Go to hell……&lt;/p&gt;&lt;p&gt;这次老罗的锤子手机发布会这次足足来了5000多人，整个国家会议中心坐满了密密麻麻而有序的观众。除了铁杆粉丝之外，不乏很多冷静的 IT 从业者，包括程序员、产品经理、设计师、销售……当然还有热爱生活和喜欢相声的人。但数字就摆在那里：5000，不会因为你的爱或恨增加或减少。一想到自己的新书发布会只有几百人，我不仅有些黯然神伤了。&lt;/p&gt;&lt;p&gt;但是，伤感之后我们应该做的是，下次新书发布会先搞到1000人再说，而不是「你就是个高中肄业生和相声演员，你凭什么做手机还能做这么牛逼呢？」&lt;/p&gt;&lt;p&gt;您说对吧？&lt;/p&gt;&lt;p&gt;另，这是一篇严肃而硬朗的文章，并且，没有人为此付费。&lt;/p&gt;</description><pubDate>2014-05-21T23:05:54+08:00</pubDate></item><item><title>程序员会美术，谁也挡不住</title><link>http://zhuanlan.zhihu.com/p/19755846</link><description>&lt;p&gt;最近经常要自己处理一些图形图像，所以决定彻底了解一下 Mac 上的简版 PhotoShop——Pixelmator。&lt;/p&gt;&lt;p&gt;打开 iTune 播客里的 PixelMator Tutorials，发现还有一大半没有看，于是一集集的看下去，觉得这个工具简直就是为非专业美工又具备美术素养和热爱生活的人量身定制的修图神器。&lt;/p&gt;&lt;p&gt;每个视频都很短，每个都很有用，这个软件完全符合 Apple 生态系统的软件哲学和设计思想：简洁、有力、实用和美。&lt;/p&gt;&lt;p&gt;看完视频之后我用学到的技巧修了两张我自己拍摄的照片，第一张是题图，第二张如下：&lt;/p&gt;&lt;img src="https://pic4.zhimg.com/582c4932376d2f7e7404ed700c00567f_b.jpg" data-rawwidth="1520" data-rawheight="1013" class="origin_image zh-lightbox-thumb" width="1520" data-original="https://pic4.zhimg.com/582c4932376d2f7e7404ed700c00567f_r.jpg"&gt;&lt;p&gt;就算是我的美术作品吧。&lt;/p&gt;&lt;p&gt;俗话说的好，程序员会美术，谁也挡不住。另有：全栈工程师都弱爆了，程序员做美工才是王道！&lt;/p&gt;&lt;p&gt;相关教程：&lt;a href="https://link.zhihu.com/?target=http%3A//www.pixelmator.com/tutorials/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;Pixelmator Tutorials&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;关于吵架这事说两句：&lt;/p&gt;&lt;p&gt;1、大胆假设小心求证，避免无意义的争吵。&lt;/p&gt;&lt;p&gt;2、我很早就认识到，我们没有教育脑残和喷子的义务。在网际多年，看过太多虚拟的刀锋和鲜血，很多人被彻头彻尾的粉碎，挫骨扬灰，似乎从来没有来过这个网络，但是很快这些人就从另一个黑暗的角落爬了起来，并换上一副暂新的马甲继续战斗。&lt;/p&gt;&lt;p&gt;——MacTalk&lt;/p&gt;&lt;br&gt;&lt;p&gt;文章来自微信公众号「MacTalk By 池建强」，搜索「池建强」关注。&lt;/p&gt;</description><pubDate>2014-05-19T10:44:28+08:00</pubDate></item><item><title>一点干货不成敬意</title><link>http://zhuanlan.zhihu.com/p/19754946</link><description>&lt;p&gt;连续发了三篇文艺相关的文章之后，我发现读者里的程序员已经有点不耐烦了，他们要么在回复中发出「嗬嗬」的声响，要么冷冷的在手机那头一言不发，像是在冷眼旁观一场文字游戏。只有那些文学爱好者和单纯欣赏文字的同学，或妹子，会从屏幕那边紧紧握住手机，颤抖着说，同志哥，终于找到自己人了，原来 MacTalk 里也可以谈论文学和艺术啊！这一点让我百感交集。&lt;/p&gt;&lt;p&gt;程序员的感受我很能理解。小时候一直在农村过着粗茶淡饭的生活，每天棒子面窝窝就咸菜吃的也挺香，但凡有一天上点蔬菜水果，胃都会受不了，它会纳闷这些香甜美味的东西是否时资产阶级派来的糖衣炮弹。如果竟然一连三天有好吃的，我就会惊恐的感觉，麻旦这是要粗事啊。不过请大家放心，不会出什么事，MacTalk 会荤素搭配，男女咸宜，保持风格，死不悔改，不管你们读不读，写作的脚步不会有片刻的停留……&lt;/p&gt;&lt;p&gt;另外，文章写的多了，与很多年轻人交流时总被称为「老师」，有时还被调侃为「人生导师」，这常常让我感到纠结，就像是你在路上走的久了，突然被一群人抬起来放到了一堵高墙之上，高墙上是很难受的，因为没有根，连墙头草也做不了，所以你挣扎着想要下来，一不小心滚落到了墙的那一边，爬起身拍拍土一看，妈的是监狱！这下连点坏事都做不了了。所以，这个世界上没有「老师」，没有「成功学」，没有「人生导师」，你的人生只能自己导，别人导，会掉沟里。&lt;/p&gt;&lt;p&gt;我只是写下自己的所思所想，有错的，有对的，您读了，有收获是好事，没收获也不用想太多。&lt;/p&gt;&lt;p&gt;今天给大家介绍两个 Mac 上的小工具。&lt;/p&gt;&lt;p&gt;1、隐藏在浏览器里的临时记事本。&lt;/p&gt;&lt;p&gt;很多时候我们需要临时记点东西，这样就不得不打开备忘录或便签等应用来记录信息。其实Safari 也可以实现这一功能。&lt;/p&gt;&lt;p&gt;在地址栏输入：data:text/html, &amp;lt;html contenteditable&amp;gt;，你就会发现可以在浏览器的页面录入或复制文字了。&lt;/p&gt;&lt;p&gt;事实上改进一下这段代码，加上 CSS 和 JavaScript 的控制，可以一行代码把浏览器改造成一个功能丰富的编辑器，有兴趣的可以试试。（以上代码同时支持 Chrome 和 Firefox）&lt;/p&gt;&lt;p&gt;2、SSH多会话管理器&lt;/p&gt;&lt;p&gt;做运维的同学常常会遇到要在几台或几十台服务器上同时创建多 SSH会话并执行相同命令的场景，比如执行 ls、df、free、top等系统命令查看系统的运行情况，如果你每台服务器都要执行一边的话，浪费的时间估计你的老板都不能答应，所以我们可以采用一些 SSH 会话同步管理工具。如果你用的是 Mac，可以使用csshX。&lt;/p&gt;&lt;p&gt;安装很简单，执行：brew install csshX。&lt;/p&gt;&lt;p&gt;运行方式：&lt;br&gt;csshX user1@10.10.10.1 user2@10.10.10.2 user3@10.10.10.3 user4@10.10.10.4 ……&lt;/p&gt;&lt;p&gt;或者把这些信息存入文件，以文件的方式运行：&lt;br&gt;csshX –hosts hostsfile&lt;/p&gt;&lt;p&gt;运行结果是csshX会自动打开并均匀排列这些 SSH 会话窗口，最底部是总控制台，你在控制台输入一个命令，该命令会被同步到所有打开的终端并执行。&lt;/p&gt;&lt;p&gt;csshX 可以在 OS X 的默认终端中正常执行，如果你用 iTerm 2的话，可以使用另一个类似的工具：i2cssh。&lt;/p&gt;&lt;p&gt;晚安。&lt;/p&gt;</description><pubDate>2014-05-17T22:43:29+08:00</pubDate></item><item><title>近期书单推荐</title><link>http://zhuanlan.zhihu.com/p/19746845</link><description>&lt;p&gt;最近很多朋友一直让我推荐书，这次集中推荐一批我近期读过或正在读的书吧。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;声明：推荐书的标准有两个：&lt;/p&gt;&lt;p&gt;1、我读过，2、我觉得不错&lt;/p&gt;&lt;p&gt;但是图书的好坏完全是个人感觉，我觉得好您不一定爱看，所以大家在买书之前一定要看书的目录、简介和评价，自己决定。不要买了以后再和我来唧唧歪歪，伤不起。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;人文书单：&lt;/p&gt;&lt;p&gt;————————————————————————&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;《当我谈跑步时我谈些什么》：村上直树跑步时探寻内心世界的文字之旅，清淡如云，宁静如水，喜欢写作和跑步的人一定要看。&lt;/p&gt;&lt;p&gt;《百年孤独》：马尔克斯的魔幻现实主义代表作，看不完也得放手边，感受它的光耀世界。&lt;/p&gt;&lt;p&gt;《硅谷百年史》：一百年来硅谷诞生了50多位诺贝尔奖获得者，还有大批依靠智慧和知识而成为土豪的人，他们的研究成果、产品和投资，缔造了无数个激动人心的传奇，改变了世界。如果你是 IT 界的，并且不是土豪，要看。&lt;/p&gt;&lt;p&gt;《信息简史》：媲美《时间简史》、《万物简史》的杰作。看完后不一定成为土豪，但可以更好的认知世界。&lt;/p&gt;&lt;p&gt;《代码的未来》：松本行弘的博文集，也是他的技术独白。松本对云计算、大数据时代下的各种编程语言以及相关技术进行了剖析和预测，书中内容和时间都有很大的跨度，对拓展技术视野非常有帮助。&lt;/p&gt;&lt;p&gt;《有的放矢》：「七印部落」翻译的创业图书。七印部落是个「REMOTE」的翻译团队，成员来自五湖四海，他们翻译过《启示录》、《四步创业法》等图书，深受好评。这本书我看了一半，主要围绕现在炙手可热的创业话题：创业者并不缺少创意，他们缺少的是检验创意的方法。&lt;/p&gt;&lt;p&gt;《REMOTE》：37Signals 作品。如果你再也不想上班了，看这本书，看完后就可以远程上班了。他们的另一本书是《Rework》。&lt;/p&gt;&lt;p&gt;《设计师要懂心理学》：我常常黑产品经理，现在想想他们也挺不容易的，所以这次推荐一本书产品相关的书。产品设计有时候基本上就是心理认知，不懂心理学的产品经理不是好程序员。&lt;/p&gt;&lt;p&gt;《线上幽灵》：世界头号黑客米特尼克的传奇人生，可以当小说看，推荐给安全圈的朋友。&lt;/p&gt;&lt;br&gt;&lt;p&gt;技术书单：&lt;/p&gt;&lt;p&gt;————————————————————————&lt;br&gt;&lt;/p&gt;&lt;p&gt;《Go语言程序设计》：2013年我推荐的语言是 Python，2014年推荐 Go。这是一本 Go 语言实战指南，不仅深入浅出的讲解了 Go 的语言特性和用法，还强调了 Go 的关键创新。每章节后配有习题，学完即练，温故知新。&lt;/p&gt;&lt;p&gt;《Objective-C程序设计》：上次推荐了白胡子老头的斯坦福讲座后很多人让推荐一本Objective-C的语言入门书，那就这本吧。&lt;/p&gt;&lt;p&gt;《Objective-C高级编程》：学习了Objective-C语言的基本特性后就可以读读这本书，书里讲了自动引用计数、Block和 GCD 等高级技术。&lt;/p&gt;&lt;p&gt;大型网站系统与Java中间件开发实践：据说是淘宝曾宪杰的技术封笔书，因为他去搞管理了。据说研究透了能到淘宝 P8，你看着办。&lt;/p&gt;&lt;p&gt;《Linux/Unix系统编程手册》（上下）：Linux/UNIX系统编程接口权威作品，涵盖500多个系统调用和库函数，示例清晰完整，覆盖当前UNIX标准，如果你是后端开发人员，推荐以备不时之用。&lt;/p&gt;&lt;p&gt;《高性能 MySql》：第三版让这本伟大的书变得更好了。如果你的生产环境应用了 MySql，这本书是必备读物。&lt;/p&gt;&lt;p&gt;《Effective Objective-C 2.0》：读完上次那两本 OC 的书，可以看看这本，编写高质量 iOS 和 OS X 代码的52个有效方法，必有收获。&lt;br&gt;&lt;/p&gt;&lt;p&gt;《iOS 应用逆向工程》：国内作者原创作品，著，不是编著。国内第一本讲解 iOS 逆向工程的实战书籍，涉及 Reveal、IDA、GDB、class-dump 等常用逆向工具，如果你想了解 iOS App 的系统架构、文件类型和安全体系，此书值得拥有。&lt;/p&gt;&lt;p&gt;《Puppet 实战》：运维目前是技术人员非常值得关注的领域，而 Puppet 作为优秀的开源配置管理工具，在运维中起到了关键的作用。如果你想「喝着咖啡看看书，点两下按钮就搞定一个网站」，那就看着本书吧。&lt;/p&gt;&lt;p&gt;《白帽子讲Web安全》：Web 安全领域的经典之作，道哥的作品，涉足 Web 安全人员必备读物。&lt;/p&gt;&lt;p&gt;《Web前端黑客技术揭秘》：Web 安全领域的经典之作，余弦的作品，涉足 Web 安全人员必备读物。&lt;/p&gt;&lt;br&gt;&lt;p&gt;这次就推荐这么多吧，以后有好书再推荐。&lt;/p&gt;&lt;p&gt;————————————————————————&lt;/p&gt;&lt;p&gt;每天微信后台都会收到很多问题，我不可能一一回复。如果你的问题没得到解答，要么是没看见，要么是你的问题不好。你可以尝试组织语言再发一遍，谢谢。&lt;/p&gt;&lt;p&gt;好问题应该会得到回复，我是这么想的。&lt;/p&gt;&lt;p&gt;题图：爱读书的算法女博士，我只能帮到这么多了。&lt;/p&gt;</description><pubDate>2014-05-07T09:18:29+08:00</pubDate></item><item><title>伟大的梦想都足够疯狂</title><link>http://zhuanlan.zhihu.com/p/19744913</link><description>&lt;p&gt;五一小长假最后一天的下午，小主们终于各回各家了，我得以睡了一个漫长的午觉，后果就是做了一个真实而诡异的梦。&lt;/p&gt;&lt;p&gt;在梦里，地球已经濒临毁灭的边缘，至于为什么，只有梦里的我知道。大部分人类迁移到了另一个灰暗而冷峻的星球，天空阴冷，大地荒凉，没有动物，没有植物，到处是钢筋水泥和泛着各种光泽的金属。每个人似乎都变得沉寂，一言不发，心事重重……虽然很多细节记不起来了，但绝望的情绪一直蔓延在整个梦境里，我在梦中似乎不断醒来确认，真的不在地球了！那种孤绝的心境是我在真实世界里从未体验过的。&lt;/p&gt;&lt;p&gt;等我真正从昏睡中醒来，夜色已经开始降临，打开窗，看落日辉煌，听狂风呼啸，我感到无比开心，地球真好！&lt;/p&gt;&lt;p&gt;当天晚上，我为了把自己从绝望的状态里解救出来，决定看点打鸡血的东西，于是选择了拉里·佩奇（谷歌创始人）在密歇根大学的毕业典礼演讲，并根据演讲视频整理了一份文字版。这项工作花费了我将近两个小时的时间，完成之后，我发现自己满血复活了。如果你也曾感到过绝望，那么请阅读这个演讲的文字版（视频在最后）。以下是正文：&lt;/p&gt;&lt;p&gt;09级的同学，我好像没有听到你们的声音（欢呼声）。首先我希望大家站起来，向支持你们的亲朋好友挥手致意！我相信你们能找到他们在哪。尽情展示你们的爱吧！&lt;/p&gt;&lt;p&gt;今天站在这里我非常荣幸。&lt;/p&gt;&lt;p&gt;等一下，我知道，关于刚才那句陈词滥调，你们可能在想：每一位毕业典礼的演讲人都会这么说吧，但就我而言，确实情真意切，很多人不知道，我对这里有更特殊更私人的感情，我想告诉大家个中缘由。&lt;/p&gt;&lt;p&gt;很久以前，1962年九月，这座校园里有一家名为史蒂文的消费合作社。合作社有一间厨房，厨房的屋顶每十年由学生志愿者打扫一次。当年有位名叫格洛莉亚的女大学生，她爬上了高高的梯子，努力打扫肮脏的天花板，地板上站着一位名叫卡尔的寄宿生，他钦佩地看着这位姑娘。想象一下这个场景，这是他们俩的第一次见面。他们就是我的父母亲。我知道你们会想，我就是厨房「化学实验」的直接成果，就在这里，就在密歇根大学。我的母亲今天也在这里，我想我们应该能找到他们的相遇之处，并且在那个天花板上镶嵌一块铭牌，上面刻上「感谢爸爸、妈妈！」。&lt;/p&gt;&lt;p&gt;我的家人上的都是密歇根大学，我、我的哥哥和我的父母。我父亲在密歇根大学得到批量折扣，他的三个半学位都是在这里拿的。他的博士学位是通信科学，因为他们认为计算机只会是短暂的流行，他是在四十四年前获得博士学位的。他与我母亲为了获得那个学位作出了巨大的牺牲。他们要抚养刚出生的哥哥，要为了生活锱铢必究。母亲用打字机敲出了父亲的论文，对于计算机科学论文而言，这让人有点尴尬。我戴的这顶天鹅绒帽是我父亲的。这张文凭，和你们即将拿到的一样，是我父亲的。&lt;/p&gt;&lt;p&gt;我的祖父在密歇根弗林特的雪佛兰工厂工作，他是装配线上的一名工人。他曾开车带着他的两个孩子来到这里，并告诉他们：以后你们要来这上学。我知道现在听着有点好笑，不过他的两个孩子确实都是从密歇根大学毕业的，这就是美国梦。他的女儿，贝芙丽，今天也和我们在一起。我的祖父经常扛着一个「空中接力」锤，重重的铁管上焊一大坨铅，工人们做这些铁锤用来在静坐罢工时保护自己。当我小时候，我就用那个大铁锤在地上砸砸树桩什么的。还好，现在人们不再需要扛着个笨重的大家伙保护自己了。但是今天，为了以防万一，我还是把它带来了。&lt;/p&gt;&lt;p&gt;我父亲后来成为了密歇根州立大学的教授。我是个非常走运的孩子，因为教授的生活作息是弹性的，他有大量的时间和我在一起，哪有什么比当大学里的顽童更好的培养方式呢？&lt;/p&gt;&lt;p&gt;所以，我想告诉大家，回到这里不仅仅是回家看看，我难以表达出站在这里的自豪，与我母亲、我哥哥、我的妻子露西，还有你们大家在一起。这所神奇的学校是我存在的原因，我为你们感到兴奋，为你的亲朋好友骄傲，我们都加入了伟大的、大密歇根家庭，它是我生命中不可缺少的一部分。&lt;/p&gt;&lt;p&gt;我非常清楚你们坐在座椅上，听一些老家伙废话连篇地做毕业典礼演讲的感受，别担心，我会很简短。&lt;/p&gt;&lt;p&gt;我会讲个关于追寻梦想的故事，更准确地说是，是找到一条道路，让这些梦想成真的故事。&lt;/p&gt;&lt;p&gt;你们知道，午夜伴着鲜活的梦醒来是什么感觉吗？如果床边没有纸和笔把梦记下来，第二天早上它就会完全消失吗？&lt;/p&gt;&lt;p&gt;我23岁的时候，就做过这样一个梦。我突然醒来，想：如果我能把整个互联网下载下来会怎么样，只保存链接……，我抓起笔就开始写。有时候从梦中醒来并停止做梦是很重要的（只有梦想是不够的）。那天晚上我花了半夜的时间描绘了细节，并说服自己它能干点什么。随后，我就告诉了我的导师特里·温诺格拉德，我要花两周时间下载整个网络。当时他点了点头，其实他完全知道要花更长的时间，但他很睿智，并没有告诉我。年轻人乐观主义精神的作用通常会被低估！令人吃惊的是，当时我没有想过要构建一个搜索引擎，这一概念甚至没有进入我脑海。但后来，我突然想到了更好的给网页排序的方式，以形成真正的搜索引擎，谷歌就这样诞生了。&lt;/p&gt;&lt;p&gt;当一个真正伟大的梦想出现时，抓住它！&lt;/p&gt;&lt;p&gt;我在密歇根大学上学时，我曾经学习过「如何梦想成真」。我知道这听起来有些可笑，但那是我在一个名为「塑造领导者」的培训项目中学到的。看，有几个参加的也在这儿。该项目的口号就是「合理的忽视不可能」。&lt;/p&gt;&lt;p&gt;那个项目在那时候激励我追寻疯狂的想法：我想在校园内建造一套个人快速交通系统以代替公共汽车。我听说你们还在研究这个事情，我当时想那是我们未来解决交通问题的方式。我直到现在还在思考很多有关交通的问题。不要放任梦想，而要把它当作一种习惯去培育。人们现在辛辛苦苦做的很多事情，如做饭、保洁、开车，今后占用人们的时间会少得多。也就是说，如果我们「合理的忽视不可能」，就能找到新的解决方案。&lt;/p&gt;&lt;p&gt;我认为，实现雄心勃勃的梦想更为容易，我知道这听起来像是一派胡言，但是，正因为别人都不够疯狂，你的竞争就很少。事实上这么疯狂的人少的可怜，以至于我和他们都很熟。他们都像狗群一样旅行，如胶似漆的混在一起。&lt;/p&gt;&lt;p&gt;最优秀的人想要最大的挑战，这就是在谷歌发生的。我们的使命就是组织全球的信息，让人人可得，随时可用。这想法怎能不让你激动？但实际上我们差点没有创办谷歌，因为谢林和我都太担心从我们的博士项目中退出，好像你们都不存在这个问题了（台下的都毕业了）。&lt;/p&gt;&lt;p&gt;如果你们感觉自己像是暴风雨里人行道上的一条蚯蚓，你们可能走在了正确的道路上。这就是我们在刷爆了三张信用卡，从卡车货箱里中购买了硬盘后的感觉，这实际上是谷歌的第一批硬件。家长们，朋友们，多几张信用卡总是有用的（哈哈）。&lt;/p&gt;&lt;p&gt;如果用一句话总结如何改变世界，那就是：致力于虽处困境但依然兴奋前行的事业。&lt;/p&gt;&lt;p&gt;当我读博士的时候，我想做三个项目。感谢我的导师，他对我说，为什么你不先致力于网络呢？他给了我一些非常好的建议，因为即使在1995年，网络已经开始真正发展了。技术，尤其是网络会让你变懒。变懒？我的意思是三人小组写的软件就可以让数以百万计的人使用并受益，但三个人可以接一百万次电话吗？在世界上找到杠杆，你就能够真正变懒。&lt;/p&gt;&lt;p&gt;总之，世界看起来瞬息万变，但实际上这是你们生命中最美好的时光，你们完全可以更疯狂些，追随你们的好奇心，雄心勃勃的去实现它。不要放弃你的梦想，世界需要你们！&lt;/p&gt;&lt;p&gt;最后我想讲个故事：在一个像今天的日子里，你可能会很兴奋，就像刚刚在马戏团被大炮射出，甚至刚感到所向披靡，永远不要忘记这种不可思议的感觉，但同时也要记住，我们和家人、朋友在一起的时刻，记住我们必须做的一些事情，可能让世界产生巨大不同，或者对我们爱的人产生一点小的不同。所有生活给予我们的这些奇妙的可能性，生活也会将之带走。世界瞬息万变，比你想象的要快得多。&lt;/p&gt;&lt;p&gt;1996年三月下旬，我刚刚到斯坦福读研究生不久，我父亲呼吸困难，并去了医院。两个月后，他过世了。我当时完全垮掉了。很多年后，我经历了创业、恋爱和这么多奇异的经历，我总会想起我的父亲。&lt;/p&gt;&lt;p&gt;露西和我去过一个遥远的炎热的小村庄，我们穿过狭窄的街道，那里的人非常友好，但也极度贫穷。人们的洗手间就在房内，排泄物流进了敞开的排水沟，直接进入河流。我们接触了一个因小儿麻痹症而瘸了一条腿的小男孩。我和露西在印度的乡村，那是小儿麻痹症依然存在的少数地区之一，脏水常常直接入口，传染病菌。&lt;/p&gt;&lt;p&gt;我爸爸患有小儿麻痹症，他一年级去田纳西旅行时被传染上的。他在医院住了两个多月，最后不得不由军用飞机 DC-3 送回家。那是他第一次坐飞机。我爸爸写到，「那时我不得不在床上待了一年多才重返校园」。我爸爸一辈子都呼吸困难，小儿麻痹并发症让他过早的离开了我们。如果他今天知道了，即使有了疫苗，小儿麻痹依然存在，他会非常难过，同样他会对印度那里的情况感到难过。我们走过受到污染的下水道，我们的鞋上沾上了小儿麻痹病毒，传染疾病，我们每一步都在传染病毒，病毒就在到处玩耍的孩子们脚下。世界就快要消灭小儿麻痹症了，到目前为止，今年有328人被传染，让我们尽快消灭它吧，可能你们中的某个人会实现这个目标。&lt;/p&gt;&lt;p&gt;我的父亲曾经在弗林特中学1956届90个孩子的毕业典礼上致辞，我最近读了他的毕业演讲稿，我惊呆了。五十三年前，我爸爸说，「我们进入了一个变化的世界，自动化和就业人口变动，教育成为经济发展的必需品，我们会有更长的人生去做我们希望做的事情。因为每周工作时间减少，退休年龄提前，我们希望这是真的。我们或将参与或见证，今天只能在梦想里看到的科学、医学和工业发展。人们说，任何国家的发展，都取决于对年轻人的关爱和培养，如果美国所有的年轻人都像我们一样幸运的得到教育，那美国的未来会更加光明」。&lt;/p&gt;&lt;p&gt;如果我的父亲依然在世，我想他最开心的是，露西和我即将有自己的孩子了。我想他还会因为我没能拿到博士学位而恼怒，谢谢了，密歇根大学！（还不快给博士学位）。&lt;/p&gt;&lt;p&gt;我的父亲是一位对新事物充满洞悉力和激情的人，直到现在我依然想知道他对一些新事物的看法。如果今天他也在这里，那会是他生命中最好的日子之一，他会像一个在糖果店里的孩子一样。今天，他会再次年轻！&lt;/p&gt;&lt;p&gt;我们中很多人非常幸运能和家人一起来到这里，我们中有些人会和朋友、家人一起回家。谁知道呢，可能你们中一些人，像露西和我一样，正梦想着自己未来的家庭。就像我一样，你们的家庭把你们带到这里，你们把他们带到这里见证毕业，请和他们保持亲密，记住：他们是你生命中最重要的人！&lt;/p&gt;&lt;p&gt;谢谢你，妈妈！谢谢你，露西！非常感谢大家。&lt;/p&gt;&lt;p&gt;视频：&lt;a href="https://link.zhihu.com/?target=http%3A//v.qq.com/boke/page/y/0/f/y0107i2aj6f.html" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;v.qq.com/boke/page/y/0/&lt;/span&gt;&lt;span class="invisible"&gt;f/y0107i2aj6f.html&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;本文来自微信公众平台「MacTalk By 池建强」，搜索「池建强」关注。&lt;/p&gt;</description><pubDate>2014-05-05T09:06:14+08:00</pubDate></item><item><title>不要做一个果粉</title><link>http://zhuanlan.zhihu.com/p/19741211</link><description>&lt;p&gt;我自己有两部手机，一部是 iPhone5，另一部也是 iPhone5……&lt;/p&gt;&lt;p&gt;骚瑞，最近看鲁迅先生的「枣树」文体看多了，一不留神就写成了枣树体。实际情况是，一部是 iPhone5，另一部是米3。每次我用米3发微博的时候就会有人在评论中善意的留言：Mac 君你不是果粉么，怎么会用 Android 手机呢，还是小米？&lt;/p&gt;&lt;p&gt;每次遇到这种情况我就特别想回敬一句，你才果粉，你全家都果粉哦！但是由于肩膀头扛着「院长」「池老师」「技术写作者」「70后程序员」这些换不来半毛钱的虚名，我只能站在技术与人文的十字路口说一句，「呵呵」。&lt;/p&gt;&lt;p&gt;我不是果粉，以前不是，现在不是，未来也不会是。我希望我的读者也不要做一个果粉。&lt;/p&gt;&lt;p&gt;粉丝在我的印象里一直和海带一样，都是用筷子夹着吃的，用勺子还容易弄满脸汤水。后来不知道什么时候，这个词和国外的「fans」挂在了一起，于是粉丝从一根长条食品演化成了具备四肢和身体但缺乏独立思考大脑的人类。他们迷恋这个，代入那个，唯独放弃了自己。&lt;/p&gt;&lt;p&gt;进入互联网时代以后，这个现象变本加厉，发展成了粉丝营销、粉丝经济和粉丝产业。除了影星、歌星和各种网络红人，电子产品的使用者也被扣上了粉丝的帽子，比如果粉（喜欢使用苹果产品的用户）、米粉（喜欢使用小米产品的用户）等等。人们常说，粉丝常有而疯狂不常有，也就是说，很多人希望粉丝越疯狂越好，因为相伴粉丝而来的往往是「不理智」「狂热」「没法客观的看待问题」等等。&lt;/p&gt;&lt;p&gt;作为明星和产品公司，当然乐得见到台下千百双手在我面前挥舞，终于拥有了千百个热情的笑容。但是，如果你是台下的人……胳膊挥累了，笑容暗淡了，剩下的除了令人愉悦的忧伤之外，还有什么呢？&lt;/p&gt;&lt;p&gt;尽可能不去当一个粉丝，或者说，至少要做到25岁以后不去当一个粉丝。每个人在成长的过程中都需要灯塔和偶像，有了灯塔的照耀和偶像的指引，年轻人会少一些迷茫，多几许勇气，但是想要成长为一个真正的独立的人，要想创造自己的世界，你最终会把这些偶像和灯塔恭恭敬敬的请在某个历史的位置上，在他们的注视下完成自己的使命。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;路遥曾经写过：所有你尊敬的作家都可以让他们安坐在远方历史为他们准备的「先圣词」中，让他们各自光芒四射地照耀大地。但照耀你的世界的光芒应该是你自己发出的。&lt;/p&gt;&lt;p&gt;冯唐曾经写过：个人和全体古人的关系，应该是昆仑山上一棵草和昆仑山的关系。在长出草之前，需要先爬昆仑山……是时候长自己的草了，不是杜甫的草，不是李白的草，是自己的草。这个时候，长一寸，也是把昆仑山增高一寸，也比自己在平地蹦跶一米，高万丈，强百倍。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;所以，如果你已经超过25岁了，还在充当各种类型的「粉丝」，那么，是时候反思一下了。因为，再不反思就老了。所谓人生元编程，就是这个道理。&lt;/p&gt;&lt;p&gt;最后再来说说「果粉」，关于这个词，我是很反感的，所以在书中或文中少有提及。粉丝本身就是不理智的，否则不会产生粉丝经济，而程序员最要命的就是太理智了，所以我们很少和「粉」拉上关系。当然，我们也不得不承认，在程序员群里存在一小撮不安分的异类分子，他们常常对某种技术或产品充满狂热，如果有人胆敢吐槽他们喜欢的东西，他们就能掏刀子和人家拼命。对于这样的童靴，我的建议是：用棍子，这样法院会判的轻一些。对于那些卖血卖精卖腰子买 iPhone5的，好吧，你赢了！&lt;/p&gt;&lt;p&gt;这时候估计有头脑不清醒的读者就要问了，既然你不是果粉，没事就 MacTalk 这是什么情况？&lt;/p&gt;&lt;p&gt;很简单，我们只是希望把时间「浪费」在那些美好的东西上，把自己觉得好的东西介绍给大家，至少不是坏事。就像你远远的看到一个美女，你会击节赞叹并目不转睛，这是欣赏。如果你开始搜集人家的所有信息并跟踪拍照，这就是变态了。&lt;/p&gt;&lt;p&gt;上次在支付宝讲座有个朋友问我，写了这么多 Mac，你觉得 Mac 有什么不好的地方吗？当然有，比如 MacBook 的散热问题，冬冷夏烫问题，Wi-Fi 不稳定问题，热点共享失效问题，长时间不关机（一个月）就会出现各种莫名其妙的问题，等等等等，OS X 远远不是一个完美的 OS，只是一个好用的 OS，而且好处远远多余缺陷，就是这样。请允许我为自己的冷静和客观点个赞！&lt;/p&gt;&lt;p&gt;我不是果粉，我希望你也不是。&lt;/p&gt;&lt;p&gt;我只是在追寻一些美好的东西而已，偶有收获，便会停下来唠叨几句，然后起身继续上路。&lt;/p&gt;</description><pubDate>2014-04-29T15:12:49+08:00</pubDate></item><item><title>云端的钥匙串</title><link>http://zhuanlan.zhihu.com/p/19740351</link><description>&lt;p&gt;上一篇写了「互联网安全，普通网民无可奈何之痛」之后，很多朋友问如何管理自己的密码。现代世界，互联网服务几乎渗透了人类生活的方方面面，无论你向左走还是向右行，密码管理都成为躲不开的问题。想当年「左青龙，右白虎，一串钥匙挂腰间」的日子一去不复返了，现在你得依赖云端的「钥匙串」。&lt;/p&gt;&lt;p&gt;关于密码使用的一些基本原则，我在上一篇文章中介绍过，摘录如下：&lt;/p&gt;&lt;p&gt;1、密码不要过于简单，比如123456或你的生日等，大小写字符+数字，算是合格的密码。&lt;br&gt;2、不要一个密码走遍天下，你应该为不同类型的网站准备多套密码方案，分级使用。&lt;br&gt;3、首次使用某些软件系统（比如路由器），一定记着改掉初始密码。&lt;br&gt;4、如果可能，采用密码管理工具，比如1Password，Keychain 等。&lt;/p&gt;&lt;p&gt;既然密码是刚需，那么一定会有聪明人通过软件来满足这个需求，所以我们今天主要聊聊最后一点：密码管理工具。&lt;/p&gt;&lt;p&gt;上文中提到的1Password是一款跨平台的收费密码管理软件（OS X、iOS和 Windows），很好用，但我今天并不准备介绍它，因为这家公司并没有给我推介费。有人说了，库房管理员库克同志同样没给过你一个子，你还不是巴巴的讲那么多 Mac 的事儿？&lt;/p&gt;&lt;p&gt;这……Mac 君思来想去，只能在未来的某一天和他算这笔总帐了。&lt;/p&gt;&lt;p&gt;今天我准备给大家介绍一下云端的钥匙串：iCloud上 的 Keychain，是 Mac 上的原生应用。&lt;/p&gt;&lt;p&gt;OS X 在升级到10.9（Mavericks）的时候增加了一个 Keychain（钥匙串）的功能，可惜很多 Mac 用户升级时可能没有注意到这一点。&lt;/p&gt;&lt;p&gt;写到这我忍不住要插播一句，很多人的处事原则是，给不了解的东西固执的打上否定的烙印，而不是去试着了解。这种态度会让你错过很多风景。比如我一直以为《MacTalk·人生元编程》是给老爷们看的，没想到很多如花似玉的女读者一样捧在手中细细阅读，于是错过了很多人面桃花和MacTalk 交相辉映的美景。这个教训告诉我，永远不要低估女同胞的理解能力和分享能力，如果你还有这样的风景，请尽快发给我，不要犹豫，世界就在前面等你。&lt;/p&gt;&lt;p&gt;插播完毕！&lt;/p&gt;&lt;p&gt;那么什么是 iCloud Keychain 呢？这是一个云端的密码管理软件。既然记密码是一件让人头疼的事情，那么就让软件去记好了。iCloud Keychain 会为你记住用 Safari 访问过的网站的用户名和密码、你的信用卡信息和 Wi-Fi 网络信息。它将你的网站用户名和密码储存在经过你许可的 Mac 和 iOS 设备上，并使用可靠的 256-bit AES 技术进行加密保护，Apple 也无法读取，还能让它们在每部设备上保持最新状态和实时更新。它还会在你需要的时候自动生成密码，或自动填写密码相关的信息。&lt;/p&gt;&lt;p&gt;总之，有了 iCloud Keychain，你就不用再去记那些该死的密码了。那么，怎么去使用这个钥匙串呢？&lt;/p&gt;&lt;p&gt;1、在 Mac 上打开系统偏好设置-iCloud，让右侧的钥匙串选项处于选中状态。在其他 iOS 设备上同样操作。&lt;br&gt;2、没有第二了，正常的去登录你的网站和设置 Wi-Fi 密码就好了，系统会接管一切。&lt;/p&gt;&lt;p&gt;当你第一次注册某个网站并输入密码时，Keychain 会为你自动生成不同安全等级的密码，等你下次登录时系统根据账户名自动填充。&lt;/p&gt;&lt;p&gt;你可以采用 Keychain 自动生成的密码，因为这些密码你自己都记不住，更不用说透露给你的敌人了。&lt;/p&gt;&lt;p&gt;当你想知道这些密码的时候，也很容易，打开 Safari - 偏好设置 - 密码，输入你想知道的网站密码，比如 &lt;a href="https://link.zhihu.com/?target=http%3A//apple.com" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;apple.com&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;，系统就会检索到你在这个网站的所有账户和密码，密码以······的方式展现，点击左下角的「显示所选网站的密码」，系统会提示你输入 Mac 用户的密码，之后就可以看到该网站的密码了。&lt;/p&gt;&lt;p&gt;当然，如果你自己的密码已经是分级并成体系的，不用 Keychain 自动生成密码也没问题，反正系统会为你记住它的。&lt;/p&gt;&lt;p&gt;一次使用之后，无论是网站密码，Wi-Fi 密码，还是信用卡信息，系统都会记在心里，并贴心的在你的各个终端设备上同步。你不会找到这么好的密码管家了。再也不会因为忘记密码被妈妈打！&lt;/p&gt;&lt;p&gt;有关钥匙串的详细信息，大家可以参考以下网址：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//support.apple.com/kb/HT5813%3Fviewlocale%3Dzh_CN" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;iCloud：有关 iCloud 钥匙串的常见问题&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;</description><pubDate>2014-04-28T14:26:47+08:00</pubDate></item><item><title>写个好简历</title><link>http://zhuanlan.zhihu.com/p/19730216</link><description>&lt;p&gt;今天的文章是我的好朋友程显峰的一篇力作。最早知道程显峰是在微博上，他在 MongoDB 最热的时候翻译了一本《MongoDB权威指南》，还创办了 MongoDB 中文社区。由于大家都是做技术的，在微博上有些互动，慢慢的熟悉起来。当然，那时候 MongoDB 的创始人还没有意识到，自从地球那一边的程显峰开始鼓捣和推广 MongoDB 之后，MongoDB 就开始走下坡路了，以前和 Redis 在NoSQL 领域齐头并进，现在已经落于人后，个中秘密，我是不会告诉他的……&lt;/p&gt;&lt;p&gt;第一次和程显峰见面应该是在一个 Hadoop 相关技术大会上。他是海归，所以想像中这该是个谦谦君子温文尔雅满口E文洋气肆意的主儿，结果在会场上一见面他就跑过来说：「老池，你干哈呢？」，东北大碴子味瞬间洋溢在整个技术会场的上空，让人倍感亲切。显峰有各行各业的朋友，自己也在不停的折腾，去年离开了一家创业公司，现在又在积木盒子重新创业征程，创业免不了招聘和简历，这一篇文章就是他用自己的经历和经验，定义了什么是好的简历，如何去写个好简历。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;注：自从知道途牛网的美女 HR 都在读《MacTalk·人生元编程》之后，我决定在后续的文章里再谈一些职场相关的话题，用来强力提升 MacTalk 女性读者的数量。我的梦想之一是某一天女读者的比例超过了 30%……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;以下是原文：&lt;/p&gt;&lt;p&gt;之前写过应届毕业生简历的常见问题（Google 「应届生简历的常见问题」），很多人觉得我太苛刻，觉得对应届生要求有点高；有的觉得看了后还是不会写。那么今天我们就来看看怎么才能做好。需要声明的是我帮不了太多人，只有那些对计算机科学真的有点兴趣的人可能觉得我说的有点用。这里写的东西仅仅是我们的观点，不代表别的公司也这么做或者应该这么做。&lt;/p&gt;&lt;p&gt;一、没有必要撒谎&lt;/p&gt;&lt;p&gt;写简历最差的策略就是撒谎了。这种欺骗本身就自相矛盾。你到底希望和聪明人共事呢，还是笨人呢？大多数人希望和聪明人共事，但是聪明人你骗得了么，或者说被你骗了的算是你认为的聪明人么？你要和想找好工作，基本假设就是大家都是明白人不好骗的。看简历的人也上过学，也写过简历，更清楚其中的注水手段，以为自己能吹牛过关，大部分都是自取其辱。即便你过了简历筛选一关，也没那么容易，面试时候肯定会问你那些你写的东西，你答不上来，面试官还会觉得你人品有问题。有的同学说多参加几次面试不好么，好，但不能用这种方式，这完全就是自毁前程。&lt;/p&gt;&lt;p&gt;二、看你简历的那个人&lt;/p&gt;&lt;p&gt;某种程度上他在暗你在明，他了解的信息更多，信息非常不对称，应聘者处于劣势。他可以看到很多很多类似的简历，他会有一种“高频词麻木”的特征。你和别人都一样显然不能引起他的兴趣。而且看你简历的人，比如说我，都会有种自我膨大的感觉，喜欢寻找当年的自己，希望发现充满乐趣，积极向上的人。这实际上是看简历的人的一种自恋的想法，觉得自己当年如何如何，其实就像我当年也是一塌糊涂，但也会觉得自己当年伟光正。所以表现出来乐观积极是非常讨喜的。一篇充斥着无数“高频词”的简历，显然不能传达这种信息。&lt;/p&gt;&lt;p&gt;三、陈述事实&lt;/p&gt;&lt;p&gt;我觉得平白陈述就好了，不要有个人色彩。你觉得是精通，我可能觉得就是了解；你觉得是掌握，我可能觉得就是清楚概念。所以不要有这类词汇。你写“用Ruby写了自己的个人站点”这个没有什么可以辩驳的，也非常好证实。是不是你写的，怎么写的，遇到什么困难都能很容易知道。“用C写了数独解算器”就很平实，我知道你做了什么，会做什么。“读了SICP”，“做了50道《算法导论》的习题”，“看了nginx的一部分源代码”，“自己写了wc”都比“精通”，“掌握”之类的强多了。陈述就可以了，不要描绘。&lt;/p&gt;&lt;p&gt;四、你的作品&lt;/p&gt;&lt;p&gt;我因为简历的一句话面试了好多同学。有个同学写“用C++实现了Python解释器”，这个事情我做不到，所以我特别想找他来聊一聊，教教我编译原理的事情。很多计算机系的同学都学过《编译原理》，但绝大部分人什么也没写过。所以只要有这点，我就觉得他是个很特别的人，我很喜欢。有个同学写“在spoj有积分XXXX”，我立刻觉得应该找来聊聊，因为他的积分比我多。他一定是个爱做题，善于做题，并且善于用计算机解题的家伙，他非常可能会灵活运用各种算法。有个同学写“写了将近50个小游戏，包括俄罗斯方块，吃豆子，黑白棋等”，我觉得真是太棒了，这个家伙一定特别能专研，特别乐于娱乐自己，我要见一见。有个同学写“使用Python写了个分词小工具”，很好啊，这个说明了两点：你会用Python解决问题，你知道分词是什么东西，我们可以聊聊啊。我会因为简历里面的闪光点而想见见这个人，而不是简历的长度。你的作品是你最好的标签。&lt;/p&gt;&lt;p&gt;五、你看的书，你读的代码&lt;/p&gt;&lt;p&gt;把你看过的书列出来，把你看过的代码列出来。没看完就写上没看完。也可以写一个豆瓣主页的链接。有些小白真的是你让他可劲编都说不出来几个书名，然后还号称“精通”。你看过哪些开源项目的代码呢？什么也没看过？！那我怎么知道你写的东西靠谱呢？要知道这些读书的记录，读代码的记录，是非常难于伪造的，所以也是各位看官最重视的。你能随便伪造的东西别人也能，这种过硬的记录才是区分度最大的。没有实际的项目经验不可怕，但是总该看过几本书吧，总该看过一些代码吧。什么都没见过的人我不太相信对计算机有热情，恐怕在这个行业也很难有所发展。&lt;/p&gt;&lt;p&gt;六、你的学习路线&lt;/p&gt;&lt;p&gt;你怎么获取知识？你是维基百科，stackoverflow的用户么？你有github账号么，关注自己感兴趣的项目了么？你阅读谁的blog，加入什么邮件列表，参加了什么线下交流活动？你想成为什么样的程序员，你知道谁是这样的程序员？你混开源社区不？你对自己的学习状况满意不？你还希望学习什么？&lt;/p&gt;&lt;p&gt;七、你的网页&lt;/p&gt;&lt;p&gt;你没有网页？你是程序员么？你真的要当程序员？有个女孩子做个了自己的网站，进去后先是一个数独题目，答对了才能看到个人信息。后来发现这个女孩子还会说克林贡语，程序写得非常好。她展现出她是个很有趣的人，你也要这样。你花一天时间在heroku之类的网站做个自己的介绍页面。将你的个人信息都放上去，有很多很多链接，都是关于你的项目，你的作品，你的思考，你的心得。有人给我的简历就是一个大大二维码，扫描之后就是个人主页的链接，有着很详细的介绍，真的非常棒！&lt;/p&gt;&lt;p&gt;八、你不知道但想知道的东西&lt;/p&gt;&lt;p&gt;有时候表示无知能更清楚的表达自己。比如说“还不太清楚spinlock的原理”，“多模字符串匹配还是有些疑惑”，我们就知道你是个用心深入学习的人。这个比吹嘘的笔法实在多了，但是注意啊，这种也不能乱用，后果你知道的。&lt;/p&gt;&lt;p&gt;九、如何投递简历&lt;/p&gt;&lt;p&gt;说句实在的，你和别人一起投简历已经是比较失败的了。因为即便你很出色，也被埋没在大量的简历里面。要懂得营销自己，我会收到一些直接投给我的简历，我也会主动联系微博上看起来有趣的同学，这种沟通真的比一张破纸有效得多。要是一个之前我认识的同学，即便简历写得稍差可能也不会吃亏，这个时候简历已经不重要了。你把命都放在简历上，简历对你的打击自然就大一些。微博上有很多人在你向往的公司，你和他们聊过么，你尝试聊一下了么？你知道他们如果推荐一下的话你会多好过么？&lt;/p&gt;&lt;p&gt;十、没有十了，希望大家都找到好工作&lt;/p&gt;&lt;p&gt;今日题图：Resume by Liz Ryan&lt;/p&gt;</description><pubDate>2014-04-17T22:22:56+08:00</pubDate></item><item><title>互联网安全，普通网民无可奈何之痛</title><link>http://zhuanlan.zhihu.com/p/19723375</link><description>&lt;p&gt;自从有了互联网之后，互联网的安全问题就相伴而生。只要有程序员，就会有代码，只要有代码，就会有漏洞，然后就会有各种白帽子和黑客不断爆出各种漏洞，然后就是扫描、刷库、脱库、升级、修复，一系列组合拳打完收工，接下来等待的是下一次漏洞的降临。&lt;/p&gt;&lt;p&gt;细心的朋友可能已经发现了，那套组合拳是有讲究的，前三招永远在后两招之前，所以大家就不用担心自己的资料被泄露了，因为很可能已经泄露过多次了……一切都是最好的安排。&lt;/p&gt;&lt;p&gt;我个人虽然在软件行业很多年，但毕竟不是安全领域的，对这部分的技术可谓一知半解，或者四分之一解。比如我们为自己的软件产品加了功能权限、数据权限、代理权限、历史权限、密码策略、防 SQL 注入、防跨域攻击、SSL 数据加密等等，但这些措施在专业的黑客或白帽子眼中，基本上是形同虚设的。因为攻击往往来自应用系统的下层，比如操作系统漏洞，中间件漏洞、技术框架漏洞或协议漏洞等等。&lt;/p&gt;&lt;p&gt;所以，为了在江湖上立足，我特意结识了一些少年黑客（或白帽子），比如安全宝的道哥，知道创宇的余弦，还有不远万里没事就跑到中国进行义务教育的加拿大黑客厉哥等。当然，少年是和我相比，他们都是安全领域的行家里手，或老手，各个身怀绝技。并且，这些人估计昨晚都没睡觉，因为昨天互联网爆出了一个高危漏洞：OpenSSL Heartbleed 内存泄漏漏洞。他们几个估计都在挖的挖，堵的堵，补的补，忙的不亦乐乎，至于普通网民，咱们还是踏实睡觉，反正数据就在那里，不多不少。&lt;/p&gt;&lt;p&gt;我在文章开始提到过 SSL，这是互联网最常用的安全协议，作为互联网的用户，如果你访问的网址中有 https 的字样，那么说明这个网站采用了 SSL 协议，你和网站之间传输的数据都是加密的，即使其他人通过技术手段拦截了这些请求和响应，看到的也是密文。SSL 是互联网安全的基石之一，各大网银、支付、交易类网站大都采用了 SSL 协议。&lt;/p&gt;&lt;p&gt;OpenSSL 是一个开放源代码的、实现了 SSL 协议及相关加密技术的软件包，很多厂商都采用了这一技术实现安全数据传输。可以说，基于 OpenSSL 的 SSL 协议是互联网上安全通讯的工业标准，现在 OpenSSL 这个安全软件包本身爆出了内存漏洞，所以导致整个互联网的安全出现了问题。&lt;/p&gt;&lt;p&gt;安全靠锁，现在锁出事了，不是钥匙丢了，而是几乎所有人都可以打开这把锁（理论上）。&lt;/p&gt;&lt;p&gt;这个漏洞名为Heartbleed，译为心在滴血。想来也是，安全套件本身出了问题，无疑等于往心脏上插刀，不滴血才怪。该漏洞会随机泄漏采用了 OpenSSL 服务器的 64K 内存，内存中可能会含有程序代码、安全证书、HTTP原始请求、用户Cookie、邮件等隐私信息，黑客可以反复扫描获取数据进行比对，如果你有的是耐心和细心，那么扫描了足够多的数据之后，就有可能分析出某些倒霉用户的用户名和密码等安全信息。&lt;/p&gt;&lt;p&gt;关于这个漏洞的技术分析，请参考：&lt;a href="https://link.zhihu.com/?target=http%3A//drops.wooyun.org/papers/1381" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;关于OpenSSL“心脏出血”漏洞的分析&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;更为麻烦的是，根据 OpenSSL 的版本记录，这个漏洞在2012年已经存在了，天知道那些黑客已经非法获取了多少用户信息。所以，很多搞安全的朋友告诉我，安全，有时候就是个笑话。&lt;/p&gt;&lt;p&gt;面对如此欣欣向荣的安全产业，做为一个普通网民，除了无可奈何之外，我们还能做些什么呢？其实我们还是可以做一些事情的，针对这个刚刚爆出来的漏洞，我们可以做的是：&lt;/p&gt;&lt;p&gt;1、在这两天不要登录信息敏感的网站，比如网银、支付宝、电商等网站。已经访问了的，如果你足够小心，那么就修改密码吧。虽然通过扫描随机获取到你的账户信息的可能性非常小，一旦命中你，对你来说就是100%。&lt;br&gt;2、等待各大厂商升级软件版本，修补漏洞。因为本身漏洞出在服务器端，我们帮不上什么忙。&lt;br&gt;3、如果软件厂商提醒你升级证书，修改密码，照做即可，注意不要被钓鱼，趁火打劫也是国人特色。&lt;/p&gt;&lt;p&gt;长远来看，我们还可以做的一些事情是：&lt;/p&gt;&lt;p&gt;1、不要使用来历不明的软件，尽可能不使用盗版软件。&lt;br&gt;2、浏览器不要安装乱七八糟的插件，如果安装了，你最好知道它是干嘛的。&lt;br&gt;3、密码不要过于简单，比如123456或你的生日等，大小写字符+数字，算是合格的密码。&lt;br&gt;4、不要一个密码走遍天下，你应该为不同类型的网站准备多套密码方案，分级使用。&lt;br&gt;5、如果可能，采用密码管理工具，比如1Password，Keychain 等。&lt;br&gt;6、首次使用路由器改掉初始的管理密码。&lt;br&gt;7、增强交易类网站的账户保护，比如绑定手机、网银证书、两步验证等。即使别人拿到了你的用户名和密码，也没法造成进一步的伤害。&lt;br&gt;……&lt;/p&gt;&lt;p&gt;最后一条，使用 Mac，会减少你很多不必要的麻烦。&lt;/p&gt;&lt;p&gt;江山如此多娇，令无数黑客竞折腰。到了互联网无处不在的今天，如果你对互联网安全领域的知识还处于一知半解的状态，那么最好赶紧去学习一下，无论是普通的安全常识还是专业技能，能多懂一点是一点，目前互联网安全领域的书籍和资料已经很多了。&lt;/p&gt;&lt;p&gt;另外，可能的话去认识一些安全圈里的朋友，像我一样，虽然同样是羊入虎口，但是由于你认识这只虎，那么效果可能会好一些……&lt;/p&gt;</description><pubDate>2014-04-09T21:06:44+08:00</pubDate></item><item><title>你为什么离开，又为什么回来？</title><link>http://zhuanlan.zhihu.com/p/19713685</link><description>&lt;p&gt;记得三表曾经写过一篇文章，他在文中写道：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;关于微信写作，其实没人拿枪逼着你必须写或必须写几篇，但是作为意志不坚定的作者，通常内心会产生订阅者的心理投射，假设他们是嗷嗷待哺的羔羊，看不到文章就会失魂落魄……于是，你被虚幻的社会责任感绑架，无形之中给自己设定了数量及频率的标尺。（有删改）&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;我觉得三表说的很对，人最怕的就是自个儿把自个儿扶上高墙，本想看看风景，结果下来时掉进了高墙的另一侧，那里是牢笼。&lt;/p&gt;&lt;p&gt;所以说，顺其自然最好。&lt;/p&gt;&lt;p&gt;春节过后是人员转会的旺季，IT 从业者尤甚。一大波人从城东跑到城北，从城西跑到城北，从城南跑到城北，每经过一次节后跳槽的洗礼，我都觉得京城的北部更堵了。北京如此，上广深杭也不例外。公司内部流动，公司之间流动，城市内部流动，城市之间流动。除此之外，还有一部分特殊的人群，他们在某一年的春天卖掉或退掉房子，告别同事和朋友，背起双肩包，离开一线城市，回到家乡，他们准备在自己的家乡或二三线城市重铸辉煌。编程语言、数据库和复杂的业务逻辑都解决了，C10K解决了，C100K 也解决了，现在 C1000K 也能解决了，回家创个业或找个高大上的工作还不是分分钟的事儿。于是他们回了家、结了婚、买了房、生了娃，一切都是那么顺利，除了工作和事业。&lt;/p&gt;&lt;p&gt;地方上林林总总的关系网让程序员们非常不开心，办一件事都得过三道门，人变了，环境变了，办事方式也变了，一切都变了，他们并没有像各种长篇降级论里描述的那样，利用手中的电脑轻轻松松击败传统行业，他们甚至会想起自己在一线城市找 bug 时对着满屏幕代码说的话：我特么到底错哪了？&lt;/p&gt;&lt;p&gt;没有人知道！&lt;/p&gt;&lt;p&gt;于是在某一年的春天，他们告别家乡的亲人、朋友、大小领导，重新背起双肩包，再次回到北上广深杭打拼，直到下一次离开。&lt;/p&gt;&lt;p&gt;你为什么离开，又为什么回来？&lt;/p&gt;&lt;p&gt;很多人分析过，大小道理都有，我不再复述，我想，最重要的可能还是视野吧。我常对家里的小领导说，你看，你一出生，就在祖国的心脏，你三岁去北戴河，四岁看黄河，五岁见长江，六岁达内蒙，七岁飞香港，你爹呢，以老家为圆心画个半径30公里的圆圈，就把老子十五岁之前的活动轨迹覆盖了，比什么比，没法比。&lt;/p&gt;&lt;p&gt;写到这我想起了罗大佑1983年发布的专辑《未来的主人翁》，遥远的旋律和歌词穿过时间和空间的重重迷雾，在我面前再次出现，歌声抑郁、苍凉，歌词清澈、精准，高晓松说，罗大佑是一个时代的预言家，他在三十年前已经为这个时代提前写好了挽歌……&lt;/p&gt;&lt;p&gt;摘录部分歌词如下：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;你走过林立的高楼大厦穿过那些拥挤的人&lt;br&gt;望着一个现代化的都市泛起一片水银灯&lt;br&gt;突然想起了遥远的过去未曾实现的梦&lt;br&gt;曾经一度人们告诉你说你是未来的主人翁&lt;br&gt;在人潮汹涌的十字路口每个人在痴痴地等&lt;br&gt;每个人的眼睛都望着那盏命运的红绿灯&lt;br&gt;在红橙黄绿的世界里你这未来的主人翁&lt;br&gt;在每一张陌生的面孔里面寻找儿时的光荣&lt;br&gt;……&lt;br&gt;飘来飘去 就这么飘来飘去&lt;br&gt;飘来飘去 就这么飘来飘去……&lt;br&gt;我们不要一个被科学游戏污染的天空&lt;br&gt;我们不要一个被现实生活超越的时空&lt;br&gt;我们不要一个越来越远模糊的水平线&lt;br&gt;我们不要一个一个越来越近沉默的春天&lt;br&gt;我们不要被你们发明变成电脑儿童&lt;br&gt;我们不要被你们忘怀变成钥匙儿童&lt;br&gt;我们须要阳光青草泥土开阔的蓝天&lt;br&gt;我们不要红色的污泥塑成红色的梦魇&lt;br&gt;飘来飘去 就这么飘来飘去……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;如果你还有时间，可以坐下来安静的听一下这首歌，想想自己的生活……&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//v.qq.com/boke/page/h/0/4/h0102y6no64.html" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;腾讯播客-罗大佑&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;今日题图：Peter Bowers on Flickr&lt;/p&gt;</description><pubDate>2014-03-29T12:08:21+08:00</pubDate></item><item><title>Go，随风而起</title><link>http://zhuanlan.zhihu.com/p/19712449</link><description>&lt;p&gt;最近琢磨着把我们的平台产品扔到 Docker 上试试，Docker 是运行在 Linux 上的一个轻量级的虚拟容器，简单来说就是 Docker 利用Linux 的 LXC（Linux Containers）和 CGroup 技术为你的应用构建了一个独立的、资源隔离的、轻量级的沙箱，你可以在里面自己动手，丰衣足食，无论怎么玩都不会对整个物理服务器产生影响。虽然 Docker 的政策是闭关锁国，但是你在开发环境和生产环境之间进行应用系统迁移和部署又十分方便。&lt;/p&gt;&lt;p&gt;和传统虚拟机不同的是，Docker 容器并不会包含一个完整的操作系统，而是通过服务器现有的基础设施对资源进行管控的。基本原则就是，你以为自己是自由的，民主的，按需分配的，但其实你的配额是定量的，不作死就不会死的，当然也不排除你表现好的话，系统会再分一些资源给你。&lt;/p&gt;&lt;p&gt;关于 Docker，如果大家有兴趣，我以后可以写个系列。今天主要想说说 Docker 的实现语言：Go。&lt;/p&gt;&lt;p&gt;深入学习一门技术或框架的原则就是去读源代码，Docker 是 PaaS 提供商 DotCloud 开源的容器引擎，任何人都可以到 Github 上下载它的源代码。我拿到 Docker 的源代码后发现，好吧，人家大部分功能都是 Go 语言实现的。Go 语言威名远播，我虽早有耳闻，但却从未真正用过，正好借这个机会好好学习一下。&lt;/p&gt;&lt;p&gt;顺便说一句，技术人员最苦逼的地方就是，当你想学 A 的时候，你发现的不得不先把 B 搞清楚，当你去搞 B 的时候，会牵扯出 C、D、E、F、G，七大姨八大姑和小舅子什么的都出来了，技术之间的依赖关系往往搞得你心烦意乱、心猿意马，最后你会忘记自己的初心是 A。&lt;/p&gt;&lt;p&gt;所以，对于我这种高龄程序员，学完 Go 之后去搞别的并忘掉 Docker 的情况，也是完全可能出现的。&lt;/p&gt;&lt;p&gt;目前编程语言排行榜前三位分别是 C、Java 和 Objective-C，这三门编程语言的 Ratings 都超过了10%，风头正劲。C 不用说了，Unix 和 Linux 都是这货写的，系统级编程语言，无可替代。OC 虽老，却属新贵，随着 iOS 大红大紫。唯有 Java，当年如日中天，如今却显老态，常常为人诟病。其实从语言的发展潜力来看，Java 还远远没有进入老年时代，最多是个中年大叔，语法糖虽弱，但整个 Java 平台博大精深，衍生语言 Scala 和 Groovy 生命力正盛。不过，由于 Java 平易近人的工业语言特点，常常遭到很多半瓶子醋的嘲笑，其实大部分是自嘲，能骂到点子上的少之又少。为什么骂 C 和Objective-C的少呢？因为能把 C 整明白的人大都知道深浅，至于 OC，大伙正忙着学呢，哪有空骂？&lt;/p&gt;&lt;p&gt;与其他语言不同，Go 生于名门望族 Google，一出生就是富二代。2009年11月 Google 正式对外发布 Go 1.0版本，从此宣告了一门新语言的诞生。Google 首席软件工程师罗布派克（Rob Pike）说：我们之所以开发 Go，是因为过去10多年间软件开发的难度令人沮丧。听了老罗这句话，台下很多程序员眼眶都湿润了。&lt;/p&gt;&lt;p&gt;Go 被誉为互联网时代的 C 语言，虽然目前声望还没法和那三位老大哥相比，但是程序员和极客们都对其寄予厚望。当然 Go 也没让大家失望，这几年发展迅猛，国内外很多厂家已经开始把 Go 语言用于生产环境，很多开源项目也开始用 Go 实现（比如 Docker）。最重要的一点是，据说 Go 的最佳开发平台是 OS X，其次是 Linux，最后是 Windows。这一点没什么可说的，因为我很早就说过，Mac 才是程序员的开发利器，Go 只是又一次印证了这一点而已。&lt;/p&gt;&lt;p&gt;经过几个晚上的学习和实践，我觉得我会喜欢上这门语言，令人印象深刻的语言特性有这么几个：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go 是一门系统级的编程语言，理论上 C 和 C++能干的事，Go 也干得出来，而且实现起来更加简单，如果 Go 愿意，也可以写个操作系统出来。&lt;br&gt;&lt;/li&gt;&lt;li&gt;支持 GC（垃圾收集），无论是 GC 还是引用计数，这部分的功能应该是现代编程语言必备的，我们最好相信编译器，而不是人。&lt;/li&gt;&lt;li&gt;全新的静态类型语言，犯错的几率大大减少，同时具备动态语言的特性，无论是从 C、Java 或 Python 转过来都会感觉很舒服。&lt;br&gt;&lt;/li&gt;&lt;li&gt;针对并发、多核和大规模集群的语言，goroutine的设计相当有趣，这部分需要好好理解一下。&lt;br&gt;&lt;/li&gt;&lt;li&gt;更为丰富的内置数据类型，相对其他语言，增加了 map（字典）和 slice（数组切片），同时从语法层面进行了支持。&lt;br&gt;&lt;/li&gt;&lt;li&gt;函数的多重返回值，这一点是程序员们千呼万唤的功能，这次 Go 有了。&lt;br&gt;&lt;/li&gt;&lt;li&gt;基于关键字 defer、panic 和 recover 的异常处理机制，处理过程中使用了多重返回值的语法糖，defer 实现了类似 Java 里的 finally 功能，这部分的设计非常新颖。&lt;br&gt;&lt;/li&gt;&lt;li&gt;闭包，现代语言必备&lt;br&gt;&lt;/li&gt;&lt;li&gt;无继承的接口方式，方法的定义和类型的定义可以在完全不同的地方进行，还可以为现有类型动态添加新的方法，这一点有点像 Objective-C 中的 Category&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;……&lt;p&gt;一般来说，一种语言从诞生到广泛关注和应用，至少需要十年光景，而 Go 只用了几年时间就走到了这一步，着实令人惊叹。Go 诞生于网络、多核、高并发和大集群的时代，这是 Go 的机会，也可能是你我的机会。&lt;/p&gt;&lt;p&gt;Go，可以说是一门随风而起的语言，了解了 Go 之后，我们就知道，很多风口的东西，不一定是猪！&lt;/p&gt;&lt;p&gt;如果你也想试试这门语言，那么可以访问【&lt;a href="https://link.zhihu.com/?target=http%3A//go-tour-zh.appspot.com" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;Go 指南&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;】，在线学习。&lt;/p&gt;</description><pubDate>2014-03-27T20:38:48+08:00</pubDate></item><item><title>跑步，根本就停不下来</title><link>http://zhuanlan.zhihu.com/p/19710450</link><description>&lt;p&gt;我从小到大一直都很喜欢运动，但受限于身体素质，无法成为专业运动员，此为人生一憾。&lt;/p&gt;&lt;p&gt;小学的时候最喜欢打乒乓球，还受过几天专业训练，凭着这点老底子撑到大学还能去打打校级比赛。&lt;/p&gt;&lt;p&gt;从初中到大学这段时间则疯狂的迷恋足球，喜欢球王马拉多纳和风之子卡尼吉亚，热爱荷兰三剑客和德国三驾马车，同时是巴乔、巴蒂斯图塔、欧文、劳尔和罗纳尔多的球迷。我不仅看，而且下场踢，虽然踢的烂，但是特别喜欢踢。很多人看了我踢球的技术之后表示不明觉烂，大哥你说自己踢了这么多年球谁信呢？谁能证明，肯德基能证明吗？原味鸡能证明吗？土豆泥能证明吗？香芋派能证明吗 ？这时候我就会慢条斯理的拿出眼镜布擦拭我厚厚的近视眼镜：飘飞的镜框和碎裂的镜片能证明！&lt;/p&gt;&lt;p&gt;工作以后踢球的机会越来越少，场地是问题，体力是问题，凑不齐人是最大的问题，慢慢的，虽然没有仪式，但是我已退役。我退役之后，我喜爱的那些球星也相继退役了，早知道如此，我就退的晚一点了……&lt;/p&gt;&lt;p&gt;离开足球之后打了一段网球，发现这玩意很难控制，而且找不到志同道合的小伙伴，遂放弃。终于，2007年，公司搬到了新落成的用友软件园，其中有一座漂亮的体育馆让人赏心悦目，我终于找到了新的运动方式，羽毛球。&lt;/p&gt;&lt;p&gt;羽毛球是一项室内运动，易学难精，刚开始打总是输的劈头盖脸意兴阑珊，但是我能厚着脸皮坚持打，一边打球一边学习，看别人打，看视频打，看林丹和李宗伟打，慢慢的水平开始提升，越打越有兴致，一直坚持了八年。这也从侧面印证了我那句话：兴趣没你想象的那么重要。羽毛球的故事我以前写过，想看的直接去文末点击「阅读原文」。&lt;/p&gt;&lt;p&gt;到了今天，羽毛球还在打，我又增加了一项新的运动形式：跑步。&lt;/p&gt;&lt;p&gt;这件事还要从去年的百度年终技术沙龙说起，那次我去参加了 InfoQ 和百度组织的「技塑人生」活动，大家扯了一些和技术不相干的东西。倒数第二上场的是百度的跑者「阿勇爱跑步」，他讲的非常好，幽默有趣，有奖牌有妹子有腹肌，声情并茂，如果不是后面还有一个老家伙出场，就完全镇不住场子了。会后我认识了这个爱跑步的家伙，加了微信，许下了互相联系的誓言。后来他就不停的在朋友圈发各种跑步的信息，去颐和园跑，去地坛跑，去天坛跑，在北京跑，在杭州跑，慢慢我就知道了，这家伙是专业跑步的，业余百度的。后来见了面我问他这个问题，他沉吟了半晌，说，百度也挺忙的……&lt;/p&gt;&lt;p&gt;后来被阿勇拉进了百度跑鞋微信群，不对，是跑协，里面有一群帅哥美女，每天像神经病一样跑来跑去，边跑边喊，好爽啊。于是我被感染了。决定跑步。&lt;/p&gt;&lt;p&gt;在我刚刚做了这个决定之后，就收到了阿勇寄来的书《一个人去跑步》《爱上跑步的十三周》，好吧，尼玛不跑都不行了。&lt;/p&gt;&lt;p&gt;于是我选择了周末在奥森跑步。跑了几次之后，初步感受是：根本就停不下来！在空气质量好的情况下，奥林匹克森林公园简直是跑步的最佳场所，清晨的微光，颤动的树梢，柔和的跑道，跑道上充满活力的帅哥美女和男女老少，跑动中的一切都那么美好和灵动。跑步产生的天然鸦片和兴奋剂「内啡肽」会让你愉悦一整天，你会忘记自己的年龄，忘记时间，忘记疲劳，忘记烦恼，一路奔跑！&lt;/p&gt;&lt;p&gt;跑步是成本最低的运动之一，你只需要一双好鞋，一点时间和一个健康的动机就可以上路了，至于跑步的注意事项、时机、技巧，我还在学习中，希望以后有机会再和大家分享。&lt;/p&gt;&lt;p&gt;最近我常常回顾之前走过的路，去掉那些故事、案例和失败的经验之外，乏善可陈，唯一值得拿出来说说的就是，我能够坚持一些东西。几十年过去了，最基本的价值观没有变，然后坚持写了十几年程序，坚持打了八年羽毛球，坚持写了一年多的文字。&lt;/p&gt;&lt;p&gt;坚持其实只是一种选择，可能是好事，也可能是错觉，在跑步这件事上，我希望自己同样能够坚持下去。&lt;/p&gt;&lt;p&gt;每个人都应该找到值得自己坚持的东西，如果你还没找到，那么开始跑步吧。&lt;/p&gt;&lt;p&gt;点击{ &lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/%3Fp%3D455" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;总有一种运动适合你&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; }，阅读我之前写的两篇和运动相关的文章。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;人生就像跑步，不论你高矮胖瘦，有天赋没天赋，都可以从零做起，慢慢的成长起来；人生就像跑步，那些高手，你没必要羡慕，它们能在跑道上挥洒自如，是因为他们付出了比你多得多的努力和汗水；人生就像跑步，不需要那么多废话，一切靠实力说话！——来自跑步指南。&lt;/p&gt;&lt;/blockquote&gt;</description><pubDate>2014-03-25T13:46:50+08:00</pubDate></item><item><title>根本停不下来 - 老池老友记侧记</title><link>http://zhuanlan.zhihu.com/p/19704806</link><description>&lt;p&gt;昨天是2014年3月16日，对于 Mac 君来说，人生又上了一个新台阶。闯荡江湖几十年，我参加过很多次技术分享、论坛、演讲、捧哏、逗哏、走进 XXX，但参加签售会还是大姑娘上轿，头一回，而且第一次参加就是自己的签售会，幸福总是来的那么突然。&lt;/p&gt;&lt;p&gt;自从人邮出版社的杨海玲老师和 InfoQ 的霍泰稳告诉我要联合举办一个「老池老友会」的活动，我的心就开始变得不平静起来，在编码和码字的时候内心常常泛起涟漪，我知道，找到存在感的日子越来越近了。&lt;/p&gt;&lt;p&gt;男人在家里常常是没有存在感的，无论你出了门怎么呼风唤雨，在家还是乖乖扮猫泽西比较好。据说这样的家庭都是幸福的，而不幸的家庭各有各的不行。比如小道君，我请他参加这次活动时，他表示了非常希望出来走走，但是要家中领导同意才行。比如道哥，基本上是不能在外面吃晚饭，在外面过夜这种话根本就不能提。比如给我写过序的二爷鉴书（邱岳），名头响边苏杭：二……爷，在家一样要跪键盘的，一样二不起来。&lt;/p&gt;&lt;p&gt;我也没好到哪去，临出门前，我说要去老池老友会签售了，大领导说：把桌子擦一下再走，早去早回。小领导说，爸爸，请带两包牛奶味威化卷心苏回来，别忘了，牛奶味哦。你们就知道，存在感一定要到外面去找，还好，这次找到了。&lt;/p&gt;&lt;p&gt;我是12点左右到的3W 咖啡， 其时 InfoQ 和人邮的朋友们已经在忙里忙外了。寒暄之后没多久，小道君、道哥也风尘仆仆的赶了过来，小道君依旧保持儒雅风范，道哥则骨骼精奇，估计安全宝把他累的不轻。然后我们就开始等三表，很快三表发来消息说马上就到。大家送了一口气，接着就收到三表的第二条消息：「我去，和师傅说去第三极，结果师傅去了西三旗」，听到这个消息之后我们几个都开始为中国脱口秀艺人的未来发展有忧心忡忡。&lt;/p&gt;&lt;p&gt;虽然难过，饭还得吃，大家匆匆搞定午餐之后直奔会场，1点钟左右会场已经满了，很多朋友等着签售，我在InfoQ 美女Jessie和当当的带领下来到签售地点，然后大伙开始排队签售，其实签售过程是很枯燥的，一般都是握手、打开书、签字、送书、合影，大牌作者估计早就烦了，而我却乐此不疲的享受这个过程，不断的站起来和各种类型的帅哥美女握手合影，不断的坐下签字，疲劳并不能打败我，被那么多人包围着你会产生一种虚幻的错觉，那就是，根本停不下来！&lt;/p&gt;&lt;p&gt;在签售过程中有人告诉我，三表来了，我很欣慰。另外我的高中同学和洪恩的老领导也如约而来，开心。&lt;/p&gt;&lt;p&gt;下午两点活动正式开始，会场里已经黑压压的坐满了人，人数明显超了，一些朋友在后面站着。泰稳开始宣布活动开始。&lt;/p&gt;&lt;p&gt;霍泰稳是这次活动的主持人。我和泰稳相识甚早，亲眼见证了泰稳从一个编辑成长为 InfoQ 中国掌门人的全过程，可以说80后的泰稳完成了逆袭高帅富的全过程。时至今日，泰稳越发沉稳老练，大家之气已成。他能在保持勤俭持家的同时让你感到慷慨大方，能在无情赞美你的同时让你一肩担尽万古愁，能在给予你 SOHO 自由的同时让你发现其实是全天候工作……整个江湖放眼望去，能把矛盾搞的如此统一的青年才俊无出其右。即便有了如此的了解，泰稳依然给了我一个惊喜，那就是暖场视频。视频内容我就不说了，正常人根本受不了这个，会后我反复观摩，一帧一帧的欣赏，根本停不下来。你要胆敢不相信的话，自己看去。&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//v.qq.com/boke/page/h/s/8/h0126xsj1s8.html" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;老池老友会暖场视频&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;img src="https://pic2.zhimg.com/8e1173417f320d212ae9373b659856e5_b.jpg" data-rawwidth="600" data-rawheight="400" class="origin_image zh-lightbox-thumb" width="600" data-original="https://pic2.zhimg.com/8e1173417f320d212ae9373b659856e5_r.jpg"&gt;&lt;p&gt;另外泰稳的口才又涨了，开场白赢得了满堂彩，调侃几个嘉宾的同时，把现场的气氛撩拨的很热。随后就是我、三表、道哥和小道君分别进行了演讲和脱口秀表演，具体内容大家等视频吧，全写完估计明天的太阳都出来了，效果也不如影像带感。我简单介绍一下几位嘉宾。&lt;/p&gt;&lt;p&gt;小道消息：作者 Fenng（冯大辉），声名播于互联网，粉丝百万之众，微信初期提携了各类微信公众帐号，桃李满天下。文字犀利，观点独特，形成互联网的一小道风景。为人温和，外表忠厚，内心……同样忠厚，看完人再看文字，你很难把二者联系起来，也很难想象小道君是怎么炼成的。冯大辉目前就职丁香园，虽然已经离开阿里，但依然对阿里和……柴静充满无尽的爱。业余爱好：拯救互联网。&lt;/p&gt;&lt;p&gt;道哥的黑板报：作者是……aullik5、大风、刺、道哥，对不起这些都是一个人，真名吴翰清，毕业于西安交通大学少年班，23岁高龄即成为阿里巴巴集团最年轻的技术专家，后就职安全宝继续自己的安全事业。文字清新独特，有不一样的观点和故事，黑客系列极其受人欢迎，是一枚走在安全路上的文艺白帽子。著有技术畅销书《白帽子讲Web安全》。业余爱好：在家吃晚饭。&lt;/p&gt;&lt;p&gt;三表龙门阵：作者三表。三表文字锐利，嬉笑怒骂皆成文章，但是他在生活中却很腼腆，每次耍脱口秀都要带稿子，还得喝几口酒壮胆。身材消瘦，常常一身黑衣，让我想起古龙小说中的剑客中原一点红。三表早年写过足球评论，终于写伤了，因为2008年的稿子改改年份都能用在2012年……之后，终与足球洒泪而别，投身互联网熔炉，目前正在筹划自己的工作室，期待他更好的作品出炉。成名绝技：喷人不用水，中原一把壶。&lt;/p&gt;&lt;p&gt;分享之后就是问答环节，这部分内容也等视频吧，我在这里贴一个问答：&lt;/p&gt;&lt;p&gt;有读者问：您岁数也不小了，有工作，有老婆孩子，还有男人也有的每月几天的坏心情，是怎么做到每日一更，且幽默、文采水准不下滑的呢？&lt;/p&gt;&lt;p&gt;首先要更正一下，现在我已经做不到每日一更了，那些打鸡血的日子发生在一年以前，并且一去不复返了。持续写作这件事我坚持了一年零四个月，当一件事能够坚持下来，就会变成一种习惯，而惯性这种东西是很可怕的，所以真正的原因是：&lt;/p&gt;&lt;p&gt;你根本停不下来！&lt;/p&gt;&lt;p&gt;虽然你不可能永远在路上，虽然你总要抵达某个地方，但是在这之前，你只能不断奔跑，就是这样。&lt;/p&gt;&lt;p&gt;感谢 InfoQ 和人邮出版社的所有组织和参与人员，感谢各位到场嘉宾，感谢我的老领导和老同学，感谢大连、烟台和北京参会的读者，下次再见！&lt;/p&gt;&lt;p&gt;另外，会议结束后，我又为互动出版社签了57本书，需要签名版的，请点击【&lt;a href="https://link.zhihu.com/?target=http%3A//product.china-pub.com/3769606" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;签名版&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;】。&lt;/p&gt;</description><pubDate>2014-03-18T09:05:11+08:00</pubDate></item><item><title>特立独行的猪</title><link>http://zhuanlan.zhihu.com/p/19701772</link><description>&lt;p&gt;那篇「我们都曾经年轻过」发了之后，收到一位读者的深情回复：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;删数据库这事我也干过。。。还有禁用了远程root后，手残又把ssh给禁了；修改win server远程端口两个注册表选项，一个选了十进制，另一个选了十六进制；mongo做了主从，从库忘了启了，过了四天才发现；一条命令写的太长，for循环加上各种管道，awk，sed，grep，结果不小心多了一个非常小的正则符号，删掉了日志重要信息……有时候真觉得工作就像是在走钢丝，我自认为不是一个粗心大意的人，但是很多时候真的很难讲，身不由己，说不清……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;看完这条回复我陷入了深深地思考中，这特么还不算「粗心大意」，那什么算啊？不知道他工作中的小伙伴怎么想，我反正是给跪了……&lt;/p&gt;&lt;p&gt;昨天看完王垠写的「&lt;a href="https://link.zhihu.com/?target=http%3A//yinwang0.lofter.com/post/183ec2_ecff67" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;版权声明&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;」，让我想起了王小波的一篇文章《一只特立独行的猪》。&lt;/p&gt;&lt;p&gt;王小波在文中描写了一头特立独行的猪，这只猪虽然是只肉猪，但是并不为自己的出身羞愧和烦恼，它不停的练习跳高和跳远。一米高的猪栏一跳就过，还能爬上猪圈的房顶，它能走到其他猪不曾到过的地方，它能看见其他猪不能看见的风景。吃饱了在屋顶休息时它还顺便修习了声乐，没事就模仿各种声音。终于，人不高兴了，虽然猪拿它没办法，但人总是有办法的，他们甚至动用了手枪和火枪想抓住或打死这只特立独行的猪。但是：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;它很冷静地躲在手枪和火枪的连线之内，任凭人喊狗咬，不离那条线。这样，拿手枪的人开火就会把拿火枪的打死，反之亦然；两头同时开火，两头都会被打死。至于它，因为目标小，多半没事。就这样连兜了几个圈子，它找到了一个空子，一头撞出去了；跑得潇洒之极。以后我在甘蔗地里还见过它一次，它长出了獠牙，还认识我，但已不容我走近了。这种冷淡使我痛心，但我也赞成它对心怀叵测的人保持距离。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;无论是在猪群，还是人群，你只要特立独行，总会遭到他人异样的目光，包括不理解和批判。大部分时候，这并不是特立独行者的错，而是燕雀不知鸿鹄志，白天不懂夜的黑。&lt;/p&gt;&lt;p&gt;了解王垠，就是从他的博客开始，虽然他的博客中有些内容相对偏激，但那是他思想成长的轨迹，你愿意读是你的事，他愿意写或不愿写，是他的事，他不需要为谁负责，也没那个义务。很多人说，王垠你每天牛逼二五，您倒是设计一门语言解决你诟病的那些问题啊！翻译成通俗语言就是，你行你上啊。我觉得他上或不上，都是他自己的选择，有时候独自牛逼也是一种风骨。&lt;/p&gt;&lt;p&gt;所以，王垠关掉大部分的博客内容，我只能表示惋惜，并理解。&lt;/p&gt;&lt;p&gt;他的文章里有很多不错的内容，部分读不懂，部分读懂的，对我有帮助。所以我写了个脚本，把他的博客内容都自动添加到我的 Instapaper 账户去了，如果你也需要，可以去 GitHub 上获取这段 Python 脚本。&lt;/p&gt;&lt;p&gt;注：Instapaper 是一款著名的 Read It Later 阅读应用，你可以随时把喜欢的文档加入阅读序列，谓之稍后读。&lt;/p&gt;&lt;p&gt;相关资料：&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//yinwang0.lofter.com" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;backup&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;（王垠博客读者的私人备份，啥时关掉wei）&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.instapaper.com/api" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;Instapaper&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;（Instapaper 的 Api 调用文档）&lt;/p&gt;&lt;p&gt;最后用王小波的一句话结束今天的文章：&lt;u&gt;对生活做种种设置是人特有的品性。不光是设置动物，也设置自己&lt;/u&gt;。&lt;/p&gt;&lt;p&gt;点击{ &lt;a href="https://link.zhihu.com/?target=https%3A//github.com/jackychi/AddToInstapaper" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;jackychi/AddToInstapaper · GitHub&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; }，查看刚出炉的 AddToInstapaper 脚本，我稍后再补个说明。&lt;/p&gt;&lt;p&gt;今日题图：Via Cheyenne Crossett&lt;/p&gt;&lt;p&gt;实时更新请关注微信平台「MacTalk By 池建强」（搜索 池建强 可得）&lt;/p&gt;</description><pubDate>2014-03-14T15:10:41+08:00</pubDate></item><item><title>我们都曾经年轻过</title><link>http://zhuanlan.zhihu.com/p/19698728</link><description>&lt;p&gt;2014年1月，苹果联合创始人史蒂夫·沃兹尼亚克来到北京参加了《极客公园创新大会》，非常遗憾，由于个人事务我错过了近距离观摩沃大神的机会，每每想起，扼腕叹息。如果上天再给我一次目睹沃神的机会，我绝对不会错过。&lt;/p&gt;&lt;p&gt;很早就读过纸版的《我是沃兹》（2007版），后来中信出版社再版此书，更名为《沃兹传》，于是在多看上购得电子版，最近拿出来又跳读了一边。好的故事总是常看常新，不同阶段的阅读，总会萌生不同的想法，今天就和大家说一个有趣的片段。&lt;/p&gt;&lt;p&gt;1977年底，沃兹和苹果第六号员工兰迪·威金顿经过不眠不休的编程和调试之后，终于完成了Apple II 对软盘驱动器支持的大部分程序。于是二人起身飞往赌城拉斯维加斯，准备参加 CES 展会。到了赌城之后，拉斯维加斯的滚滚红尘彻底迷乱了两个土鳖程序猿的心，一出杯具正上演……当天晚上，沃兹和兰迪完成了最后的调试工作，一切都那么完美，两个好基友就差对饮一杯红酒然后相拥而眠了，这时候，沃兹做了一个「明智」的选择：兄弟，咱是不是该备份一下程序再睡？沃兹带了两张软盘，于是他决定在空白盘上再备份一份仅有的数据盘，备份进行的很顺利……只是他把该死的空白盘当成了数据盘，于是他得到了两张干干净净的空白盘！&lt;/p&gt;&lt;p&gt;如果普通的程序员碰到这种灾难后，估计自杀谢罪的心都有了，沃兹不是普通人！&lt;/p&gt;&lt;p&gt;在确认了这个「致命」失误之后，沃兹这个编程狂人，就去睡觉了……第二天一早醒来后，沃兹恢复了上帝般的自信，他冷静的坐在Apple II 面前，一机在手，天下我有，用一上午的时间盯着屏幕、敲打键盘，他重建了所有的程序，并在展会上进行了完美的演示， Apple II 获得了「言语无法描述的成功」！&lt;/p&gt;&lt;p&gt;伟大的程序员如沃兹者，年轻时也会犯下如此的错误，何况我等……&lt;/p&gt;&lt;p&gt;写到这我想起了另一个程序员犯的错，这位朋友在一家网络游戏公司工作，他的一部分工作就是手动维护数据库里的一些数据，这个库居然是奇葩的生产库。终于，在一个懒洋洋的下午，暖暖的阳光照在身上，他发现自己昏昏欲睡，鼠标光标神差鬼使的移到了用户表上，右键菜单弹了出来，「delete」被选中，并重重的点了下去……所有游戏用户的资料都消失了，就像一阵风一样。当时这位程序员的感受是：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;我的所作所为带来的严重后果并没有立即击倒我。我只是感觉到灵魂似乎出窍了，悬浮在黑暗房间的某个角落，看到各位同事都勾着腰趴在发光的显示器上，他们惊恐的发现，所有的用户数据都不见了。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;随后的一记重拳彻底击垮了这家公司，他们的数据库提供商告诉他们，这个数据库实例的备份两个月前就停止了，然后，就没有然后了。&lt;/p&gt;&lt;p&gt;同样是犯错，沃兹犯错后重新拯救了自己和公司，而另一个程序员则击倒自己之后又给公司补了一枪。&lt;/p&gt;&lt;p&gt;这就是伟大与平庸的区别。&lt;/p&gt;&lt;p&gt;总结：&lt;/p&gt;&lt;p&gt;1、年轻的时候谁能不犯错？重要的是犯错之后你做了什么。强大了，还是沉沦了&lt;br&gt;2、无论犯什么错，永远不要执行：sudo rm -rf /&lt;br&gt;3、无论如何，最好不要犯全天下男人都会犯的错&lt;/p&gt;&lt;p&gt;各位读者，你们犯过哪些愚蠢而致命的错误呢？&lt;/p&gt;&lt;p&gt;2014年，我希望大家少犯点错，多挣点钱！&lt;/p&gt;&lt;p&gt;***&lt;/p&gt;&lt;p&gt;本周日下午 InfoQ 和人民邮电出版社信息技术分社组织了一个读者见面会和新书签售活动，除了 Mac 君之外，现场还有小道君、道哥、三表、InfoQ 中国创始人霍泰稳和拉勾网联合创始人鲍艾乐等一起交流。&lt;/p&gt;&lt;p&gt;期间小道、道哥和三表等会有精彩的主题分享，根据我的现场经验，这几个人一个比一个能讲，而且都比我讲的好。如果您周日有空，就来看看，这么多年了，也该见个面了……&lt;/p&gt;&lt;p&gt;时间：3月16日下午1点&lt;br&gt;地点：海淀区3W 咖啡，不见不散&lt;/p&gt;&lt;p&gt;点击&lt;a href="https://link.zhihu.com/?target=http%3A//www.infoq.com/cn/vendorcontent/show.action%3Fvcr%3D2704" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;【3月16日】老池老友记暨《MacTalk人生元编程》读者见面会火热报名！&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;报名。已经报名的不用着急，也不用重复报名，InfoQ 会统一在周五进行短信确认。&lt;/p&gt;</description><pubDate>2014-03-10T23:13:44+08:00</pubDate></item><item><title>世界是她们的……</title><link>http://zhuanlan.zhihu.com/p/19694049</link><description>&lt;p&gt;昨天的文章发出之后，雪片般的感谢信从祖国的四面八方飞来，内容大抵是这样的：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;今天买了正版的XXX，正愁怎么跟老婆报帐，此文可解燃眉之急。&lt;br&gt;今晚就回家和老婆/女友……一起看这篇文章，Mac 已经申请了半年之久。&lt;br&gt;永远热泪盈眶，以后就拿这个说服我妈了……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;这些「副作用」是我写上一篇随笔时绝逼不曾预料到的，由此我想起了前几日在 Twitter 上发生的故事：&lt;/p&gt;&lt;p&gt;一位大侠 A 时不时在 Twitter 的时间线抛出一条推文：有人出 XX 卡的 iPhone5 或者 iPhone5S 吗？在发了几次之后，终于有另一位大侠 B 发问了，你不是有iPhone 5 吗？于是发生了这么一段对话：&lt;/p&gt;&lt;p&gt;A：是啊，不过我有了个 XX 卡，想再弄台机器&lt;br&gt;B：买个新的呗，5C 也挺好&lt;br&gt;A：老婆不同意啊，而且这台机器是给她的&lt;br&gt;B： 天呐，比我老婆还过分。我倒是想把手里这台旧的出了，正在做老婆的工作&lt;br&gt;A：握手&lt;br&gt;B：我老婆喜欢说一句话，这个至少得用十年&lt;br&gt;A：……&lt;/p&gt;&lt;p&gt;然后两位大侠就散去了，临走之前叮嘱我说，如果此事泄露出去，必定追杀尔到天涯海角。我一听吓尿了，为了此等秘密丢了身家性命得不偿失啊，所以现在只好可耻的匿了。据我所知，这两位大咖在各自的领域都是呼风唤雨的主，手底下十几号人或几十号人是有的，买一台 iPhone5S 或 Mac 对他们的生活几乎没有任何影响，可惜的是，决定权并不在「我军」手上……&lt;/p&gt;&lt;p&gt;由此我又想起了另一个小伙伴（现在一家电商加班加得死去活来），当年他非常想有一部 iPhone 手机，于是他为家里的领导详细的讲解了 iOS 的优秀和 iPhone 的工艺设计。过了几天之后，他家领导就有了一部 iPhone，他继续使用破旧的 HTC；又过了一阵，他非常想有一台 MacBook，于是他为家里的领导详细的讲解了 OS X 的优秀和 Mac 的工艺设计。过了几个月之后，他家领导就有了一个台 MacBook Air，他继续使用破旧的 ThinkPad……&lt;/p&gt;&lt;p&gt;终于加入了一家电商挣了更多钱买了 Mac，那家互联网公司居然不让员工用自己的 Mac，所以他只好用公司的 ThinkPad……&lt;/p&gt;&lt;p&gt;后来他把自己的签名档改成了：真的男人，敢于直面惨淡的人生，敢于正视 HTC 和 ThinkPad。&lt;/p&gt;&lt;p&gt;所有的这些血淋淋的最佳实践都让我想到了：&lt;/p&gt;&lt;p&gt;1、互联网正在主导这个世界。&lt;br&gt;2、IT 从业者中绝大部分是男程序猿。&lt;br&gt;3、绝大部分男程序猿背后都有一位要求严格、管理规范的女性。&lt;/p&gt;&lt;p&gt;结论：女性主导世界！世界是我们的，也是你们的，归根结底是她们的。她们是世界所有美好事物进步的原动力，只要她们稍微松一松手里的缰绳，他们就会让世界转的飞快，一切都取决于她们的品味……&lt;/p&gt;&lt;p&gt;最后，我们也不推荐这种没有领导的货的行为：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;实际上很多人犹豫的情况不是舍不得花钱，而是银行卡里根本没有钱，比如我，就直接借了2w买了rMBP15高配……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;昨天的文章中提了一句香港代购，结果很多人问我代购信息。其实昨天的文章真不是劝大家买 Mac，而是在讲一个道理。想了解香港代购信息的，那么请回复「代购」，求求大家不要再加那个括号了，另外是在微信回复好么？&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Mac 君你为苹果做了这么多贡献，库克大爷造吗？&lt;br&gt;不是不造，时候未到。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;另，以上文字纯属虚构，请勿对号入座。取消关注的默默取消即可，不必告诉我知，谢谢。&lt;/p&gt;&lt;p&gt;支持我的业余写作，请点击&lt;a href="https://link.zhihu.com/?target=http%3A//item.jd.com/11398297.html" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;《MacTalk・人生元编程》(池建强)【摘要 书评 试读】&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;，谢谢。&lt;/p&gt;</description><pubDate>2014-03-04T22:16:23+08:00</pubDate></item><item><title>先有 Mac 还是先有银元？</title><link>http://zhuanlan.zhihu.com/p/19693202</link><description>&lt;p&gt;自从开设了这个公众号以后，收到最多的问题是：听了 Mac 君的介绍，我也觉得 Mac 很好，可是穷屌丝一枚，真买不起，怎么破？前几天我在微博上说，读了我的书，就有 Mac 了。居然有读者来问：这是真的吗？&lt;/p&gt;&lt;p&gt;今天我要郑重的回答一下这个问题：是真的。&lt;/p&gt;&lt;p&gt;你信吗？&lt;/p&gt;&lt;p&gt;你应该相信。因为我谈的根本不是 Mac 和金钱的问题，而是程序员合理投资自己的问题。&lt;/p&gt;&lt;p&gt;有时候很多人类表现出来的行为特别不可思议。比如大家会把很多资源和时间花在对个人成长毫无意义的事情上，而到了真正需要进行投入和学习的时候，我们会理直气壮的说：对不起，我既没时间，也没银元。&lt;/p&gt;&lt;p&gt;大部分程序员在这方面的表现绝对是「猿国不让须眉」，咱们会：&lt;/p&gt;&lt;p&gt;用大量的时间寻找各种盗版软件的注册码和注册机，而不是去购买几十块钱的正版软件。&lt;br&gt;用大量的时间搜索各种粗制滥造的扫描版电子书放到硬盘里，并安心的认为书中的知识都已经属于自己，而不是去买一本正版书籍并把它读完。&lt;br&gt;用大量的时间研究goagent、vpngate等免费的越墙方案，而不是去买一个 VPN 或「曲径」轻轻松松翻越长城并了解世界。&lt;br&gt;用大量的时间优化已经用了四年烂电脑以期击败85%的同类用户，而不是买一款配备了视网膜屏的 Macbook 去击败世界。&lt;/p&gt;&lt;p&gt;很多年过去了，前者以为自己节省了金钱，也积累了资源，他们擦擦汗，抬望眼，仰天长啸：我特么真是勤俭持家的好猿啊！这时他们会惊奇的发现，那些看起来傻乎乎的后者，早已一骑绝尘，夕阳西下，「前者」只能看到「后者」奔跑中的背影……和一缕尘埃。&lt;/p&gt;&lt;p&gt;当你还在为每年99刀的 iOS 开发者费用进行汇率计算的时候，人家已经开发出上架的 App 并工资翻倍了。当你还在纠结要不要买一本正版图书的时候，人家的书都已经开始第三次印刷了。当你还在为破解和安装盗版软件绞尽脑汁的时候，人家已经写出正版软件了。当你还在打工的时候，人家已经创业成功了……&lt;/p&gt;&lt;p&gt;每个人成长到一定阶段的时候，最值钱的是你的时间，而不是别的什么东西。这么说并不是鼓励大家无节制的花钱，但是，如果能够用合理的价格购买到工具、产品和服务，最好不要花时间去找替代品，至少，你要评估一下你的时间是不是那么不值钱。&lt;/p&gt;&lt;p&gt;写到这如果你们还不相信，我就给你们讲一个真实的故事：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;今天下午一位老大姐把我叫过去，儿子马上要生日了，她准备送给儿子一台 MacBook，让我给选选。这位老姐算是我的老领导和老朋友，我自然不敢怠慢，问了孩子的年龄、学习程度和基本用途，然后分别为她介绍了 Macbook Air 和 Macbook Pro 的优缺点和使用场景，最后根据性价比最好的原则，推荐了13寸的视网膜屏 Macbook Pro，老姐听得频频点头。讲完后我擦了擦额头的汗水，问，您觉得满意不？满意的话我给推荐一个香港代购。&lt;/p&gt;&lt;p&gt;老姐问我，最贵的是哪款泥？我说15寸的 RMBP 高配。老姐说就是它吧，然后就高高兴兴下单去袅，还买了一堆配件……和 Apple Care！&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;现在你们知道了吧，土豪就是这样子生活的。钱只是一种资源，从资源角度来看，有了资源可以做更多的事情。世界并不以穷人富人划界，而是用自由度来划分你的人生的。&lt;/p&gt;&lt;p&gt;对于这样的大姐，肯定是先有钱，再有 Mac。&lt;/p&gt;&lt;p&gt;对于大部分程序员，想要有钱，你最好先有一台 Mac……&lt;/p&gt;&lt;p&gt;-----------------------------------------------&lt;/p&gt;&lt;p&gt;很多读者不断的问电子书与纸书的区别，这一点我在「纸书的秘密」一文中已经写的很清楚了，但鉴于很多人都是浅阅读，我就再说一遍：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;纸书的内容比原来的电子版增加了 Mac 入门和 Mac 演化史系列、Linux 系列、Vim 插件系列、职场系列、编程与写作等内容，大概增加了十万字左右。另外，纸书的版面全部重新设计，我根据书中的主题和时间线，重新调整了文章的顺序和文字结构，更符合读者阅读习惯。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;已经买了电子版的，买本纸书也不会有损失，不买亦然。当然，如果您愿意支持我，我同样高兴。&lt;/p&gt;&lt;p&gt;点击{&lt;a href="http://www.zhihu.com/question/22885771" class="internal"&gt;看过《MacTalk·人生元编程》的小伙伴们，你们如何评价这本书？&lt;/a&gt;}查看本书在知乎上的评价，如果您读来有感，也可以去写写画画。&lt;/p&gt;</description><pubDate>2014-03-03T23:45:14+08:00</pubDate></item><item><title>传统企业软件的互联网化</title><link>http://zhuanlan.zhihu.com/p/19692262</link><description>&lt;p&gt;在我个人长达十几年的IT从业过程中，一直从事软件产品和服务的研发。我有幸经历了第一波互联网浪潮，现在又正值IT技术发展的黄金时期，无论是传统企业软件，还是互联网服务，都在高速发展。这两股力量在并行发展的同时，也在逐步进行融合。这篇文章主要从技术、内容、需求、模式等视角探讨企业软件的互联网化趋势，同时针对不同领域分析了传统企业软件厂商如何去应对这样的变化。&lt;/p&gt;&lt;p&gt;&lt;em&gt;注：如无特殊说明，本文中提到的互联网指广义互联网，包含移动互联。&lt;/em&gt;&lt;/p&gt;&lt;h2&gt;什么是企业软件&lt;/h2&gt;&lt;p&gt;既然要谈企业软件，我们就需要为企业软件做一个定位。这个概念在业界并不是十分清晰，没有明确的定义，从技术层面也很难区分，什么是企业级呢？有的观点是从系统规模上划分，有的从团队规模上划分，有的从开发周期上划分。我个人对企业软件的定义比较简单，主要用软件受众来区分互联网应用和企业软件。什么是互联网应用？四大门户，谷歌百度，淘宝京东，各种SNS网站，博客系统，微博系统等等，其受众大都是普通大众，而企业软件的受众则一般是企业客户，是为企业服务的，企业软件的使用者是企业内外部客户以及与企业业务关联的人员。&lt;/p&gt;&lt;p&gt;当然，即使是从这个角度，其定位也很模糊了。很多互联网公司在为个人用户服务的同时，也在为企业客户提供各种在线服务，比如企业邮箱、视频会议、存储、文档等功能。互联网发展到今天，已经脱离了技术层面的范畴，使得人的感知能力和认知能力挣脱了时间和距离的束缚，得到极大的延伸。企业软件在互联网的大潮中，已经不可能再固守在企业内部，其互联网化的趋势虽然缓慢，但不可阻挡。这些变化主要体现在技术、网络环境、产品内容、用户体验、服务方式和设备延伸等方面。&lt;/p&gt;&lt;h2&gt;企业软件互联网化的特征&lt;/h2&gt;&lt;p&gt;企业软件是否开始具备了互联网的特征？企业软件如何借力互联网？在回答这些问题之前，我们首先来看看到目前为止这两种应用依然存在的鲜明特征：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;互联网应用的特点是快速迭代开发、注重用户体验、运营和数据驱动、更精准的推荐和搜索、大容量高并发、架构动态扩展等等。&lt;/li&gt;&lt;li&gt;企业软件则更强调数据的强一致性（尤其是金融类软件）、领域驱动设计、复杂的业务逻辑、流程管理、计算引擎、极端的业务场景等，这些依然是企业软件需要面临的问题。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;从技术角度而言，行业软件相对互联网服务，技术上确实不是那么吸引眼球，不是大家不想用新技术，而是应用场景不同。同样是Java，在Twitter做的是后端搜索，在淘宝做得是电子商务平台，在用友做的是应用软件开发平台。各个厂商面临的用户场景不同，同样的技术体系，采用的具体技术和策略也不一样。目前来看，企业软件技术相对稳健封闭，互联网厂商相对前沿开放，但企业软件在业务设计和领域驱动积累也是互联网应用不具备的。从迭代周期来看，行业软件需要保持稳定，互联网服务由厂商自己托管，可以短期迭代，不断尝试。&lt;/p&gt;&lt;p&gt;既然具备这么多不同，那企业软件的互联网化到底体现在哪些方面呢？我想可以从以下几个方面去探讨。&lt;/p&gt;&lt;h3&gt;（一）技术&lt;/h3&gt;&lt;p&gt;我们把时间回退到2000年左右，那时正值第一波互联网风生水起，使用的技术包括HTML4.0，CGI/Perl，ASP等，而企业软件更多还是CS结构，采用VB、C++、Delphi居多，从这个角度看，二者的辨识度还是很高的。十二年光阴弹指逝去，我们再来看看现在的技术：（参考题图）&lt;br&gt;&lt;/p&gt;&lt;p&gt;从数据存储中的关系数据库、NoSql、分布式文件系统，到编程语言、并行计算和异步编程、云平台和各类前端技术，纷繁复杂，百花齐放。这些技术可以任意组合构建各种软件产品，无所谓互联网应用还是企业软件。所以从这个角度来开，用技术去硬性的划分软件服务的类型已经毫无意义，互联网由于其庞大的生态环境，必然在技术的深度和广度领先一步，而企业应用在保持自身技术特点的基础上即时跟进已是大势所趋，同时互联网技术的成熟也为行业领域软件提供了更多的机会。&lt;/p&gt;&lt;h3&gt;（二）网络环境&lt;/h3&gt;&lt;p&gt;中国的企业软件基本都是从财务软件进化而来，安全性首当其冲，所以早期企业会把软件放在内网，甚至单机操作。随着企业信息化程度的深入和安全技术的增强，企业软件已经不再局限在Intranet，通过VPN、签名认证等安全技术的保障，企业软件系统开始大面积的转入Internet，以便企业客户能够随时随地访问公司的业务系统，很多企业提出了“三A策略”——Anytime，Anywhere，Any Device，以应对瞬息万变的市场需求。甚至有很多企业的软件系统本身面对的就是互联网受众，比如企业门户集成、电子商务平台、企业社区、客户联络等等。企业软件从基础设施层已经走向前台，需要的只是企业自身和软件厂商更多的认知和变化。&lt;/p&gt;&lt;h3&gt;（三）服务内容&lt;/h3&gt;&lt;p&gt;企业软件的服务内容也在潜移默化的改变。除了核心业务系统，这样一些需求渐渐浮出水面：交互性门户系统，电子商务平台，企业博客、Wiki、微博，大规模文件处理，私有云，企业移动应用等等。&lt;/p&gt;&lt;p&gt;除了功能性需求，客户对于安全，性能，大容量，大并发等特性愈发关注。别以为企业客户还在可怜巴巴的使用已经走向历史的IE6，如果你的企业软件不能兼容多种浏览器，没有配套的移动终端，没有足够简洁的UI，他们可能会转身离开，去选择另一家更加互联网化的软件厂商了。&lt;/p&gt;&lt;h3&gt;（四）用户体验&lt;/h3&gt;&lt;p&gt;由于互联网和移动应用的迅猛发展，用户体验已经在软件体系中被推到了一个极高的位置，成为衡量软件产品生命力的重要因素，一个不懂用户体验设计的产品经理基本是会被人笑话的。&lt;br&gt;但是真正把用户体验变成一种公司基因的软件公司屈指可数，传统企业软件公司就更加凤毛麟角。大多数公司只是对用户体验的浅层挖掘，要想对用户体验有深度挖掘，需要整个公司产业链的密切配合，不仅仅是前端工程师的事情。&lt;/p&gt;&lt;p&gt;优秀的用户体验包括而不限于：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;清晰的分层架构、简约的页面，有足够的信息量同时留给用户思考的空间；&lt;/li&gt;&lt;li&gt;完整清楚的数据流向，没有用户手册也能完成数据处理；&lt;/li&gt;&lt;li&gt;高效操作，通过深入的业务抽象实现操作的精炼，最少的动作完成最常用的功能，比如Amazon的1-Click Order（一键下单）；&lt;/li&gt;&lt;li&gt;让用户操作变得有趣，很多人会认为企业软件一定是冷冰冰的，无趣的，像飞机驾驶舱一样全是看不懂的按钮。事实是如果你能把软件做得有趣，客户就会爱上你和你的软件。&lt;/li&gt;&lt;li&gt;多种UI展示方式，包括PC浏览器和移动终端；&lt;/li&gt;&lt;li&gt;在可用性和可行性之间找到平衡，如果为了一个很炫的体验花费巨大的代价就得不偿失了。记住，要提供最有价值而不是最炫的用户体验。 &lt;/li&gt;&lt;/ul&gt;&lt;img src="https://pic4.zhimg.com/32c6d2f43355319aab27c58336bac74b_b.jpg" data-rawwidth="585" data-rawheight="423" class="origin_image zh-lightbox-thumb" width="585" data-original="https://pic4.zhimg.com/32c6d2f43355319aab27c58336bac74b_r.jpg"&gt;&lt;br&gt;&lt;h3&gt;（五）服务方式&lt;/h3&gt;&lt;p&gt;一提到企业软件，大家会首先想到买“license+升级维护费用”这种模式。把软件以相对统一的价格销售给企业客户，然后进行实施、维护、升级。随着互联网的发展，SaaS模式变得炙手可热，很多通用软件的在线版本已经上线，而且取得了很好的效果，比如Google的Mail和Doc，百会的办公软件，离线迅雷，各种云杀毒云安全等等，无不是在线化的服务。为此有人断言，企业软件的license也将变为历史产物，在线企业软件才是未来。&lt;/p&gt;&lt;p&gt;对此我并不完全赞同，方向是对的，但企业软件与通用软件不同，其用户群体、应用开发和实施的复杂度、流程改造、安全性、本地环境等等因素，会导致客户不会像使用通用软件那样迅速迁移到SaaS上去，未来license模式和SaaS模式会在相当长的一段时间长期并存。如果贸然放弃传统的软件销售模式做SaaS的话，无疑会给软件企业本身带来很大的困扰。&lt;/p&gt;&lt;p&gt;这一点软件酋长Joel Spolsky在他的著作《软件随想录》中也描述过，他说，&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;我们的产品提供两种模式，一种是托管在自己的服务器上，也就是SaaS模式，一种是把产品安装在客户的服务器上。我们当然喜欢第一种模式，你不需要考虑与各种硬件、操作系统和第三方软件打交道，那会让你筋疲力尽。但事实是，第二种模式使我们的销售额提升了5倍。&lt;/p&gt;&lt;p&gt;我们当然希望客户使用在线服务，我们有的是空余的服务器，那样的话服务成本也会降到很低。但我们的钱也会挣得很少，我们会倒闭。&lt;/p&gt;&lt;p&gt;想挣钱，就别怕脏（指为客户解决各种问题）&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;互联网时代企业软件的服务方式正在发生改变，但这不意味着把原有的进销存软件改造成SaaS就行了。重要的不是部署在哪，而是你的软件是不是像互联网应用一样好玩好用。&lt;br&gt;如果你的软件产品卖的很好，那就继续你的license模式，把产品做得更好。同时，把适合放到线上的业务通过互联网技术形成自己的SaaS，再把合适的客户逐步的引导到这个平台上来，在中国SaaS依旧是需要培育的市场。&lt;/p&gt;&lt;h2&gt;企业软件平台化的时机已经成熟&lt;/h2&gt;&lt;p&gt;以前在微博上说过一句话，阿里玩的是平台，顺道把电商做了；京东玩的就是电商，顺手搞搞技术。反响甚众，还被许多媒体引用。当然现在京东已经非常重视技术了，开始打造自己的平台。无论是互联网公司，还是企业软件厂商，一流的企业无不拥有自己的平台级别的生态环境。&lt;/p&gt;&lt;p&gt;早期平台的定义是计算机软硬件的操作环境。随着技术的发展，平台的含义变得丰富起来，远远超过原有范围。但有一点没有改变，那就是平台是基础设施，可以通过各种方式为该领域的上层建筑提供帮助。 2000年，平台是操作系统，微软成为业绩霸主，市值5000多亿，Linux阵营抢占服务器端市场，二者形成生态圈。2005年，平台开始多样化，操作系统，搜索引擎，企业开发平台，电子商务平台等。2012年，平台无处不在。 &lt;/p&gt;&lt;img src="https://pic2.zhimg.com/7a1f4f7b9b6091cc2682df4b0b19b215_b.jpg" data-rawwidth="735" data-rawheight="463" class="origin_image zh-lightbox-thumb" width="735" data-original="https://pic2.zhimg.com/7a1f4f7b9b6091cc2682df4b0b19b215_r.jpg"&gt;&lt;br&gt;&lt;p&gt;随着企业软件的互联网化，客户对软件的功能、质量、环境、用户体验等要求越来越高，软件开发成本持续升高，所以软件企业的应用开发必须从效率、质量、软件环境的角度出发，构建自己领域内的平台级解决方案和生态环境。企业软件本身在业务领域已经有了足够的积累，现在的互联网成熟技术又为企业软件平台提供了丰富的技术解决方案和软硬件环境，所以，对于企业软件厂商来说，这是一个打造企业软件应用平台的最好时代。&lt;/p&gt;&lt;h2&gt;移动应用将成为企业用户的基本需求&lt;/h2&gt;&lt;p&gt;面向个人用户的移动互联网市场异常繁荣，其高速发展带来的是移动设备的量级增长，这也同时推动了企业移动的发展。&lt;br&gt;目前全球有超过50亿的移动电话用户，根据Aberdeen Group提供的数据，75%的企业开始采用移动设备接入工作，VDC Research Group预计至2013年，支持企业移动应用的移动设备出货总量将达到2500万台，企业移动应用在不久的将来会影响企业的整体业务。当所有的VC和移动开发者在个人App市场血拼的时候，其实企业移动应用同样是一个巨大的市场，具备无限可能。&lt;br&gt;移动应用将改变我们的工作方式，就像我在前文中指出的那样，随时、随地、任何设备！这里面蕴藏着巨大的机会，包括企业移动应用的开发和生命周期管理、移动设备的管理、移动设备的安全、数据备份、离线操作等等。任何一家企业软件厂商现在就应该考虑，我能为企业的移动应用提供什么？ 估计在不久的将来，超过70%的业务会从PC转到移动平板和手机终端上，可以想象一下，这是一个多么大的市场。&lt;/p&gt;&lt;p&gt;谈到这里，我们就不得不提到原仁科公司（PeopleSoft）的创始人Dave Duffield，他在Oracle恶意收购了仁科之后，离开仁科创办了一家新公司叫做Workday，基于企业云平台提供HR和财务软件，是一家典型的具备互联网特征的企业软件公司。&lt;br&gt;Workday的软件终端包括PC、Pad和手机，他们在软件设计上借鉴了互联网产品的元素，设计过程中花了大量时间研究Facebook和Amazon，而不是Oracle或SAP。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;在Workday的iPad版软件中搜索员工，这名员工的照片就会弹出到网状目录的中心——这是一种可以用手指翻看的辐射状组织结构图。点击照片，你就能看到该员工的直接下属、绩效评估以及LinkedIn的页面。Workday实验室的负责人Joe Korngiebel说：“人们通常认为这类软件很无聊，但是我们认为它应当令人愉悦。”&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Workday的HR软件甚至增加了很多游戏元素：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;在科恩吉贝尔负责的所有项目中，有一个实验尝试将一些人力资源管理职能变成游戏。如果同事的工作完成得不错，其他员工可以在其页面上奖励虚拟徽章。每个人根据自己收到的徽章数量而得分。如果员工给某个空缺职位建议了很多可雇佣的候选人，经理们就可以给员工加分。软件里还有一个全公司排行榜，人们可以查看积分所决定的年终奖金等级。&lt;/p&gt;&lt;/blockquote&gt;&lt;img src="https://pic2.zhimg.com/c9dea6728e423660f891766b338b1ed1_b.jpg" data-rawwidth="800" data-rawheight="620" class="origin_image zh-lightbox-thumb" width="800" data-original="https://pic2.zhimg.com/c9dea6728e423660f891766b338b1ed1_r.jpg"&gt;&lt;br&gt;&lt;p&gt;当我们拿到这样一款可以运行在iPad和iPhone上的企业管理软件的时候，原来的很多概念可能会分崩离析，原来企业软件也可以这样做！不仅可以把云平台、移动终端、用户体验完美的融合到一个企业软件中，而且使用起来还那么有趣，我们就知道，这世界上永远存在可以颠覆的领域。&lt;/p&gt;&lt;h2&gt;总结&lt;/h2&gt;&lt;p&gt;总体来看，目前的企业软件还不如互联网领域那样热热闹闹花团锦簇，这是由于企业软件厂商和企业客户固有的稳健形成的，但是毫无疑问企业软件的市场是巨大的。潮起潮落，河东河西，优秀的企业软件必将在互联网的长河中再次焕发出璀璨的光芒，软件厂商需要的就是转变思维，抓住机会，做出更好的产品！&lt;/p&gt;</description><pubDate>2014-03-02T22:19:21+08:00</pubDate></item><item><title>微信为什么发布 Mac 版？</title><link>http://zhuanlan.zhihu.com/p/19690042</link><description>&lt;p&gt;因为 Mac 就是好啊就是好啊，就是好……&lt;/p&gt;&lt;p&gt;打完收工，谢谢，鼓掌 piapiapia……晚安！&lt;/p&gt;&lt;p&gt;___________________________________&lt;/p&gt;&lt;p&gt;这么写在京城行走会不会挨板砖呢？头像已经印到书上满世界的发出去了，虽然考虑到行走江湖求一个稳字，我还特意找了戴墨镜的照片（顺手掩盖眼角鱼尾纹……），想想还是无法做到万无一失。经过轻松而愉快的思考，我做了一个艰难的决定：再写点！&lt;/p&gt;&lt;p&gt;那么腾讯为什么要做个 Mac 版微信呢？或者说微信为什么要发布 Mac 版呢？注意这两句话还是有细微差别的。根据我的朋友，前腾讯员工的描述，腾讯的各个项目之间独立性很强，也拥有比较大的自由度，各个项目之间存在竞争关系是常有的事，一会是姐姐拿了妹妹的口红，一会是妹妹动了姐姐的唇膏，小马哥虽然雄才大略，这种事多了也头疼，在普通规模的企业里内部竞争都难以避免，何况腾讯这个量级。估计最终的规则就是，谁赢得了市场，谁是赢家。所以，Mac 版微信到底是微信要做还是腾讯要做，咱们就不得而知了。&lt;/p&gt;&lt;p&gt;没有微信之前，腾讯一直靠 QQ 和游戏打天下，但是形象不够「高大上」，一直为人诟病。结果微信一出，谁与争锋？尤其是2012年发布了微信公众平台和相关 API 之后，微信迎来了爆发式的增长，从一个相对单纯的 IM 变成了社交、媒体和微信 App 应用的大平台，生态环境日趋完善。也是从那时起，腾讯的市值开始突飞猛进，在 BAT 三家里风头最劲。人们都说，有了微信，腾讯员工走路的样子都想扛了 AK47，杠杠的。&lt;/p&gt;&lt;p&gt;一边是微信的红火，一边是 QQ 的心酸。看着微信春风沉醉的面庞，QQ心想「小马哥从前陪人家看月亮时，叫人家腾讯 QQ，现在新人换旧人了， 微信倒成了腾讯的小主……」于是，移动版 QQ 开始越做越像微信，Mac 版 QQ 也简约大方，Win 版 QQ……那不是 QQ 好么，那是个 QQ 巨无霸系统！&lt;/p&gt;&lt;p&gt;不管怎样，QQ 在 PC 端和移动端齐头并进，延续着企鹅的梦想。微信呢，在移动端发展的顺风顺水，但是一直没有动 PC 端的蛋糕。这样的配比导致我们坐在电脑前的时候，用 QQ 多一些；拿着手机的时候，用微信多一些，大致形成了一个微妙的平衡。但是平衡终归会被打破，因为 Mac 版微信来了……&lt;/p&gt;&lt;p&gt;很多人说 Mac 版微信不就是原来基于浏览器的 Web 版微信么？非也，这俩货只是看着像好么？这次微信发布的版本完全是原生的 Mac App，目前整体的功能框架和 Web 版类似，功能比较简单，只能支持聊天、群聊，会话和订阅号内容无法保持，只有使用期间收到的推送内容才能在线阅读，不支持会话置顶，不支持朋友圈，偏好设置也有 bug。总之功能不多，bug 不少，但原生的框架已经出来了，离蓬荜生辉还远么？&lt;/p&gt;&lt;p&gt;我希望这不仅仅是一次试水，也不是个短期项目，也不会因为其他压力而夭折。如果能尽快推出内容更丰富的版本那就最好了，比如加上会话数据保持、订阅号和服务号管理、朋友圈等功能。&lt;/p&gt;&lt;p&gt;有人问为啥不直接做 Win 版的微信呢，Mac 用户虽然是极好的，但数量也是极少的。是的，如果直接对 Win 版用户动手的话，那不是意图太明显了么？&lt;/p&gt;&lt;p&gt;以上文字，我写的随性，您看的随意，就当听了个故事，不必有太多联想。如果您是 Mac 用户，也有好奇心，那么这个软件还是值得尝试的。&lt;/p&gt;&lt;br&gt;&lt;p&gt;文章内容来自微信公众平台 MacTalk By 池建强（sagacity-mac），没事别瞎转，要有目的的转。&lt;/p&gt;</description><pubDate>2014-02-27T23:11:38+08:00</pubDate></item><item><title>Vim 学习卡和提鞋的问题</title><link>http://zhuanlan.zhihu.com/p/19688815</link><description>&lt;p&gt;北京最近陷入了春节以来最长的一段雾霾天气。往上看灰色的苍穹似乎高阔落寞，但是极目远眺，却是雾蒙蒙的一片，目无所触。每天早晨上班我会经过一条笔直的公路，公路的尽头是北京的西山。如果天空清亮，开车时就会看到山顶的白亭，初升的朝阳会用朝霞涂抹山脊、白亭和绿树，一切都变得美好。只要我早晨能够看到那个亭子，一天的心情都是愉悦的，现在的情况是：我特么连山都看不见……&lt;/p&gt;&lt;p&gt;在这种天空下行走，你总会觉得有些事要发生，很多天过去了，什么事都没有发生，还是那个配方，还是那个味道，期待的大风并未降临，我渐渐忘掉了阳光灿烂的日子……&lt;/p&gt;&lt;p&gt;------------------------------------------------------------&lt;/p&gt;&lt;p&gt;Vim 这个系列很久没写了，今天从坑里捡起来，发现灰落了厚厚一层，抖掉灰尘，我决定续写 Vim 。在纸版《MacTalk·人生元编程》里我已经写了 Vim 缘起、模式、帮助、配置、概念、技巧和部分常用插件，手里有书的可以先看看那部分内容。今天准备写写 Vim 学习卡。&lt;/p&gt;&lt;p&gt;说到 Vim，常常让人想起 Emacs，在这个蓝色的星球上，在编辑器领域，永远存在两股暗黑势力，他们就是 Vim 党和 Emacs 党，这两股力量势如水火，分别守候着两大上古神器：Vim 和 Emacs……不停的有新人入会，也不停的有旧人出走，因为很多人发现这两大神器的学习曲线是如此陡峭和诡异，在没有发现神器的强大力量之前，这些人就离开了，去寻找 Eclipse 和 jetBrains 的庇护。但是永远会有一些人留下来，通过了艰难的考验，坚定的守护这两大神器……&lt;/p&gt;&lt;p&gt;以上是一种文艺的写法，真实的情况是：双方经常叫嚣 A 不配给 B 提鞋，B 甩了 A 几条街，到底是扔鞋还是扑街，就看谁的戾气更重了。古人云，文人相轻，其实技术领域也是一个德行，经常有人在人堆里喊一声「Perl 是世界上最好的语言，Ruby 不配给 Python 提鞋」，之后就是一群程序员争先恐后冲上去一顿群骂，等所有人口吐白沫笔走龙蛇的时候，发现原 PO 主早已转身离去专心致志的去写 Java 了，不带走一片 C# 代码。&lt;/p&gt;&lt;p&gt;对于这种技术争论，我的观点是：不提倡。&lt;/p&gt;&lt;p&gt;无论是夸，还是骂，您都得说到点子上，有理有利有节的文章永远胜过无谓的口舌之争，网络上的争论永远没有终点，成文成章才能流传。在这方面做的比较好的程序员，举两个例子：徐宥（ &lt;a href="https://link.zhihu.com/?target=http%3A//blog.youxu.info/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;4G spaces&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; ）和王垠（ &lt;a href="https://link.zhihu.com/?target=http%3A//www.yinwang.org/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;当然我在扯淡&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;），倒不是这两个人的所以观点我都同意，而是他们写文章的态度非常值得赞赏。这两个人在「痛恨 Unix」领域还有过一次交锋，感兴趣的读者可以去他们的博客看看，可惜的是徐宥已经写的越来越少了……&lt;/p&gt;&lt;p&gt;今天的文章题图分别是 Vim 和 Emacs 的学习曲线，Vim 的曲线异常陡峭，但是当你度过了那一段艰难时候，就会领略到千帆竞发、百舸争流的美妙，并且从此天堑变通途。Emacs 则是初期似乎不过尔尔，但是学习愈深愈艰，而且还会出现回退，反复，360度大回环等匪夷所思的情况，到最后你终于明白，Emacs 原来是个伪装成编辑器的操作系统，满眼都是泪！&lt;/p&gt;&lt;p&gt;在互联网的江湖里流行着「唯快不破」的传说，一款互联网产品似乎不以迅雷不及掩耳盗铃之势做出来，江山美人就会白白拱手送人。圈地，出产品，拉用户，快干猛上，一抬头已经花团锦簇！当然，快的后果也可能是这块地压根没有江山美人，刨了半宿，其实是块盐碱地。在产品的成败上，都是以结果论英雄，所以，急性子成功了，当然唯快不破，慢公司赢了，那就是以慢打快，以柔克刚。&lt;/p&gt;&lt;p&gt;但是，「唯快不破」这个词，用来形容 Vim 却是最合适不过。我在之前的 Vim 系列中写过：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;写过程序的人都知道，编程的时候双手大部分时间都放在键盘上，或编码、或插入、或移动、或定位、或查找，这种连续操作的时间和频率远远大于阅读、翻页、设置字体、摆弄样式等文案工作，而二者往往产生很多停顿和间隙，而编程时的停顿是非常影响编程效率的，所以 Vim 的设计理念就是通过模式的转换、命令的组合和数以万计的插件，保证程序员在编程的过程中，双手尽可能保留在键盘中央的区域，快如闪电的编辑文件，并且，不需要鼠标。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;想做到快如闪电，就需要你记住四种模式切换（普通模式、插入模式、可视模式、命令模式）、大量的快捷键和命令，想通过死记硬背记住这些东西是不现实的，唯有长期坚持不懈的练习和使用才能达到随心所欲的地步，就像乔峰一般，任何平坦无奇的武功到了他的手里，均可化腐朽为神奇。难道就没有捷径和快速学习的方法么？&lt;/p&gt;&lt;p&gt;捷径真没有，方法可以有！今天就给大家说说如何通过 Vim 学习卡逐步实现从入门到精通。&lt;/p&gt;&lt;p&gt;所谓 Vim 学习卡，是用 Vimscript 编写的一个 Vim 脚本，其中包含了两百多个 Vim 用法。首先，我们把这个文件下载到本地，下载地址：&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=https%3A//gist.github.com/gmccreight/7519289/raw/master.vim" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;https://&lt;/span&gt;&lt;span class="visible"&gt;gist.github.com/gmccrei&lt;/span&gt;&lt;span class="invisible"&gt;ght/7519289/raw/master.vim&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;为了避免混淆，把该文件复制命名为 study.vim，命令如下：&lt;/p&gt;&lt;p&gt;cp master.vim study.vim&lt;/p&gt;&lt;p&gt;用 Vim 命令打开文件，我们可以看到文件分为两部分，从第35行华丽的分割线以上是 Vimscript 脚本，用来创建三个命令：「,,」「,c」「,k」，后续我们将通过这三个命令操控 Vim 卡片。&lt;/p&gt;&lt;p&gt;分割线以下是两个队列，第一个是「= Study」，在37行，表示在学的 Vim 卡片。第二个是「= Known」，在831行，表示已知的 Vim 卡片。&lt;/p&gt;&lt;p&gt;开始时所有的 Vim 卡片都在学习队列种，每个 Vim 卡片有三行，第一行是命令，第二行是解释，第三行空行。代码片段如下：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;M
go to the middle of the window（大写 M 把光标移到窗口中部）

L
go to the bottom of the window（大写 L 把光标移到窗口底部）

10L
go to the tenth line from the bottom of the window（10+大写 L 把光标从底部上移10行）

&amp;lt;c-d&amp;gt;
Go down half a screen（ctrl +d 向下翻半屏）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;学习方式就是从第一个 Vim 卡片开始，学命令，看解释，然后进行操练，练习完成后通过那三个命令移动 Vim 卡片。具体做法：&lt;/p&gt;&lt;p&gt;1、在普通模式执行「:so %」，加载 Vimscript 脚本，定义上面提到的三个命令。&lt;/p&gt;&lt;p&gt;2、把光标移动到 Vim 卡片的第一行，执行：&lt;/p&gt;&lt;p&gt;,,：两个逗号，表示你已经比较熟悉这个命令了，但是还不放心，该操作会把 Vim 卡片放到学习队列的最底部。&lt;/p&gt;&lt;p&gt;,c：逗号+c，表示你对这个命令不明觉厉，希望很快再次见到它，该操作会把 Vim 卡片下移几位，这样你很快就能再次见到它了。&lt;/p&gt;&lt;p&gt;,k：逗号+k，表示你已经彻底掌握了这个命令，该操作会把 Vim 卡片移除学习队列，放入已知队列，也就是「= Known」的下面。&lt;/p&gt;&lt;p&gt;每次学习完成之后，用「:wq」保存退出，下次打开根据上次的进度继续学习。如此循环往复，生生不息，武功终将大成。&lt;/p&gt;&lt;p&gt;当然，你如果总结出了该卡片不包含的命令，也可以加入进来，不断完善，这个 Vim 脚本将变成你的 Vim 学习宝库。&lt;/p&gt;&lt;br&gt;&lt;blockquote&gt;&lt;p&gt;这世界上一直存在一条路，让我们的能力从平庸到杰出，这条路漫长而艰辛，只有少数人愿意走下去，所以，优秀的人永远是少数——来自《MacTalk·人生元编程》&lt;/p&gt;&lt;/blockquote&gt;</description><pubDate>2014-02-26T20:18:40+08:00</pubDate></item><item><title>曲径 - 翻越长城另一法则</title><link>http://zhuanlan.zhihu.com/p/19687770</link><description>&lt;p&gt;前几天的文章《&lt;a href="http://zhuanlan.zhihu.com/mactalk/19682857" class="internal"&gt;VPN - 长城内外，惟余莽莽&lt;/a&gt;》介绍了如何通过自动修改路由表实现 VPN 状态下内外网的路由切换，并在知乎专栏里获得了68个赞，对此我的感受是：赞。&lt;/p&gt;&lt;p&gt;然后就有很多读者询问，Mac 搞定了，我的 iOS 怎么办，Android 怎么办，你这样做让 Windows 怎么想？别着急，都有办法。根据我上篇文章的描述，Windows 和 Android 也可以通过类似方法搞定，但是不越狱的 iOS 则无计可施，上述方式设置起来还是费时费力的。&lt;br&gt;&lt;/p&gt;&lt;p&gt;今天给大家推荐一个更好更智能的服务：曲径，它让你更为优雅的翻越长城。&lt;br&gt;&lt;/p&gt;&lt;p&gt;曲径是一个先进而又易于使用的网站和App加速器，旨在帮助那些生活在中国（比如我们），但仍想在他们漂亮的手机、平板和电脑上用Twitter、Facebook 和 Pandora 服务的人们。&lt;br&gt;&lt;/p&gt;&lt;p&gt;方法：使用 &lt;a href="https://link.zhihu.com/?target=https%3A//getqujing.com/%3Fr%3D51c076d384" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;曲径通幽&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; 进行注册，选择合适的套餐，然后根据对应设备的文章指南进行设置，分分钟完成，之后你就会发现，虽然霾还在，但墙没了。&lt;br&gt;&lt;/p&gt;&lt;p&gt;注意：由于 iOS 上的Twitter 采用了SPDY 协议，导致曲径无法在 iOS 进行网络代理，解决方案：&lt;a href="https://link.zhihu.com/?target=https%3A//support.getqujing.com/kb/articles/18" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;https://&lt;/span&gt;&lt;span class="visible"&gt;support.getqujing.com/k&lt;/span&gt;&lt;span class="invisible"&gt;b/articles/18&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;祝大家翻的开心！&lt;/p&gt;</description><pubDate>2014-02-25T18:10:48+08:00</pubDate></item><item><title>纸书的秘密</title><link>http://zhuanlan.zhihu.com/p/19686074</link><description>&lt;p&gt;接到出版社通知，《MacTalk·人生元编程》已经在京东、亚马逊、当当、互动出版等各网店全面上架了，有需要的读者可以去订购，京东有可能还有几本签名版。相关链接：&lt;/p&gt;&lt;p&gt;京东：&lt;a href="https://link.zhihu.com/?target=http%3A//item.jd.com/11398297.html" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;《MacTalk・人生元编程》(池建强)【摘要 书评 试读】&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;亚马逊：&lt;a href="https://link.zhihu.com/?target=http%3A//www.amazon.cn/dp/B00ID5UV30" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;MacTalk·人生元编程/池建强&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;当当：&lt;a href="https://link.zhihu.com/?target=http%3A//product.dangdang.com/23417548.html" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;《MacTalk・人生元编程》池建强 著&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;互动出版：&lt;a href="https://link.zhihu.com/?target=http%3A//product.china-pub.com/3769393" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;MacTalk・人生元编程&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;下面就给大家说说，为什么有了电子版还要出这本纸版的元编程，纸版与电子版的主要区别除了纸，还有啥。整个事情的经过是这样的，在一个月黑风高的夜晚……&lt;/p&gt;&lt;p&gt;***&lt;/p&gt;&lt;p&gt;在这本书付印的最后阶段，本书的责任编辑杨海玲老师找到了我说：书要出版了，你要不要写个前言和读者说两句？我说：来得及吗？杨老师郑重地看着我点了点头。好吧，那就说两句，于是就有了这一篇前言。&lt;/p&gt;&lt;p&gt;我小学四年级之前一直在农村居住，那时候没见过汽车，只见过马车和小推车。搬到城市之后才发现，这世上居然有汽车这种交通工具，那时我的理想是当一名212吉普车的司机。后来见的车多了，觉得司机不够神气，我希望拥有一辆自己的汽车。这个理想在长大后也实现了。但是我从没有想过自己会出版一本书！今天这本书也要出版了，我很欣慰。&lt;/p&gt;&lt;p&gt;现在回想起来，这本书的诞生经历是传奇和值得称道的。我从来没有出版过一本书，曾经有几次心血来潮想写本技术书，结果规划完目录后自己已经疲惫不堪了，看着层峦叠嶂的目录结构，我仿佛走在一个没有出口的迷宫，想到以后的每个日子都要用业余时间去写这些枯燥的技术文字，我仿佛置身凄风苦雨中而茫然若失，所以，写书计划还没开始，就已经结束了。但是大家都知道，胸中有丘壑的人总能找到吐槽的土壤，是金子总会发光。2012年8月微信推出了公众平台，我终于找到了一个写作的契机。&lt;/p&gt;&lt;p&gt;2012年12月，我开始运营自己的微信公众平台“MacTalk By 池建强”，几乎每天一篇，半年内写了100多篇文章。之所以能够坚持下来，我想得益于公众平台的交互性和正向激励，如果每天都有人告诉你，晚上不读完你推送的文章就不睡觉，你也会坚持下去的。慢慢地读者越来越多，很多数字出版界的朋友也加入了这个队伍。突然有一天，他们不再潜伏，而是爬起来告诉我，你的这些文字该收拾收拾出本书了！我原本是不信的，不过，先是多看的朋友这么说，然后是豆瓣，然后是亚马逊，然后我就信了。这种感觉就像是我一个人混迹于敌占区多年，突然冒出了很多自己的同志，拍着我的肩膀说：小同志，你干得不错！我感到无比荣耀，紧紧握住他们的双手，激动的说：可算找到组织了，其实，俺早就想出本书！&lt;/p&gt;&lt;p&gt;于是电子版的《MacTalk·人生元编程》问世了，书中的内容截止在2013年8月底。&lt;/p&gt;&lt;p&gt;电子书上线后获得的赞誉超乎我的想象，在多看平台上线当天就跃居畅销榜第一名，从此一路榜首，整整霸占了一个月之久。随后上架的很多新书都对我这本书发起了猛烈的攻击，最终都如潮水般褪去，它们失败了，包括韩寒推出的《一个》。因为这个原因，程序员老赵时不时调侃我为“超越韩寒的男子”，虽然这句话看起来错误百出、逻辑混乱，完全不像出自一个优秀程序员之口，但我听起来还是若有所思的。&lt;/p&gt;&lt;p&gt;截止到2013年底，多看上的《MacTalk·人生元编程》获得了700多个评分，平均得分9.1，另有230多条读者评论。有些读者说这是他们的第一本电子书，有些读者说一口气读完，酣畅淋漓。我的感受有两点：&lt;/p&gt;&lt;p&gt;1、我为电子书事业做出了些许贡献；&lt;/p&gt;&lt;p&gt;2、又不是武侠小说，读那么快有必要吗？&lt;/p&gt;&lt;p&gt;事情终于到了峰回路转的时候。电子书虽然风光，但仅限于电子阅读的领域，而且，单纯的电子书是没有ISBN的，想做个图书认证都不行，还不能签售，你总不能卖本书搭个镌刻版 Kindle 吧。这时候另一群关键人物出现了，他们是传统出版界的好朋友。每个人都告诉我，电子阅读确实是未来的方向，你已经考虑了未来的事儿，那现在的事要不要管？只有电子版，你让广大钟情于纸书的群众怎么看？让想要签名版的读者怎么看？……于是我觉得，是时候出一本升级版的《MacTalk·人生元编程》了。最终这个重担落到了程序员的好朋友、人民邮电出版社的杨海玲老师肩上。&lt;/p&gt;&lt;p&gt;和人民邮电出版社的合作是轻松愉快的。我继续写作，除了完善之前的文字之外，还要为这本纸质版再增加十万字。出版社的编辑和美编则开始对于原有的文字进行校对和美术设计。一切都很顺利，除了我偶尔出现写不下去或改不下去的情形。杨老师对我是非常宽容的，遇到这种情况，她就会语重心长地告诉我：对你我心里有底，选题咱已经报去了，选题号也已经批了，情况就是这么个情况，所以您写也得写，不写也得写，还是写吧。于是我的文章顺利地完成了……&lt;/p&gt;&lt;p&gt;剩下的就是杨老师和编辑们的工作了，他们像打磨璞玉一样一点一点地打磨这本书，从文字、内容、印张和色系选择，到最终的版式设计和封面设计，一个细节都不放过。修改顺利的时候他们不会来找我，偶尔找我的时候也是咨询一下我的个人意见，我只要一言不发或若有所思就可以了，因为杨老师他们总能找到最佳的做法。我唯一的任务就是等待，或想点儿别的。&lt;/p&gt;&lt;p&gt;最终的成书就是您手中的这本书，它的封面设计和正文版式都是独一无二的。书封简约大方，干净得一塌糊涂，体现了MacTalk所倡导的纯粹之美。没有腰封，没有邀请业界大牛和土豪在封底写推荐语（年底了，他们都在做新年计划，我就甭给人家添麻烦了）。正文采用图文并茂的方式，页码和标题都精心设计过，如果您获得了良好的阅读体验，那么我们要感谢这本书的美术设计。&lt;/p&gt;&lt;p&gt;书的内容比原来的电子版增加了 Mac 入门和演化史系列、Linux 系列、Vim 插件系列、职场系列、编程与写作等内容，全书共计70多篇文章，划分为六大主题：Mac、程序员与编程、科技与人文、 人物、工具、职场。篇篇独立成文，可拆可合，您可以随时翻阅。Mac 主题的最后部分是130个 Mac 使用技巧，供 Mac 用户参考使用。另外，我根据书中的主题和时间线，重新调整了文章的顺序，更符合读者阅读习惯。&lt;/p&gt;&lt;p&gt;这既不是传统意义上的 Mac 用户手册或技术图书，也不是一本思想文集，而是一个70后程序员，以柔软的笔触，立于 Mac 之上，讲述技术与人文的故事，起于 Mac 而不止 Mac。书中写了 Mac，说了苹果，聊了技术，侃了人生元编程，汇聚了我个人的经历和悲喜。您读完了，有收获就是好事，不用想的太多。如果书里在讲 Mac，那就是苹果公司的 Mac；如果在说Shell，那就是操作系统的Shell，如果在聊程序员，那就是你我身边的程序员。我尽量做到文字简单、内容有趣，因为简单和有趣也是一种力量，希望您读完这本书以后，也能拥有这种力量。&lt;/p&gt;&lt;p&gt;王小波说，“每一本书都应该有趣，对于一些书来说，有趣是它存在的理由；对于另外一些书，有趣是它应该达到的标准”。我希望这本书达到了有趣的标准，同时还讲了一些有用的东西。如果您说没达到，那我下次继续努力。&lt;/p&gt;&lt;p&gt;在写作的过程中，我得到了很多朋友的帮助，包括技术圈和出版界的朋友。其中冯大辉先生在我运营微信平台和写作的过程中给予了诸多支持和推荐，并为此书作序；微信平台“二爷鉴书”的作者邱岳为此书作序并多次推荐；网友“密码有误”为此书作序并进行了部分文字的校对。杨海玲老师在成书的过程中起到了中流砥柱的作用，没有她的催促和辛劳的工作，此书无法出版，在此一并谢过。&lt;/p&gt;&lt;p&gt;特别感谢我的妻子和女儿，写作占用了我大量的业余时间，虽然我很努力地抽出时间去陪伴家人，但在这方面显然是不达标的。没有她们的包容、照顾和期盼，此书无法出版。&lt;/p&gt;&lt;p&gt;最后，我把这本书献给我的父母。我的父母就像千千万万的普通父母一样，永远在远方默默注视着子女的成长。我在他们身边得到了最好的教育和关怀，他们是这个世界上我最敬爱的人！&lt;/p&gt;</description><pubDate>2014-02-23T20:08:08+08:00</pubDate></item><item><title>微信写作与 Markdown</title><link>http://zhuanlan.zhihu.com/p/19684306</link><description>&lt;p&gt;昨天发了一条文本消息后，收到两位女读者的无情打击，一位说「豆瓣评论不是那么重要，都是一座小小的城市，过于在意反而落了下乘」。另一位说「估计是您的幽默感跟豆瓣的小清新没在一个段儿上，但您不能成为一个人人喜欢的桔子呀」。&lt;/p&gt;&lt;p&gt;说的真好，都是大音希声，都是亲读者！&lt;/p&gt;&lt;p&gt;关于做事，做了就会有人评说，你不可能让所有人都说好，当然也不可能所有人都说坏。如人饮水，冷暖自知。&lt;/p&gt;&lt;p&gt;关于喜欢，本身就没什么理可讲，比如：&lt;/p&gt;&lt;p&gt;如果你喜欢的公众号天天发文章，得到的评价是持之以恒，谁与争锋。&lt;br&gt;如果你喜欢的公众号不天天发文章，得到的评价是言之有物，掷地有声。谁会天天发那些空洞呓语呢？&lt;br&gt;如果你喜欢的公众号文章够长，那就是长而益精。&lt;br&gt;如果你喜欢的公众号文章够短，那就是浓缩的才是精华。&lt;/p&gt;&lt;p&gt;就是喜欢啊就是喜欢，这就像当年的汉子都是巴蒂斯图塔，现在的男人都是李敏镐一样，基本都是无解没救的难题，Let it be，但行好事，莫问前程。&lt;/p&gt;&lt;p&gt;------------------------------------------------------&lt;/p&gt;&lt;p&gt;关于 MacTalk 微信文章的排版，不客气的说，曾经被无情的赞美过，很多人问过我写作工具和排版方式、字体等诸多问题，问的多了，回复也多，所以还是写一篇文章吧，算是统一的回复。&lt;/p&gt;&lt;h4&gt;先说说 Day One&lt;/h4&gt;&lt;p&gt;我使用 Day One 进行微信文章创作，纯文本写作，版式采用 Markdown 语法控制。&lt;/p&gt;&lt;p&gt;很多程序员都有纯文本情节，我也不例外。除非必要，我所有的文档基本上都以纯文本的形式存放。Day One 就是一款纯文本、支持 Markdown 语法的日志类软件。&lt;/p&gt;&lt;p&gt;最初发现这款软件的时候，我发现这货几乎是为微信写作而生，界面优雅，功能简约，支持每日写作，一日多条，日历，时间轴，地图信息和日期管理，文章配图，多终端（OS X 和 iOS），iCloud 或 Dropbox 云同步，搜索，标签，PDF 导出……等等。&lt;/p&gt;&lt;p&gt;最重要的是，支持 Markdown！当我发现了这个 App 之后，我想，微信写作就是它了。&lt;/p&gt;&lt;p&gt;这个软件68块，去 Mac App Store 购买即可。我是2013年上半年购买的，我想它为我带来的回报何止成百上千倍。所以，我在微信、书中有机会就会推荐一下，也推荐给很多好朋友使用。是开发者，都不容易。另外，如果读者中有 Day One 公司的，告诉他们一声，拖欠的稿费不用付了，谢谢。&lt;/p&gt;&lt;h4&gt;再说说 Markdown&lt;/h4&gt;&lt;p&gt;Markdown既不是工具也不是程序语言，而是一种轻量级的「标记语言」，是由约翰·格鲁伯（John Gruber）和亚伦·斯沃茨（Aaron Swartz）创建的。它允许人们使用纯文本格式编写文档，然后根据其中的标记转换成有效的XHTML（常用的就是HTML）文档。&lt;/p&gt;&lt;p&gt;理解了这一点，我们就知道，支持 Markdonw 语法的写作软件至少有两种模式，一种是写作模式，一种是预览模式，在 Day One 中可以通过 command + 回车进行模式切换。预览模式会把你写的文字和标记解析成对应的 HTML，其中的版式效果通过软件内置的 CSS 进行渲染。&lt;/p&gt;&lt;p&gt;Markdown 的标记语法非常简单，如果你想好好学学，可以去 Google 一下，满世界都是教程，如果你觉得够用就好，看下一节吧。&lt;/p&gt;&lt;h4&gt;最后是干货&lt;/h4&gt;&lt;p&gt;我说说自己的做法，以下内容采用了「甭废话有事说事」模式，欢迎品鉴：&lt;/p&gt;&lt;p&gt;1、采用 Day One 进行微信创作。&lt;br&gt;2、字体选用 18 pt，在手机显示效果最佳。字体使用了Avenir，纯属个人喜好。&lt;br&gt;3、每篇文章支持一张配图，不爽，忍了&lt;br&gt;4、在 Day One 中文章第一行默认加黑为标题，不想要标题第一行空着即可。在标准 Markdown 里用一个或多个「#」和一个空格来设置各种大小标题，例如 「## 哈哈」，放在行首。&lt;br&gt;5、段首不留空格，我自己的习惯，留空格令人发指和抓狂。&lt;br&gt;6、标准 Markdown 的分段用回车两次（空一行）的方式，在 Day One 里回车一次或两次都可以，只不过换行的行距不同，大家可以在我的文章里看到。&lt;br&gt;7、引用文字使用「&amp;gt;」，文本最前面会出现竖线，表示该段文字是强调或引用。&lt;br&gt;8、如下操作可以实现绿色标题和下划线的效果：#### 示例（放在行首）。&lt;br&gt;9、由于微信的编辑器对列表和代码的支持非常差，所以我一般就用1、2、3、4的写法，没有用 Markdown 的标准列表写法。也很少贴代码，很麻烦。&lt;br&gt;10、Markdown 里加链接也很容易，你可以写成&amp;lt;&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com.cn/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;http://macshuo.com.cn&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&amp;gt;，不过微信的图文消息不支持文中外链，只能呵呵了。&lt;br&gt;11、使用三个星号（***，单独放在行首），可以实现我常用的那条若隐若现的性感分割线&lt;br&gt;12、写作过程中使用 command+回车进行模式切换，调整版式效果。&lt;br&gt;13、写作完成之后，通读一遍，检查版式和错别字。但是，有时候这一点是徒劳的，因为你左看右看上看下看原來每个字都不简单，怎么看都像是一篇完美的文章，衰。&lt;br&gt;14、用 Safari 打开微信的素材管理编辑器，把预览模式下的文字复制进去，略做调整，如果有时间还可以发给自己的手机看看效果，没时间就直接发送了事。&lt;br&gt;15、一篇美好的文章就推送给读者了，然后你就可以想象读者看到你的文章后那种热切和缠绵……这当然是意淫。&lt;br&gt;16、时间已经过去了两小时，洗洗睡吧。&lt;/p&gt;&lt;h4&gt;总结&lt;/h4&gt;&lt;p&gt;首先，一篇排版良好的文章可以体现写作者的品味，如果你是个产品经理，尤其要注意这一点，不是 MacTalk 的读者我不告诉他。&lt;/p&gt;&lt;p&gt;其次，好的排版会让读者读起来舒心和开心，他们一高兴就会想「这小子花了这么多心思，咱还是买丫本书吧」。&lt;/p&gt;&lt;p&gt;第三，可以买书。&lt;/p&gt;&lt;p&gt;------------------------------------------------------&lt;br&gt;&lt;/p&gt;&lt;p&gt;今天京东搞了个活动，叫做JD 有约，大家可以在这条微博评论里问我一些问题，有三本签名版的书送给中奖者，希望大家踊跃参与。&lt;/p&gt;&lt;p&gt;今天写的有点多，累了，准备写会程序歇歇脑子。&lt;/p&gt;&lt;p&gt;点击{阅读原文}参与微博互动，晚安。&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//weibo.com/1717871843/AxAXGFviA" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;京东的微博&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;</description><pubDate>2014-02-20T23:15:07+08:00</pubDate></item><item><title>VPN - 长城内外，惟余莽莽</title><link>http://zhuanlan.zhihu.com/p/19682857</link><description>&lt;p&gt;由于众所周知的原因，VPN 在国内是一个很好的业务服务，据我所知，无数程序员为了访问 Twitter、Facebook 和各种不知名的外国网站，不得不借助 VPN 的力量翻上翻下。&lt;/p&gt;&lt;p&gt;在我春节期间推荐过一次 VPN 服务之后，很多人就反馈，VPN 是好用，挂上之后国外的网站是能访问了，但原来国内正常访问嘻唰唰的网站立刻变得慢吞吞了，怎么破？这是个问题。如果连了 VPN 没做任何设置的话，会导致所有网络都是通过 VPN 访问，缺点有二：&lt;br&gt;1、VPN 的流量问题，严重的话还可能导致被 VPN 提供商封杀（比如没事就去下载动作片）。&lt;br&gt;2、嘻唰唰变慢吞吞的问题。&lt;/p&gt;&lt;p&gt;我当时的回复是设置一下路由表即可。估计很多朋友没明白是肿么回事，这事就过去了。&lt;/p&gt;&lt;p&gt;今天小道君在朋友圈碎碎念：「使用 VPN 翻越长城的问题在于，启用 VPN 的时候国内网站速度巨慢，而绝大多数人要同时访问国内和国外的服务，这个时候很纠结啊，就好比一个人一会儿脱裤衩，一会儿再穿上，这能舒服么？」&lt;/p&gt;&lt;p&gt;我看到之后，陷入了深深的思考，这个 VPN 已经上升到了裤衩的高度，问题似乎变得有些严重了，所以我决定今天写点什么……&lt;/p&gt;&lt;p&gt;下面就给大家介绍一下如何通过修改路由的方式，让用户在使用 VPN 作为默认网关时，不用 VPN 访问国内网站，减少 VPN 的网络流量消耗，增加国内网站的访问速度，促进人民群众的安定团结，推动社会的长治久安。&lt;/p&gt;&lt;p&gt;为了简单起见，我只讲步骤不讲原理，并只针对 Mac 用户（Windows 用户请找 WinTalk，谢谢）。&lt;/p&gt;&lt;p&gt;1、自行搭建 VPN 服务器或购买 VPN 提供商的服务。&lt;br&gt;2、打开系统偏好设置—&amp;gt;网络，增加 VPN 设置，VPN 类型选择PPTP，根据提示设置用户名密码等信息即可。&lt;br&gt;3、下载 chnroutes.py，相关网址：&lt;a href="https://link.zhihu.com/?target=https%3A//code.google.com/p/chnroutes/downloads/list" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;Downloads - 
 chnroutes -
 
 
 Scripts to generate special routes for china ips&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;4、打开终端进入下载文件的目录，执行：python chnroutes.py -p mac，该目录下会生成两个文件「ip-up」和「ip-down」。&lt;br&gt;5、把这两个文件复制到 /etc/ppp 下，然后进入该目录执行：sudo chmod a+x ip-up ip-down&lt;br&gt;6、没有5了，已经全搞定了。&lt;/p&gt;&lt;p&gt;测试一下，在终端执行：netstat -nr，检查路由表的输出信息。连接 VPN，然后再次执行：netstat -nr，你会发现路由表已经发生了变化。这时再去访问国内的网站，你发现他们又变得嘻唰唰了，同时还能访问 Twitter 和 Facebook！&lt;/p&gt;&lt;p&gt;就到这里，晚安。&lt;/p&gt;&lt;p&gt;点击【&lt;a href="https://link.zhihu.com/?target=https%3A//code.google.com/p/chnroutes/wiki/Usage" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;阅读原文&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;】，阅读其他操作系统和 VPN 类型的解决方案（不用 Mac 也管哈）。&lt;/p&gt;&lt;p&gt;今日题图：GreatWall，来自National Geographic&lt;/p&gt;</description><pubDate>2014-02-19T11:03:39+08:00</pubDate></item><item><title>从牛博网到百度百家</title><link>http://zhuanlan.zhihu.com/p/19664706</link><description>&lt;p&gt;2012年的夏天，江湖上突然出现了一个叫做微信公众平台的家伙，他找到了很多坠落在凡间的前朝 Blogger，塞给他们一只笔，告诉他们：写，你们将获得前所未有的体验，在移动互联网的世界里，你们将获得重生！从那以后，这些慵懒的写作者变成了互联网上的另一道风景，史称自媒体。&lt;/p&gt;&lt;p&gt;传统媒体和传统互联网媒体纷纷表示不明觉厉，他们怎么也想不通，平常这些没事只知道晒太阳的Blogger，每人每年交的租子，最多也就是12篇干巴巴的文章，一提约稿躲八丈远，为什么现在都是一年200篇起？质量上还不打折，而且还免费。这特么什么劲头？这是喜大普奔的劲头！&lt;/p&gt;&lt;p&gt;于是，但凡沾点媒体性质的互联网公司，都开始打造自己的自媒体平台，有的公司还嫌不过瘾，一下搞俩，谓之一拖二双保险，估计走的是双机热备的路子。比如：网易有易信公众平台和云阅读内容公众平台，搜狐有搜狐新闻自媒体平台，阿里有来往公众平台，百度有百度文库和百度百家平台，知乎有知乎专栏，豆瓣有豆瓣专栏。新浪看着不是个事，在微博里植入了文章私信推送，效果不好，貌似也准备直接推自媒体平台这辆独轮车了……这还不包括那些聚合类的平台，例如鲜果、ZAKER、Flipboard 等。&lt;/p&gt;&lt;p&gt;看完这些，你就应该知道，为什么自媒体会天天得瑟了，僧多粥少，平台太多啦。如果你凑巧是个微信平台的写者，还有了一票读者，每天写完两千字之后的事，就是琢磨这两千字要填哪些坑，等所有的坑都填完之后还要拍上两锹，然后直起腰来挥挥手，对自己吟唱：广阔天地，大有作为！&lt;/p&gt;&lt;p&gt;我自己没有找那么多的坑。&lt;/p&gt;&lt;p&gt;于我而言，能够坚持下来，主要得益于微信公众平台的交互性和正向激励，首先由于订阅和推送的机制让我有了一批相对固定的读者，其次移动阅读的特性保证了我可以获得读者足够多的反馈和一对一的交流机会，第三，如果每天都有人告诉你，晚上不读完你推送的文章就不睡觉，你也会坚持下去的。&lt;/p&gt;&lt;p&gt;相对而言，物质激励反而是次要的，但是同样「重要」。&lt;/p&gt;&lt;p&gt;那我有什么理由去尝试其他的自媒体平台呢？我并不喜欢主动把自己的文章贴的到处都是（被动的咱实在是管不了）。上面提到的那些平台，目前我只试用过知乎专栏，间或发一些文章。从时间点上看，知乎专栏做的很早，但是并没有实质性的进展，到现在首页还是「新功能即将推出」。豆瓣专栏由于付费特性和内容要求，没考虑也没时间，另外我的文风搁到小清新里也就是个水土不服的命。其他的平台看了一圈，要么偏传统，要么同质化，倒是最近百度推出的「百度百家」引起了我的一点兴趣，因为它让我想起了一个已经关闭很久的网站——牛博网。&lt;/p&gt;&lt;p&gt;牛博网是老罗在2006年伙同黄斌创建的博客网站，网站风格和内容特立独行，开始就摆出了一副「我不做牛博网，人民都不答应」的姿态，与老罗的风格相得益彰。牛博网与其他博客网站最大的不同就是，博客入驻采用了自我推荐和邀请的方式：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;牛博网不能容忍那些优秀的博客被埋没在几乎全是文字垃圾的大型博客网站里。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;当时的连岳、王小峰、老六、莫之许、王小山、韩寒、胡缠、和菜头、宋石男、柳叶刀、柴静、方舟子等知名写作者都在牛博写作，这在一定程度上保证了博客内容的质量，并促进了牛博文化的繁荣昌盛。但是盛极必衰，老罗性格强势，那些作者也都不是省油的灯的，网络上没有永远的敌人，也没有永远的朋友，观点对立导致了各种探讨，慢慢是攻击和谩骂，没多久就发了多起 XXX 骂人事件，随后大牌作者分崩离析。这还不算什么，由于牛博不设敏感词，采用的是组织让删帖才删帖的策略，导致牛博慢慢发展成一个政治网站，这就基本宣布了牛博的死刑，啥时执行也就成了个时间问题。&lt;/p&gt;&lt;p&gt;然后就是牛博国际远走北美，嫣牛博奄奄一息。2013年6月，牛博网正式关闭。&lt;/p&gt;&lt;p&gt;曾经有一段时间，牛博网是我每天都要阅读的网站，后来开始采用 RSS 订阅的方式阅读，再后来基本要翻#@墙阅读。牛博网让我看到了很多人文类的观点和故事，对我个人帮助很大。所以，人们并不是不再需要阅读长文章，高质量、有价值的文章永远是少的，它们就像金沙一样深深的埋藏在沙砾之下，如何吹沙现金、为用户呈现高质量的内容才是平台要做的事情。哪怕只有1%的人愿意花时间去读这些好文章，这都是一个极大的群体。无论是当年的牛博网，还是现在的各种自媒体平台，都证明了这一点。&lt;/p&gt;&lt;p&gt;牛博网就像互联网长河里的一朵浪花，转瞬即逝，又像闪电划过长空，痕迹尚存，电光已殁。再想觅得一点牛博存在过的痕迹，只能从维基百科或类似「牛博往事」之类的文章中找寻了。&lt;/p&gt;&lt;p&gt;写到这有人就要问了，已经逝去的牛博网和刚刚开启的百度百家，到底有哪些异同呢？我觉的最大的相同点有两个，一是写作内容，大家依然在写长文章，长文章依然有读者。二是作者的入驻方式，牛博网是自荐和邀请制度，百度百家更进一步，目前只有邀请。邀请制度有可能会把一些优秀的作者挡在门外，也可能会引起大牌作者的反感。关于前者，目前微信公众平台已经对作者进行了筛选，好的升起，劣的消亡，不是大问题；关于后者，做产品本来就不能让所有人满意，天要下雨娘要嫁，随他去吧。&lt;/p&gt;&lt;p&gt;优秀作者是保证优秀内容的前提，虽然好作者也会写出烂文章，但这种几率总是远远小于烂作者写出烂文章的。所以，现在的自媒体平台，比拼的不该是进驻了多少家自媒体，而是你的平台到底能够产生多少优秀的内容，有了内容，再加上好的互动、盈利模式和阅读体验，就能够吸引更好的作者和更多的读者。现阶段看来，严格的邀请制度一定程度上保证了这一点，打开百度百家的作者列表，目前也就是100名左右，看看名字，大部分还是靠谱的。如果这个列表上的名字在不远的将来没有变成10000个，那么这事也可能是靠谱的。&lt;/p&gt;&lt;p&gt;除此之外，还可以做以下比较：&lt;/p&gt;&lt;p&gt;牛博兴起依赖老罗的个人品牌，百度百家需要用百度的名头和流量；在牛博写作免费，无欲则刚，在百家可以有收益，利益擎肘；牛博偏向人文和政治，百家侧重互联网和文化；在牛博写字有可能执牛耳尖刀相望，约架是分分钟的事，在百家上基本是自说自话，即使有评论，也是读者的评论。&lt;/p&gt;&lt;p&gt;如此种种，让我看到百家之后想起牛博这个曾经给我带来无数思考和快乐的博客网站，于是写了这些文字，聊做怀念。&lt;/p&gt;&lt;p&gt;当然，百度百家最终能否成事，我是看不清的。当年我还看好牛博网呢，当年我还看好老罗培训呢，现在不都锤子了吗？所以，现在，真实的情况是我也不知道能看好啥。不过如果有机会的话，我会在这个平台上尝试一下。&lt;/p&gt;&lt;p&gt;另一个值得关注的自媒体平台是豆瓣专栏，百度百家提供的是流量-广告-变现，豆瓣直接推出文章付费阅读，在这样一个免费模式遍地开花的时代，能够推出这样一个产品，本身就是需要勇气的！觉得自己的文字足够清新，可以去那写写试试。&lt;/p&gt;&lt;p&gt;话说回来，虽然自媒体平台众多，但微信公众平台仍然是自媒体内容的发布首选，至少在现阶段是这样。另外为百度百家提个醒，文章的阅读体验实在不怎么样，字体和版式都需改进，既然要做阅读，那最好拿出做阅读产品的样子。&lt;/p&gt;&lt;p&gt;我不是个媒体人，虽然2013年也像打了鸡血一样写了200多篇文章，还顺手出了一本书，但停下来的时候，我清楚的知道，自己还是一个靠技术吃饭的手艺人。屋外的喧嚣和我有什么关系呢？我只是喜欢在 Mac 上编程、写作和阅读而已！写累了就歇一歇，歇够了就继续上路。&lt;/p&gt;&lt;br&gt;&lt;p&gt;在未来的日子里，我依然是一个程序员，但这并不妨碍我在编程的同时，写一些有趣的文字……&lt;/p&gt;</description><pubDate>2014-01-26T20:52:33+08:00</pubDate></item><item><title>程序员的另一只翅膀（年终剧场版）</title><link>http://zhuanlan.zhihu.com/p/19654584</link><description>&lt;p&gt;于我而言，为数不多的奢侈行为就是在周末睡个懒觉之后再睡个午觉，如果能在冬日暖阳里饱饱睡个下午觉，下一周必然精力充沛的像打了鸡血。不过最近两周我的奢侈行为都被取消了，首先家中大小领导都认为我的作为就是不作为，不仅充满不健康的小资情调，而且缺乏进取心（睡觉能改变世界吗？）。领导们从网络上搜出了「早起的鸟儿有虫吃，看看这些成功人士都几点起」「成功励志：如何成为一个早起者」等鸡汤对我进行长时间的灌溉。另外，小领导的日常事务日益繁重，接送陪考玩这些影响家庭民生的工作我必须要负起责任来，It's your turn now！小领导用庄严的英语宣告了这一点。&lt;/p&gt;&lt;p&gt;除了家事，还有外事，上周日参加了由百度和InfoQ举办的「百度技术沙龙」活动，我做了「编程与写作」的演讲。参加过很多技术大会，这种给程序员讲非技术的故事，还是第一次，也是最好的一次。&lt;/p&gt;&lt;p&gt;周日下午办妥了小领导的事情，匆匆驱车赶到宣武门的繁星剧场。作为常年游荡在五环外的挨踢精英，我是很忌惮进城的，因为常常会忘记限行号码，路况复杂还容易违章，京城的路虽然横平竖直，但是经常容易出现右转右转右转再右转的情况，让人心有余悸。等我一路小心顺利抵达目的地后，发现门口聚集了大批的青年人士，观察了一下发现周围没有武警，估计不是学生运动，于是我想，百度沙龙果然名不虚传，粉丝居然都排到外面来了。打开车门一问，维持秩序的小姑娘白了我一眼说，别闹了，这是吸血鬼日记的粉丝见面会！我不明觉厉，又问能停车吗？小姑娘往前指了指，我再次不明觉厉起来，问了路口的老大爷，老大爷说这是宣武门，没停车的地儿。&lt;/p&gt;&lt;p&gt;我有点绝望，转了个弯继续向前，心想再找不到停车位就得开回去了。终于，敬爱的新华社大楼出现在我的面前，并且门口有一个空的停车位，我立刻用娴熟的车技把车挤了进去，下来后左右看看，既没有便衣也没有收停车费的，于是高高兴兴往剧场去了。&lt;/p&gt;&lt;p&gt;到了剧场，InfoQ 的女将当当已经来接了，据说没人接进不去。进门时我们果然被拦下了，当当说百度的，然后她就进去了，我就被拦下了，当当立刻变得彪悍起来，横眉冷对保安，大声道，这是百度的讲师。保安一看吓尿了，于是我也进去了。女将英姿果然不同凡响。&lt;/p&gt;&lt;p&gt;我去的时候会议内容已经进行了一半，进门就碰到几位老熟人。厉哥是讲者之一，他的主题是桥牌，已经讲完了。对了，忘记介绍这次的主题了，分别是程序员听音乐打桥牌，做美食玩骑行，秀街舞谈嗅觉，爱长跑讲写作，我到的时候已经是一位90后的女程序员已经开始秀街舞了。厉哥懊丧的对我说，自己讲的不好，前面有两位讲的非常棒。我以为他是再给我增加心理压力，笑了笑没往心里去。后来才知道他不是谦虚，厉哥演讲的时候有听众在问，这哥们是来讲桥牌的么？&lt;/p&gt;&lt;p&gt;进入剧场黑压压的全是人，整个舞台风格基本上是按照 Apple Event 的规格设置的，就是场地小点，只容纳了200人，很多朋友在前面站着听讲。正在演讲的小姑娘虽然靓丽神秘，但气场不强，后面讲嗅觉的兄弟也算不温不火，最火爆的是阿勇爱跑步，小伙子讲东西幽默有趣，手里还拎着7块马拉松奖牌，很会营造现场气氛，观众反映也很热烈，掌声连连。&lt;/p&gt;&lt;p&gt;他讲完了就该我出场了，如何接续下文是个难题，讲不清楚算失败，冷场了算失败，开场没效果也算失败。我慢慢琢磨，阿勇也快讲完了，我发现他唯一的槽点就是超时和百度的 KPI，所以我决定出场的时候就以此开篇，以慢打快。&lt;/p&gt;&lt;p&gt;我上了台之后，没急着开始，等待了几秒钟，等气氛冷却下来，我说，最近程序员加班的事情搞的沸沸扬扬，很多人吐槽 BAT 加班严重，今天到了现场之后，我终于知道百度为什么会加班了，完全没有时间观念嘛，20分钟的主题能讲40分钟，你说不给上 KPI 行吗？现场一片笑声，然后是掌声。顺利开篇，后续就好办了，我的演讲主题分为三点，编程与写作、为何而写、写什么怎么写，因为事先做过准备，一切都无比顺利，在讲的过程中大量的阅读发挥了作用，很多即兴发挥的效果反而比原来的准备更出彩。&lt;/p&gt;&lt;p&gt;具体的内容就不讲了，大家等着看视频吧。八场演讲，各不相同，希望大家各有各的收获。&lt;/p&gt;&lt;p&gt;如果我没记错的话，这次演讲有三个人用了 Keynote，Mac 还没有形成压倒性的优势，看来 Mac 君还得加把劲。&lt;/p&gt;&lt;p&gt;写了这么多，就图个节日剧场气氛，最终是想告诉大家，程序员的人生里，绝对不应该只有技术！&lt;/p&gt;&lt;p&gt;如果你是一位程序员，编程已经是一只可以飞翔的翅膀，我们生在一个技术改变世界的时代，我们可能正在做着能够改变世界的技术，这是无上的荣耀和机遇。但是，为了不让我们在生活中打转和迷失，为了生活的平衡，我建议大家去寻找你的另一只翅膀，无论是音乐、运动、绘画还是写作，找到了，你的飞行就会在空中划出更加完美的曲线，你的人生也会更完整。&lt;/p&gt;&lt;p&gt;无论多么不舍，2013年还是要过去的，时间从来不和任何人客气。有位哲人说过，在一年里，人会有36次兴起辞职的念头，有12次兴起创业的想法，有6次想结婚或离婚，有1到2次想改变或毁灭世界，对我来说，这些都没有发生，不知道是好事还是坏事，就这样吧，咱们2014年再见。&lt;/p&gt;&lt;p&gt;希望永远在前方，感谢大家一年的陪伴，新年快乐！&lt;/p&gt;</description><pubDate>2014-01-10T15:41:24+08:00</pubDate></item><item><title>日记——程序员的烦恼</title><link>http://zhuanlan.zhihu.com/p/19654569</link><description>&lt;p&gt;前天（2014年1月7日，阴，据说有人在延庆看到了几片雪花）&lt;br&gt;&lt;/p&gt;&lt;p&gt;————————————————————————————&lt;/p&gt;&lt;p&gt;我用了一晚上的时间写了三千字，写完后已至凌晨。古人云，白发三千丈，缘愁似个长。写完三千字之后我找到了这种感觉，又读了 N 遍，改了 N 遍，终于沉沉睡去。醒来后再读，发现自己被感动了。这一点充分证实了，Mac 君依然在写作的道路上狂飙突进，以一个二把刀的身份。希望在下个阶段，Mac 君能够从二把刀转变为一个合格的工匠。&lt;/p&gt;&lt;p&gt;这三千字，暂时还不能发。&lt;/p&gt;&lt;p&gt;昨天（2014年1月8日，晴，大风吹）&lt;/p&gt;&lt;p&gt;————————————————————————————&lt;br&gt;&lt;/p&gt;&lt;p&gt;我开了一天的会，会议从早上9点持续到晚上7点，期间吃了一碗面。参会的每个人似乎都发言了，但我忘了他们说了些什么。我自己也发言了，我也忘记了自己说了些什么。似乎做了很多决定和决策，又似乎什么都没定下来。我很疲惫。晚上回到家想写点什么，打开微信后台看到有个叫麻花的兄弟在吟唱：强哥，发个文章看看吧，火车上睡不着啊。我心想，难道睡不着也要强哥哄吗？多大岁数了都！接着我又打开了用户分析，取消关注的人数又增加了几十个，于是我很伤感。掐指算算，这一年取消关注的读者也有2万了，好在新增人数永远大于取消关注人数，否则后果是严重的，成为负数也是可能的。据说防止取消关注的秘诀就是什么都不写，让你的微信号静静的躺在读者的折叠文件夹里，既不发声，也不回复，也许会躲过一劫。于是我决定这个晚上什么都不写……然后眼前一黑，睡过去了。&lt;/p&gt;&lt;p&gt;今天（2014年1月9日，晴的厉害，气温似乎更低了）&lt;/p&gt;&lt;p&gt;————————————————————————————&lt;br&gt;&lt;/p&gt;&lt;p&gt;事情似乎都走上了正轨，下午一口气处理完这几天累积的「年关例行事务」，效率还不错，看来从明天开始就可以写点代码并考虑2014年产品规划和实施的事情了。2013年我们的平台产品做了一个重要的 Release，开发环境大部分都迁移到了 Git 和 Maven 上，如果没什么变化的话，2014年我会把重点放到企业移动应用和 UI 模式优化上。要做的工作还很多，不过我不急，只要有人、时间和空间，事情总是可以做成的。&lt;/p&gt;&lt;p&gt;前几天送书活动公开了我的 icloud 邮箱，最近收到了不少读者来信，其中大部分都属于「程序员的烦恼」，今天有点时间，做个答读者问吧。&lt;/p&gt;&lt;p&gt;1、工作中提前完成了自己的任务，应该学习提升还是去帮助他人？&lt;br&gt;帮助别人完成任务也是任务。如果你提前完成了自己的工作，最好的做法是去问你的上级接下来的任务是什么。如果暂时没有其他任务也没有兄弟找你帮忙解决问题，那么就去看书学习吧。提升自己是利人利己的事。&lt;/p&gt;&lt;p&gt;另外，不要忘了好好利用剩余的8小时。&lt;/p&gt;&lt;p&gt;2、应届毕业生投简历到 BAT（百度阿里腾讯）石沉大海怎么破？&lt;br&gt;那就不要投嘛。据我了解，BAT 对应届毕业生的要求还是很高的，候选人太多，自然可以好好挑挑。石沉大海并不意味着你不够优秀，只是你现在不够优秀而已。放低身段，先去一些不知名的公司锤炼一下，如果能够做到独当一面，你的眼光和技能、经验都会不一样的，到时候再「说英雄谁是英雄」。&lt;/p&gt;&lt;p&gt;3、我现在从事 Android 开发，但我看好 iOS，我应该放弃 Android 转投 iOS 的怀抱吗？&lt;br&gt;如果你在 Android 的怀抱里获得的是冰冷，在 iOS 那也未必能找到温暖。Android-Java，iOS-Objective-C，虽然我更偏爱 iOS，但是这两个平台和技术，都是好技术，要不然怎么能分庭抗礼这么多年呢？如果你觉得做 Android 悲催，其实是你自己悲催，任何一门技术做到顶尖都是需要坚持和磨练的。&lt;/p&gt;&lt;p&gt;另外，为神马不双飞呢？这又不是结婚，亲吻 Android 的同时，不妨碍你拉起 iOS 的小手啊。少刷微博少看电视，就行了。&lt;/p&gt;&lt;p&gt;4、操作系统、算法、数据结构、设计模式到底该不该学，工作中根本用不到嘛！&lt;br&gt;最近搞「自媒体」的人似乎功利心大盛，每个人都觉得自己写了这么多字，我容易吗？也该有回报了吧？也该套现了吧？所以好多事情就有些变样。还好我不是自媒体，不用担心这个。&lt;/p&gt;&lt;p&gt;其实学习也是一样，不要那么功利。如果每学一门知识都想着怎么换成银元，第一是心累，第二是学成二把刀的几率大大增加。做为一个程序员，操作系统、算法、数据结构、设计模式等基础知识当然应该学，这是程序员的尊严。至于实际工作中是否能用的上，那是另一回事，用上了就是你的运气，用不上也是很自然的，我小时候还学了一大堆无线电知识呢，最终也没成为无线电专家啊。有人说很多技术不用就会忘记了，那就用呗，做开源项目，写文章，这都是用。退一步就算忘了也没什么，再看一遍就是了。&lt;/p&gt;&lt;p&gt;多少美好的事物，都他妈的毁在了功利二字上！&lt;/p&gt;&lt;p&gt;————————————————————————————&lt;br&gt;&lt;/p&gt;&lt;p&gt;二把刀定理：写作永远是自己冷静让别人激动的事情，被自己的作品感动的或涕泪涟涟或击节赞叹的货，一定是个二把刀，证明完毕。&lt;/p&gt;</description><pubDate>2014-01-10T15:38:07+08:00</pubDate></item><item><title>闲话自媒体</title><link>http://zhuanlan.zhihu.com/p/19638771</link><description>&lt;p&gt;自媒体这词不知道是啥时候发明出来的，我只记得那是一段白天雾霾弥漫，夜里月黑风高的日子，大家正在比着更新微信平台的文章，你周一到周五，我就一周七天不休，你早上发，我就晚上推，你文本我就图文，你图文我就音频，你音频我就视频，牛的还可以一天两三条。正当大家忙的不亦乐乎的时候，突然有一天，自媒体这个词就像天外来客一样出现在大家面前，它掸掸衣服清清喉咙，对这些写字的人说，「请稍息。你们忙活了这么久，从今以后就都归我管了，谢谢」大家面面相觑，说，滚，然后就又埋头写字去了。&lt;/p&gt;&lt;p&gt;从那以后，不管你承认不承认，愿意不愿意，自媒体的帽子就像紧箍咒一样牢牢的扣在了头上，不认同和解释是徒劳的，反正你们最终都会被自媒体的。对这一点我感同身受，就像我每次介绍自己的公司时，对话一般是这样的：&lt;/p&gt;&lt;p&gt;「我是瑞友的」&lt;br&gt;「你不是用友的吗？」&lt;br&gt;「哦，瑞友和用友的关系是这样的……」二十分钟过去了&lt;br&gt;「你是在用友软件园办公吧？」&lt;br&gt;「是的」&lt;br&gt;「那就是用友的，下面我来介绍这位用友的朋友……」&lt;/p&gt;&lt;p&gt;所以我现在一般都这么介绍自己，我是 MacTalk 的！对方一听名称如此高端大气，随即频频点头，然后若有所思，然后就没有然后了，避免了很多不必要的麻烦。&lt;/p&gt;&lt;p&gt;既然被自媒体了，那我就闲话一下自己的观点。&lt;/p&gt;&lt;p&gt;我觉得媒体和自媒体的区别主要是在一个「自」上，一定是个人品牌，自主创作（主要），个人维护（可选），不管形式是什么，微信也好，微博也罢，核心是个人表达。这些人时而朝九晚五，时而没日没夜，在立足本职工作的同时，不停的产出高质量的原创内容（低质量的不是没有，而是会被淘汰掉），他们要么是泥瓦匠，要么是程序猿，除了写作，身外还有一技之长，他们真正做到了从群众中来到群众中去，坚持三心二意的为读者服务，最终赢得了某个领域内广大人民群众的喜闻乐见。&lt;/p&gt;&lt;p&gt;于是这帮写字的人终于有了一小片自留地，可以在有限范围内自说自话，说完了还有人听，有人反馈，于是就有了些许媒体性质，史称自媒体。&lt;/p&gt;&lt;p&gt;传统媒体和网络媒体开了个微信平台，那不叫自媒体，仅仅是媒体平台的延伸，一个阅读入口而已。&lt;/p&gt;&lt;p&gt;东拼西凑的内容也不是自媒体，没原创始终是内伤。笑话精选倒是读者多，但是您要想开个笑话精选读者见面会，估计效果和石头扔到一口旱井里差不多，哪个读者想让人知道自己是笑话精选的粉丝呢？&lt;/p&gt;&lt;p&gt;搞清楚自媒体的特点之后，再说说自媒体的盈利模式。这个问题如果提给互联网创业公司就拽了，因为他们的回答往往是，「对不起，我们现阶段不考虑盈利和盈利模式！」回答者高端大气到牛逼二五，提问者黯然销魂到内伤吐血，尤其是对我们这种不盈利毋宁死的普通人，只有默默垂泪的份儿！&lt;/p&gt;&lt;p&gt;互联网创业公司不考虑盈利模式主要是有投资热钱撑着，并不是这些创业者白天喝西北风，夜里睡东南枝。而对于自媒体来说，就没这么好的运气了，拿到投资的自媒体人少之又少。所以，除了革命乐观主义精神和为人民写作之类的强大精神支柱之外，自媒体人也在偷偷摸摸考虑盈利模式的事，当然这些人是考虑不清楚的，门儿清的还是那些互联网分析师和精英媒体，他们不仅担心 IBM 不转型就要倒闭的大趋势，自媒体这仨瓜俩枣也得提上议事日程，你说他们到底操了多大的心？&lt;/p&gt;&lt;p&gt;如果问我自媒体怎么挣钱，我脚着，目前这就不是个挣钱的事儿。虽然通过捐助、集结出书、广告、会员等模式可以有些收入，但是能够由此解决生计问题的人凤毛麟角，大部分人还是得用其他手段解决喝西北风的问题。&lt;/p&gt;&lt;p&gt;如果问我自媒体未来的趋势，我是不知道的，咱卖白菜的就别操那份卖白粉的心了，不是说但行好事，莫问前程么？就我个人而言，喜欢写作和正向反馈这两点，已经够我坚持一阵子了。&lt;/p&gt;</description><pubDate>2013-12-17T16:27:01+08:00</pubDate></item><item><title>程序员的敌人</title><link>http://zhuanlan.zhihu.com/p/19623308</link><description>&lt;p&gt;今天北京的天气简直好到爆，一整天下来，PM2.5的值就没超过25，俗话说好女不过百，好天不过25，就是这个理儿。吃完晚饭，出去溜了一圈，天高云淡，月朗星稀，空气中弥漫着初冬的寒意，远处的灯光闪闪烁烁，透过清亮的空气，似乎可以看到一丝丝的光线发散出来，感觉真好。北京现在没什么土，也没什么沙，估计很多年前的沙尘暴是难得一见了，所以我希望，这个冬天，让大风来的更猛烈些……&lt;/p&gt;&lt;p&gt;MacTalk 的读者中一定有不少程序员，今天的提问环节是：程序员的敌人是谁？&lt;/p&gt;&lt;p&gt;好吧，举手比较踊跃，看来平时被虐的不轻啊，这位同学：&lt;br&gt;「Mac 君，我觉得是项目经理，我看丫那个得瑟劲儿就想抽……」&lt;br&gt;「坐下吧，一会走的时候把怀里的板砖留下。觉得是产品经理的也可以歇歇了」&lt;/p&gt;&lt;p&gt;「Mac 君，我脚着吧，这事和人无关，应该是 bug 搞的鬼，上线时节 bug 纷纷，长使英雄泪满襟！」&lt;br&gt;「这个答案虽然有了点人文关怀，不过 bug 不都程序员写出来的吗，你不管谁管？」&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;插播：江湖传言，软件的不幸在于它创造出来的麻烦多过于它解决的麻烦。真实的情况是，软件只解决了一部分它创造出来的麻烦……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;现在公布答案，程序员的敌人就是，当当当当，「需求」！&lt;/p&gt;&lt;p&gt;多少英雄汉，在程序世界里纵横四海独孤求败，结果被真实的需求碰球的鼻青脸肿头破血流黯然解甲，转售前的转售前，变甲方的变甲方，最可恨的是这些变成甲方的程序员，成了甲方之后开始用「需求」折麽其他的程序员，比甲方还甲方！原本同根生，相煎何太急！真特么像那只没抢到香蕉的猴子啊。&lt;/p&gt;&lt;p&gt;无数软件工程宝典、创业圣经和成功经验，都告诉我们，要想成功，挥刀自宫！哦，不对，要想成功，一定要满足用户的需求，做客户真正需要的东西。可是，你知道我们程序员想做到这一点有多难么？&lt;/p&gt;&lt;p&gt;首先，需求就分为了用户想要的（Want）和用户需要的（Need），其次，需求又分为企业用户需求和个人用户需求，第三，没有第三了。前两条就够我们程序员忙活一生了。&lt;/p&gt;&lt;p&gt;先说说 Want 和 Need，能够从 Want 直接转化成 Need 的需求简直凤毛麟角，你要遇到了就是你上辈子修来的福分，不当程序员天理不容。大部分情况下，Want 都是用户的谎言，他们不停的重复这些谎言，直到自己信以为真，然后告诉你，「兄弟，这就是哥的 Need，大胆的做吧，哥哥在岸上等着你」。等你费劲扒拉把这个 A 做出来之后，客户拿在手中把玩一番之后，会满脸歉意的告诉你，「不好意思啊，兄弟，我要的是 B，你给我做出个 A 来干什么？」。你呕血三升之后，客户终于把 B 描述出来了，告诉你，做，这次一定不会错！但是你永远不知道后面还有 C、D、E、F、G……在等着……&lt;/p&gt;&lt;p&gt;这是从外部客户角度，还有苦逼的内部角度。比如微软的演讲奇才狮吼功大师鲍尔默，他老先生在Surface发布时宣称&lt;br&gt;「……但购买这几款平板电脑（iPad、Kindle 等）的用户有可能犯了一个错误，这并不是他们想要的产品。」&lt;br&gt;「我不认为能有人像我这样意识到用户真正想要的是什么产品。你可以看看周围人们在用的那些平板电脑产品，没有一个是你真正能用的。苹果不行，谷歌不行，亚马逊也不行。没有一件产品可以既可以工作用又可以娱乐用……」&lt;br&gt;「Surface 才是用户真正需要的产品……」&lt;/p&gt;&lt;p&gt;不知道说这些话的时候老先生在用哪个脚趾头思考，我特么怎么不知道范了那么多错误？Surface的销量给了老鲍一记响亮的耳光，老鲍不干了。可怜那些研发Surface的程序员……&lt;/p&gt;&lt;p&gt;对于企业客户而言，几乎任何时候都存在 Want 和 Need 不对等的情况，我现在唯一能想到的应对之法就是「贴身服务」。再也不要打个包一百万让我们做 ABCDEFG 了，骗鬼呢？！单人单月报价，我们提供人员、技术、平台、工具、项目管理，您说吧，想做锤子还是锤子手机？按月付费，我陪您玩到天荒地老……&lt;/p&gt;&lt;p&gt;对于个人用户而言，如果你真的做对了，满足了用户的真正需求，可能有三种情况：&lt;br&gt;1、你是自己产品的真正用户&lt;br&gt;2、你运气不错&lt;br&gt;3、你是乔布斯&lt;/p&gt;&lt;p&gt;还有一点就是，为个人用户做产品不要让他们有太多选择，这些人不是程序员，不需要知道配置信息可以保存在 xml、注解、properties、json 中，这么多选项会让大家一起疯掉，给一个按钮就好了，就像 iPhone 那样。&lt;/p&gt;&lt;p&gt;Android 系统给了用户无限可能，但也被用户和开发者骂的狗血喷头。iOS 给了用户一堆限制和一个按钮，而且不能用 Flash，结果一个月以后，用户说：哦，原来我真的不需要 Flash！&lt;/p&gt;&lt;p&gt;「需求」如此残酷，值得为之奋斗！希望所有的程序员都能够做出真正满足客户需求的程序，十年后，我们的代码依然奔跑在千万台机器中，无数双手，在代码前挥舞……&lt;/p&gt;</description><pubDate>2013-11-25T22:05:21+08:00</pubDate></item><item><title>去公司上班还是独自在家？</title><link>http://zhuanlan.zhihu.com/p/19605118</link><description>&lt;p&gt;很久以前听过这样一段经典对话「为了能正常发送，我把主人公换成 A（一核） 和 B（二核）」：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;某日，A 和 B 散步 &lt;br&gt;B 问：租吸，四接桑最同库地丝洒子思青哩？ &lt;br&gt;A 说：桑板！ &lt;br&gt;B 又问：有更同库地拉？ &lt;br&gt;A 沉吟半晌深吸一口烟说：田田桑板 &lt;br&gt;B 继续问：有崽同库地吗？ &lt;br&gt;A 二目一瞪把烟袋一摔说：甲板 &lt;br&gt;B 还问：那崽崽同库滴哩？ &lt;br&gt;A 急说：白甲板&lt;/p&gt;&lt;p&gt;用四川话朗读是必须的&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;这段话说的是上班和加班。很多年过去了，吐槽声依旧声声入耳，可见上班多不招人待见。不过理性思考一下，人类作为个体存在的终极目标，肯定不是吃喝玩乐，而是寻找自我和认知世界。虽然认知上的恐慌和孤独感将伴随我们一生，但这并不妨碍我们在踏进一扇门之后，再去探求另一扇窗的奥秘，而这些都需要在学习和工作中才能达成。&lt;/p&gt;&lt;p&gt;但是工作不等于上班，在家工作也是工作，我们今天就说说独自在家工作的事儿。&lt;/p&gt;&lt;h4&gt;不为自由故&lt;/h4&gt;&lt;p&gt;在家办公的好处不说了，谁办谁知道，说说误区。&lt;/p&gt;&lt;p&gt;很多独自在家工作的小伙伴在分享心得的时候，总会提到自由，我觉得很多人没搞清楚自由的概念，亦或是被伪自由骗了。真正的自由是没有规划和边界的，比如早晨起来想喝几碗豆浆喝几碗，想加几勺白糖加几勺。兴之所至就去大觉寺喝个茶，忧伤了就去圆明园看残雪。出国旅行不会订好行程和回来的机票，爱玩多久玩多久。你是光你是电，你是自己的神话，这特么叫自由。&lt;/p&gt;&lt;p&gt;在家工作完全不是这回事，甭管你早晨几点起床，无论生活是否从中午开始，满满一天的工作都在等着你，你的工作时间甚至会超过八小时，你需要把时间掰开了揉碎了用，自控能力弱刷了微博看了电视的，还得熬夜把时间找补回来。同时困扰你的还有无法排解的孤独感以及未来不确定性引发的恐慌。当然，你可以有不工作的自由，但是一想到下个月是喝风还是吃霜，你再次变得忧伤起来……&lt;/p&gt;&lt;p&gt;我所了解的一些优秀的自由职业者，没有一个是为了「自由」独自工作的，大部分原因是他们觉得自己适合独立工作，而不是依附于一个固定的实体公司，这些人大都具备一些这样的特性：&lt;/p&gt;&lt;p&gt;1、在某些方面能力突出，比如编程、演讲、咨询等&lt;br&gt;2、自控能力强，对自己的未来有清晰的认知&lt;br&gt;3、耐得住寂寞&lt;br&gt;4、除了工作，还有一个或多个固定的爱好，比如打球、骑行、旅行、弹琴等&lt;br&gt;5、坐的住，也走的出，有固定的社交圈&lt;/p&gt;&lt;p&gt;不要仅仅为所谓的「自由」选择独自在家工作——自由的代价是孤独，而张楚说了，孤独的人是可耻的。&lt;/p&gt;&lt;h4&gt;重要的是资源&lt;/h4&gt;&lt;p&gt;无论是去公司上班，还是独立工作，有两点很重要，第一能不能掌控足够的资源，第二能否用这些资源去做自己想做的事情。利用团队的资源做自己想做的事情，然后为团队和个人带来财富和其他附加值，这就够了。至于是打工、创业还是自由职业者，这些都是形式，并不重要。&lt;/p&gt;&lt;h4&gt;在家办公的选择&lt;/h4&gt;&lt;p&gt;看了上面的内容，如果你还是选择在家工作，那我就成全你，但这不意味着你第二天早上可以把工卡甩到老板脸上说哥特么不干了。注意素质，同学，先控制一下野马般的思路，看看工作方式再甩也完全来得及。&lt;/p&gt;&lt;p&gt;1、申请在家办公。现在知道冲动是魔鬼了吧，你还可以申请在家办公？当然可以，只不过风险是现任老板把他的工卡甩到你的脸上而已。但值得尝试，有公司已经开始提倡每周有一天或几天在家办公了。（嘿嘿，俺也觉得这种方式是最合理的）&lt;br&gt;2、加入一家可以在家办公的公司（好吧……）&lt;br&gt;3、创办一家可以在家办公的公司（Mac 君你在耍大刀么？非也，以彼之道还施彼身嘛）&lt;br&gt;4、独立开发者、培训师、咨询师，可以独立承接项目，也可以挂靠到多个机构，收益分成（你好我好大家好）&lt;/p&gt;&lt;p&gt;我想到的大致有这些工作模式，前两种更容易把控，风险也小得多，后两种则隐隐透出一种「不作死就不会死」的迷人气质，吸引了更多有志青年前仆后继。&lt;/p&gt;&lt;p&gt;你的选择是什么，如果可以的话，回复微信告诉我。&lt;/p&gt;&lt;h4&gt;社交很重要&lt;/h4&gt;&lt;p&gt;人是一种社交动物，孤独不仅可耻，而且可能发霉，即使你在家办公，也别成为宅男剩女，所谓宅男费……唔，这个扯远了，总之要留出固定的时间用来参加社交活动，或参与，或组织，不仅能够补养心灵，陶冶情操，还能带来业务和业务伙伴，实在是自由职业者的必备活动。&lt;/p&gt;&lt;p&gt;最后一句，无论是上班打工还是独自在家，做最适合自己的就好。&lt;/p&gt;&lt;p&gt;******&lt;/p&gt;&lt;p&gt;补续：&lt;/p&gt;&lt;p&gt;昨天的文章收到了不少回复，没想到很多读者正处于独自在家工作的状态，他们遇到的问题有这么几个：&lt;br&gt;1、无法克服的孤独感&lt;br&gt;2、对未来的不确定性，认知而无实践&lt;br&gt;3、缺乏有效沟通和讨论&lt;/p&gt;&lt;p&gt;问题很多无法一一回复，统一谈谈我的看法。&lt;/p&gt;&lt;p&gt;关于自由和孤独二者密不可分的道理，我很早就认识到了。一辈子单身一定比拖家带口多了更多自由，离职、旅行、移民这些决定说做就做，说走就走，有了牵挂就不可能这么决绝。同样的道理，丁克家庭比三口之家自由。选择了这样的生活，必然会损失其他一些东西，比如多了孤独，少了白头偕老，多了自由，少了天伦之乐等等。&lt;/p&gt;&lt;p&gt;独自在家工作的人，有了更自由的时间和环境，随之而来的孤独感是你必然要承受的。能坚持下去的人一定是很享受这种孤独感的，我认识不少这样的人，「别人看他很孤单，他笑别人看不穿」。如果确实无法忍受，也不必勉强，改变环境与他人一起工作就好了，记住那时候不要去抱怨世界的嘈杂和束缚。&lt;/p&gt;&lt;p&gt;人类认知自身的能力是很弱的，能够做到既不妄自菲薄，也不妄自尊大太难了，所以能够看到确定未来的人都是天才，咱看不到实属正常，解决的办法就是踏踏实实把自己手里的事情做好做透，然后去了解更高的山，更广的河，见大海，见天地，见众生。能够学以致用最好，不能也是寻常之事，至少你已经多了解了世界一点点。具体到技术，学习的过程中一定要做实际的应用，有成果，见效快，如果还能卖钱，那最好不过。想提升自己的技术，发起或参加感兴趣的开源项目也是个不错的方式。&lt;/p&gt;&lt;p&gt;至于面对面的交流，我想永远无法被社区、SNS、IM 取代，普通的一个 Code Review 或功能评审，往往可能碰撞出你完全想不到的火花，所以不要放弃社交的机会，多参加社区活动，去其他公司做兼职，公开演讲，聚会，运动，这些都是与他人交流的机会，形成定期的习惯更好。&lt;/p&gt;&lt;p&gt;另外，参加网上社区的讨论、写博客、微信、微博都是很好的交流和沟通工具，刻意练习自己的交流能力永远比随波逐流有效。&lt;/p&gt;&lt;p&gt;最后给大家推荐几个 Job Board：&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=https%3A//jobs.github.com/" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;https://&lt;/span&gt;&lt;span class="visible"&gt;jobs.github.com/&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//careers.stackoverflow.com/jobs" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;Job Listings&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//jobs.37signals.com/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;Tech Jobs: Design, Programming, Rails, Executive, and more.&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;另外，37signals 最近出了一本远程办公的书，叫做《Remote: Office Not Required》，&lt;a href="https://link.zhihu.com/?target=http%3A//37signals.com/remote/" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;37signals.com/remote/&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; ，感兴趣的童靴可以留意一下。 &lt;br&gt;如果你不了解37signals，那总该听过《Rework》（中文名重来）这本书，也是他们写的。&lt;/p&gt;</description><pubDate>2013-11-01T10:02:56+08:00</pubDate></item><item><title>Just For Fun——开心航母行</title><link>http://zhuanlan.zhihu.com/p/19599860</link><description>&lt;p&gt;进入2013年之后，我们的团队一直想策划一个活动，这种活动洋名叫做 Team Building，在团队里，除了写代码，这种活动最为喜闻乐见。春天的时候，我们想去野三坡踏青，然后玉兰花就败了，夏天的时候我们想去百花山避暑，然后大觉寺的茶就凉袅，等到秋天的海棠红了之后，所有的小伙伴都忍不住拍案而起，发出了愤怒的吼声：「特么的到底 TB 不 TB 了」。在这里我要提醒各位技术管理者，当你的小伙伴们的耐心和愤怒到达一个临界点的时候，他们的任何要求都是要满足滴！&lt;/p&gt;&lt;p&gt;所以，我决定这次让他们见见「大」场面，周末杀向塘沽看航母吃海鲜买洋货，另外，由于上周五帝都阴霾密布，PM2.5近300，而塘沽在100以内，我把这次活动叫做逃离 PM2.5，后来很多程序员纷纷表达了对项目经理（PM）的憎恶之情，于是活动名称正式命名为「逃离项目经理250行动」！&lt;/p&gt;&lt;p&gt;插播：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;关于程序员对项目经理的愤怒，大家可以参考这篇：&lt;a href="https://link.zhihu.com/?target=http%3A//www.aqee.net/dear-project-manager-i-hate-you/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;亲爱的项目经理，我恨你&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;摘录一段大家嗨皮一下：你是一个多么独特的角色呀，几乎每个公司都要雇用你这样的人。可在不管大大小小的项目中，你与其说是帮忙，不如说是添乱。我坚信，大部分的项目经理都可以用一个技术首领来替代，我是严肃的，难道一群聪明的人真的需要另外一个人来替他们“管理”项目吗？&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;插播完毕，各位项目经理感受一下。&lt;/p&gt;&lt;p&gt;长话短说，第二天（周六）早晨爬起来一看，昨夜漫天的雾霭不知被谁施什么魔法，散了个一干二净，帝都PM2.5在50左右。「md 北京都这样了，塘沽得好成什么样啊」，我想。&lt;/p&gt;&lt;p&gt;7点钟，我准时抵达集合地点，接了同车伙伴。这时，各小队纷纷来电：「B 小队清河 in position」「C 小队回龙观 in position」「……」，我清点了一下人数，差不多了，出发！转身上车，打火启动，轻点油门，车发出了我熟知那种轻微的轰鸣声，赞……这时又一个电话打了进来：我擦，B 小队沦陷了，与一辆大车发生刮蹭，并且事故双方都认为对方全责！杯了个具，看样子是要闹到交通队去了。&lt;/p&gt;&lt;p&gt;有的小伙伴说，老大我们走吧，有的小伙伴说，老大我们撤吧，我陷入了痛苦的思考中，本着不抛弃任何一个战友的做法，我依然决定，我们先走袅！B 小队留下解决完问题后再追赶大部队。&lt;/p&gt;&lt;p&gt;再一次，我们出发了，清晨的帝都安静而通畅。太阳刚刚爬起来，还未露出山脊，一片片微光透过山峰在天边的云层上跳跃，一点一点，煞是好看。我们行驶在不堵的北京，感觉非常不适应，总觉得不堵不足以平民愤。一路顺利出了北京，往东南绝尘而去。&lt;/p&gt;&lt;p&gt;路上不再细表，只是越开觉得雾越大，副驾的小伙伴对我说，「老大，雾越来越大袅」，我看了看「伸手只见五指」的状态，心想，这特么哪是逃离啊，干脆改为「追逐项目经理250」得了。虽然遭遇大雾和细雨，虽然导航软件对我们起到了有效的误导作用，各小分队还是顺利抵达滨海航母主题公园，换票入场。&lt;/p&gt;&lt;p&gt;虽然之前在电视上见过辽宁号航母，但是实地看到真家伙还是让大家吃了一惊，大就一个字，我说了很多次！&lt;/p&gt;&lt;p&gt;全长273米的基辅号航空母舰像一个巨大的海上城堡静静的停在水面上，不怒自威。基辅号是前苏联「基辅」级航母的首制舰，建造于1970年，1975年建成服役，1994年退役，曾经是令世界瞩目的海上「巨无霸」。服役期间曾出访印度、朝鲜和阿尔及利亚等国，被喻为「水晶理想」、「国家名片」。基辅号作为前苏联北方舰队的旗舰，一度是前苏联海军的象征。航母舷号为075（如题图所示），全长273.1米，宽52.8米，全高61米，船体以甲板为界，舰岛上8层，甲板以下9层，全舰共17层。标准排水量32000吨，满载排水量40500吨，续航力13000海里，最大航速32节，舰载官兵1400名，舰载飞机33架，其中Ka-27/Ka-25反潜直升机19架，Yak-38短距离垂直起降战斗机12架，另有一架教练机和预警机。&lt;/p&gt;&lt;p&gt;基辅号航母集航空母舰、巡洋舰于一身，其威胁力相当于一支特混舰队，体现了苏联航空母舰的独特风格。由于苏联解体，俄罗斯国内形势恶化，俄海军无力负担航母的维护使用费用。1994年基辅号航母正式退役了。2000 年，天津国际游乐港购得退役的基辅号。 2003 年 9 月，基辅号落位于天津汉沽区八卦滩，永远停靠在国际游乐港的平静港湾。（以上部分内容摘自互动百科）&lt;/p&gt;&lt;p&gt;等我们踏踏实实登上航母的甲板，才真正觉得航母真特么大，长长的跑道上停着一排排的飞机，整个甲板感觉有几个足球场那么大，各种武器设备和机种还原的非常真实，从甲板上轨道隐隐能够感受冷战时期战争机器的轰鸣声，让人产生一种时空错乱的迷失感。在甲板上参观的时候，大家还在一架战斗机前摆了个航母 Style，傻是傻点，不过很开心！&lt;/p&gt;&lt;p&gt;甲板上疯够了，大伙又钻进了舰仓内部，感受一下航母官兵的生活。（上篇完）&lt;/p&gt;&lt;p&gt;***&lt;/p&gt;&lt;p&gt;木想到昨天的 Just for fun居然好评一片，看来大家生活压力还是蛮大的，能为大家写点轻松的文字，也算功德。&lt;/p&gt;&lt;p&gt;关于 Just For Fun，其实取自Linus Torvalds的自传《Just For Fun》，Linus 不仅创造了伟大的 Linux 操作系统，现在誉满天下的 Git 也是他的作品，此人实在是计算机领域不世出的天才。Linus 在该书的前言里与书的共同作者 David 探讨生命的意义，他是这么开场的：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;我对生命的意义有种理论，所以我们可以在第一章里对人们解释生命的意义何在，这样就能吸引住他们。一旦他们被吸引，并且付钱买了书，剩下的章节里我们就可以胡扯了。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;知道了吧，技术牛人写书这么扯的。关于生命的意义，他写道：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;有三件事具有生命的意义，它们是生活中所有事情的原始动机，包括你所做的和该做的所有事情。第一是生存，第二是社会秩序，第三是娱乐。生活中所有的事情都是按这个顺序发展的。娱乐之后便一无所有。因此从某种意义上意味着生活的意义就是要达到第三个阶段。你一旦达到了第三个阶段，你就算成功了。但首先要越过前两个阶段。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;之所以引述 Linus 的话，就是想告诉大家，娱乐很重要，有时候一些文字真相就是娱乐，与财富无关，与认知无关，与道无关，Just For Fun，等大家读完莞尔一笑，我就可以合上 MacBook 搓搓手，事了拂衣去，深藏功与名。&lt;/p&gt;&lt;p&gt;写到娱乐我又想起一件事，我有个朋友，卖了北京的房子移民澳洲，在澳洲买了个大House，但是他在国内是做管理和销售的，到了澳洲找不到工作（搞管理的感受一下…），每天只能钓鱼烧烤，还好他有两个娃，政府补助也够生活。有次回国我问他，「你现在移民了，大 House 也有了，每天烧烤钓鱼还不工作，你幸福吗？」他默默的抬头看了我一眼，「唉，我现在闻见烧烤的味道就想吐……这种生活…真特么的爽啊，我再也不愿意打工啦！」&lt;/p&gt;&lt;p&gt;内心在滴血有木有！&lt;/p&gt;&lt;p&gt;开篇完毕，我们接着说团建吧（请注意不是团灭好吧）。上文书说到从甲板来到船舱，据史料记载，全舰共17层，舰舱下层似乎没开放，我们只是在上面的几层转了转，要说大开眼界那是针对军迷的，对于我这样的军盲，看到鱼雷、导弹、驾驶舱和飞机升降台，喉咙只能发出嗬嗬的声响，或者说一些「哇，好大」之类容易引起歧义的词汇，用才尽词穷来描述我当时的状态较为合适。幸好时不时会碰到导游和图文介绍，多少算是让小盆友涨了些见识。&lt;/p&gt;&lt;p&gt;当我在滨海新区的大雾中漫步的时候，突然想起了 B 小队，于是一个电话打过去，得知 B 小队在成功处理了事故方的恐吓、交警的偏袒和120接线员录音突然失踪等各种狗血事故之后，已经重新出发，从西北一路狂奔而来。我挂了电话之后暗暗想到，「兄弟们你们真不容易」。&lt;/p&gt;&lt;p&gt;航母主题公园里除了可以参观航母，还有俄罗斯歌舞表演和航母风暴（模拟海上实战演习）。俄罗斯歌舞中男子健硕，女子柔美，八块腹肌和笔直的长腿都让大家大开眼界（这位伙伴请把口水擦一下，我们说的是眼界好么）。航母风暴则恰恰相反，男子粗放，女子狂暴，除了双人打斗、群殴、水里殴、从几十米高的船舷上被人一脚掀翻落水、摩托艇表演等等，还有相当逼真的烟火爆炸表演，看起来非常过瘾。&lt;/p&gt;&lt;p&gt;通过对比大家观看的认真程度，口水多少，尖叫音量，我脚着，男伙伴比较喜欢歌舞表演，女伙伴更钟意航母风暴。总之，如果有读者来航母公园，这两个节目绝对不可错过。&lt;/p&gt;&lt;p&gt;这时候我们有必要再次汇报一下 B 小队的情况了，这个艰苦的小队从首次出发开始，经过刮蹭事件、扯皮事件和交通队事件后，盘山涉水，左冲右突，耗时5小时，于正午12时抵达航母，并成功的赶上了航母风暴节目。当他们光荣抵达目的地的时候，所有团队成员都在湿漉漉的大雾中挑起了大拇指，赞！&lt;/p&gt;&lt;p&gt;除了 B 小队，其他人基本上完成了航母观光，但是我们总不能在 B 小队看完热热闹闹的航母风暴后直接启程去吃大螃蟹，这是不人道的，对团队建设是不利的。于是，为了给 B 小队安排航母观光的时间，我让 C 小队先行一步，直奔周记海鲜城点餐，把餐先点了，其他小队可以四处逛逛。&lt;/p&gt;&lt;p&gt;等 B 小队也船上船下看完航母之后，大家迫不及待驱车直奔海鲜城，脑海里幻想着一桌大螃蟹和其他海鲜正洗干净了热腾腾的等着我们，口水再次流了下来。等我们到了海鲜城之后发现两位点餐女将正在海鲜旁边转悠，那些海鲜们也悠闲的或游来游去或踱来踱去，热乎的海鲜毛都没见一根。我们愤怒的声讨：「什么情况？」两位女将说，「老大这海鲜可不便宜啊，螃蟹100多一斤，咱点多少啊？」这话说的我眼泪都下来了，咱驱车几百里难道还吃不起螃蟹么？当然我没忘了把手伸包里摸了一把，荷包硬硬的还在。这个动作给了我信心，我说了四个字「海鲜管饱！」&lt;/p&gt;&lt;p&gt;终于，大家用一顿丰盛的午餐驱散了半天的疲惫，期间也充分体现了个顶个都是吃货的风采，小虾大蟹清扫一空，吃完后抹着嘴打着海鲜嗝去逛旁边的洋货市场了。&lt;/p&gt;&lt;p&gt;终于到了分别的时候，一部分人直接回京，我带着几个小伙伴去天津落脚，大家洒泪而别，然而故事并没有结束……&lt;/p&gt;&lt;p&gt;按道理天津是我很熟悉的地方，因为亲人住在这个城市，每年都要来几回，但是由于天津独特的如迷宫如蜘网的道路设计，每次不用导航我就像盲人在繁华的街道行走，永远不知道哪里是终点。即使有了导航，也是一头雾水，因为在天津似乎永远没有左转或右转，往往是偏左一点点，或右侧行走别上桥下隧道等等。终于我们在一次左侧行驶的提示下把车小心翼翼的停在 X 字路口，因为左侧有两条路，远远的望过去车轮带起滚滚红尘，根本看不清道路延伸的轨迹，也就无从根据导航的指示判断行走方向，这时候看到一辆津牌子的车也慢慢停下来，我心里想，天津人民就是热情，这是看我们迷路了来指点迷津的呀！打开车门问询，回复是「我们也找呢」，原来天津人民也在天津迷路了。&lt;/p&gt;&lt;p&gt;这时候我就无比怀念北京城，任何时候找不到路了，就朝着一个方向开，指定能碰见一条环路，见到环路，就算见到亲人了。帝都，一个永远不会迷路的城市。&lt;/p&gt;&lt;p&gt;等我到了目的地，吃完晚饭哼着小曲，给各位小伙伴发去问候短信，「家中热水温度还好吧」，回复是「距离北京还有60公里！」&lt;/p&gt;&lt;p&gt;小伙伴们在高速上迷路了……&lt;/p&gt;&lt;p&gt;这真是愉快的一天！（下篇完）&lt;/p&gt;</description><pubDate>2013-10-22T22:54:26+08:00</pubDate></item><item><title>博客时代和 RSS 资源共享</title><link>http://zhuanlan.zhihu.com/p/19597252</link><description>&lt;blockquote&gt;&lt;p&gt;昨天和几位十几年前一起打拼的小伙伴聚了聚，见面以后发现胖的胖光的光，执手相看泪眼，近视的近视老花的老花。在喝茅台品红酒吃辣子的同时，一边讨论国计民生，一边手拉手膝促膝一起回顾那青春燃烧的岁月……一直烧到了晚上10点多，小火苗才熄灭，到家后11点多了，于是就木有推送了……&lt;/p&gt;&lt;p&gt;记忆这东西真的很奇妙，岁月把你过去的时光压缩成碎片，并为之蒙上了一层薄薄的尘埃，当你匆匆前行的时候，是不会注意到这些碎片的。一旦疲累了想回头看看，你轻轻抹去这些灰尘，碎片就会复原并重现鲜活的过去，你会发现，青春岁月和飞扬的理想，一直都在那里……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;在博客横行的年代，多少人在自己的签名档上增加了 Blogger 标签，此签一出，不管写的内容是什么，顿现高大上，低奢涵。十年倏忽而过，愿意为自己贴上 Blogger 标签的已经寥寥无几。&lt;/p&gt;&lt;p&gt;为何写作难以坚持？因为人在写作的时候都是孤独的，这一点和编程不同，很少有文章或文学作品是多人协作完成的。文章其实就是个人的独白，是个人向世界发出的讯息。这种孤独感将一直伴随写作的过程，能够一直忍受这种孤独感的少之又少，而且，写作和编程的另一个不同点是，你尝尝会感到江郎才尽，只要你窥得了一点文字的奥秘，你就不能忍受自己千篇一律的重复自己，软件讲究组件复用，而文字几乎是不可复用的。到了那个时候，坚持写下去的唯一动力就是你的作品还有人看，你的作品在与读者交流！&lt;/p&gt;&lt;p&gt;所以回头看看，当年那些「热乎乎的博客」就像闪电划过长空，汽笛融入朔风，突然间一切就了无踪迹，而真正沉淀下来的，还是那些原来的泥土、岩石、沙砾、树木和青草。&lt;/p&gt;&lt;p&gt;时至今日，大部分人都去刷微博和写 Tweet 了，但这些沉淀下来的作者，他们依然用不同的方式看待世界，逆潮流反向行走，坚持写作和阅读，持续的分享技术和人文世界里的点点滴滴。不同的是，一些人坚守在博客世界里，一些人转战微信公众平台；相同的是，这些人一直在写！正因为有这些人，Google宣布关闭世界最大的RSS 聚合平台 Google Reader，才让那么多阅读爱好者扼腕叹息。几个月过去了，大家为自己喜欢的那些博客地址分别找到了新的落脚点，写作和阅读继续进行……&lt;/p&gt;&lt;p&gt;我是个 GR 的重度用户，阅读订阅的博客是日常工作之一，GR 关掉之后，我把RSS 迁移到了&lt;a href="https://link.zhihu.com/?target=http%3A//cloud.feedly.com" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;cloud.feedly.com&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;，所有的内容都完整的保留下来，Mac、iOS 平台的阅读工具也在进行很好的过渡和完善，这一切都让写作和阅读这件事重新变得美好起来。&lt;/p&gt;&lt;p&gt;很多读者和网友多次让我共享一下自己的 RSS 资源，于是整理了一下，在这篇文章里贴出来。好的博客当然很多，更多的是我没有发现的，如果你有更好的 RSS 推荐，发给我，我整理后再共享给所有人。&lt;/p&gt;&lt;p&gt;以下资源分了三类：技术与人文、技术、媒体，博客的更新频率有快有慢，大家可以根据需要选择阅读。&lt;/p&gt;&lt;p&gt;资源格式：名称/RSS&lt;/p&gt;&lt;h4&gt;技术与人文&lt;/h4&gt;&lt;p&gt;名称： 外刊IT评论&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feed.feedsky.com/aqee-net" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feed.feedsky.com/aqee-n&lt;/span&gt;&lt;span class="invisible"&gt;et&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 用文字打败时间&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.fengtang.com/blog/%3Ffeed%3Drss2" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://www.&lt;/span&gt;&lt;span class="visible"&gt;fengtang.com/blog/?&lt;/span&gt;&lt;span class="invisible"&gt;feed=rss2&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 学而时嘻之&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.geekonomics10000.com/feed" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://www.&lt;/span&gt;&lt;span class="visible"&gt;geekonomics10000.com/fe&lt;/span&gt;&lt;span class="invisible"&gt;ed&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： &lt;a href="https://link.zhihu.com/?target=http%3A//Apple4.us" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;Apple4.us&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//apple4.us/feed" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;apple4.us/feed&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： demo@virushuo&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feeds2.feedburner.com/virushuo" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feeds2.feedburner.com/v&lt;/span&gt;&lt;span class="invisible"&gt;irushuo&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 乱象，印迹&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feeds.feedburner.com/yurii" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feeds.feedburner.com/yu&lt;/span&gt;&lt;span class="invisible"&gt;rii&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 褪墨&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.mifengtd.cn/feed" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://www.&lt;/span&gt;&lt;span class="visible"&gt;mifengtd.cn/feed&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： Reborn&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.lixiaolai.com/feed" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://www.&lt;/span&gt;&lt;span class="visible"&gt;lixiaolai.com/feed&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 战隼的学习探索&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feed.read.org.cn/" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feed.read.org.cn/&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 李笑来的博客&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//lixiaolai.com/posts.rss" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;lixiaolai.com/posts.rss&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： DBA Notes&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feeds.feedburner.com/webarch" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feeds.feedburner.com/we&lt;/span&gt;&lt;span class="invisible"&gt;barch&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 酷壳 - &lt;a href="https://link.zhihu.com/?target=http%3A//CoolShell.cn" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;CoolShell.cn&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//coolshell.cn/feed" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;coolshell.cn/feed&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 阮一峰的网络日志&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.ruanyifeng.com/blog/atom.xml" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://www.&lt;/span&gt;&lt;span class="visible"&gt;ruanyifeng.com/blog/ato&lt;/span&gt;&lt;span class="invisible"&gt;m.xml&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： MacTalk-池建强的随想录&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/%3Ffeed%3Drss2" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;macshuo.com/?&lt;/span&gt;&lt;span class="invisible"&gt;feed=rss2&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;技术&lt;/h4&gt;&lt;p&gt;名称： C++博客_罗朝辉&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feed.cnblogs.com/cppblog/kesalin" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feed.cnblogs.com/cppblo&lt;/span&gt;&lt;span class="invisible"&gt;g/kesalin&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： All Things Distributed&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.allthingsdistributed.com/atom.xml" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://www.&lt;/span&gt;&lt;span class="visible"&gt;allthingsdistributed.com&lt;/span&gt;&lt;span class="invisible"&gt;/atom.xml&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 4G spaces&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//blog.youxu.info/feed/" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;blog.youxu.info/feed/&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 心弦 | blog&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feed.feedsky.com/felixding" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feed.feedsky.com/felixd&lt;/span&gt;&lt;span class="invisible"&gt;ing&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： Tom Preston-Werner&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feeds.feedburner.com/tom-preston-werner" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feeds.feedburner.com/to&lt;/span&gt;&lt;span class="invisible"&gt;m-preston-werner&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： NSBlog&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.mikeash.com/pyblog/rss.py%3Fmode%3Dfulltext" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://www.&lt;/span&gt;&lt;span class="visible"&gt;mikeash.com/pyblog/rss.&lt;/span&gt;&lt;span class="invisible"&gt;py?mode=fulltext&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： Hello Database&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.hellodb.net/feed" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://www.&lt;/span&gt;&lt;span class="visible"&gt;hellodb.net/feed&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 火丁笔记&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//huoding.com/feed" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;huoding.com/feed&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： Erlang非业余研究&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//blog.yufeng.info/feed" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;blog.yufeng.info/feed&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： &lt;a href="https://link.zhihu.com/?target=http%3A//ciderstudios.com" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;ciderstudios.com&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//ciderstudios.com/%3Ffeed%3Drss2" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;ciderstudios.com/?&lt;/span&gt;&lt;span class="invisible"&gt;feed=rss2&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 老赵点滴 - 追求编程之美&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//blog.zhaojie.me/rss" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;blog.zhaojie.me/rss&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 蓝色时分&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//koven2049.iteye.com/rss" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;koven2049.iteye.com/rss&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： ECAE – Shopex电子商务云的梦想空间&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//blog.ec-ae.com/%3Ffeed%3Drss2" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;blog.ec-ae.com/?&lt;/span&gt;&lt;span class="invisible"&gt;feed=rss2&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： BlueDavy之技术Blog&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feed.feedsky.com/bluedavy" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feed.feedsky.com/blueda&lt;/span&gt;&lt;span class="invisible"&gt;vy&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： Tim[后端技术]&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//timyang.net/feed/" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;timyang.net/feed/&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 博客园_winter-cn&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feed.cnblogs.com/blog/u/37697/rss" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feed.cnblogs.com/blog/u&lt;/span&gt;&lt;span class="invisible"&gt;/37697/rss&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： Coding Horror&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feeds.feedburner.com/codinghorror" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feeds.feedburner.com/co&lt;/span&gt;&lt;span class="invisible"&gt;dinghorror&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 赖勇浩的编程私伙局&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//blog.csdn.net/lanphaday/rss/list" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;blog.csdn.net/lanphaday&lt;/span&gt;&lt;span class="invisible"&gt;/rss/list&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 破船之家&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//beyondvincent.com/feed/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;http://beyondvincent.com/atom.xml&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： xlvector - Recommender System&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//xlvector.net/blog/%3Ffeed%3Drss2" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;xlvector.net/blog/?&lt;/span&gt;&lt;span class="invisible"&gt;feed=rss2&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 网易用户体验设计中心博客&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feed.feedsky.com/uedc" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feed.feedsky.com/uedc&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： Aiur&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//blog.yxwang.me/atom.xml" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;blog.yxwang.me/atom.xml&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： Yi Wang's Tech Notes&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//cxwangyi.wordpress.com/feed/" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;cxwangyi.wordpress.com/&lt;/span&gt;&lt;span class="invisible"&gt;feed/&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 云风的 BLOG&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//blog.codingnow.com/atom.xml" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;blog.codingnow.com/atom&lt;/span&gt;&lt;span class="invisible"&gt;.xml&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 唐巧的技术博客&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//blog.devtang.com/atom.xml" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;blog.devtang.com/atom.x&lt;/span&gt;&lt;span class="invisible"&gt;ml&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 《程序员》杂志官网&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feed.feedsky.com/programmer" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feed.feedsky.com/progra&lt;/span&gt;&lt;span class="invisible"&gt;mmer&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 搜索研发部官方博客&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//stblog.baidu-tech.com/%3Ffeed%3Drss2" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;stblog.baidu-tech.com/?&lt;/span&gt;&lt;span class="invisible"&gt;feed=rss2&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 服务器运维与网站架构|Linux运维|互联网研究&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.ha97.com/feed" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://www.&lt;/span&gt;&lt;span class="visible"&gt;ha97.com/feed&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： NoSQLfan&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feed.feedsky.com/nosqlfan" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feed.feedsky.com/nosqlf&lt;/span&gt;&lt;span class="invisible"&gt;an&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： MySQLOPS 数据库与运维自动化技术分享&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.mysqlops.com/feed" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://www.&lt;/span&gt;&lt;span class="visible"&gt;mysqlops.com/feed&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： a db thinker's home&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feeds.feedburner.com/dbthink" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feeds.feedburner.com/db&lt;/span&gt;&lt;span class="invisible"&gt;think&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： High Scalability&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feeds.feedburner.com/HighScalability" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feeds.feedburner.com/Hi&lt;/span&gt;&lt;span class="invisible"&gt;ghScalability&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;h4&gt;媒体&lt;/h4&gt;&lt;p&gt;名称： ifanr 爱范儿专注于拇指设备的小众讨论&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.ifanr.com/feed" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://www.&lt;/span&gt;&lt;span class="visible"&gt;ifanr.com/feed&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 《程序员》杂志官网&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feed.feedsky.com/programmer" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feed.feedsky.com/progra&lt;/span&gt;&lt;span class="invisible"&gt;mmer&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 果壳网 &lt;a href="https://link.zhihu.com/?target=http%3A//guokr.com" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;guokr.com&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; - 果壳网&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.guokr.com/rss/" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://www.&lt;/span&gt;&lt;span class="visible"&gt;guokr.com/rss/&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 所有文章 - UCD大社区&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//ucdchina.com/rss/all" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;ucdchina.com/rss/all&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： &lt;a href="https://link.zhihu.com/?target=http%3A//Apple4.us" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;Apple4.us&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//apple4.us/feed" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;apple4.us/feed&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： NoSQLfan&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feed.feedsky.com/nosqlfan" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feed.feedsky.com/nosqlf&lt;/span&gt;&lt;span class="invisible"&gt;an&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 网易用户体验设计中心博客&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feed.feedsky.com/uedc" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feed.feedsky.com/uedc&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： @36氪&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.36kr.com/feed" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://www.&lt;/span&gt;&lt;span class="visible"&gt;36kr.com/feed&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： Startup News&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//news.dbanotes.net/rss" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;Startup News&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 雷锋网&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.leiphone.com/feed" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://www.&lt;/span&gt;&lt;span class="visible"&gt;leiphone.com/feed&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;名称： 月光博客&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//feed.williamlong.info/" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;feed.williamlong.info/&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;点击【&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/%3Fp%3D920" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;《MacTalk·人生元编程》购买地址&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;】，购买我的电子书《MacTalk·人生元编程》&lt;/p&gt;</description><pubDate>2013-10-17T13:45:52+08:00</pubDate></item><item><title>也无风雨也无晴</title><link>http://zhuanlan.zhihu.com/p/19590025</link><description>&lt;p&gt;放假期间整理文章的时候，把《一生要面试多少回？》这个系列整合成了一篇，去掉了一些碎碎念，居然还有7600多字，怪不得有几位读者说写的水呢，其实我完全可以把文章写的更简短一些，比如：&lt;/p&gt;&lt;p&gt;做好准备、要有简历、贵人帮忙、还要自强、排除万难、上阵面试、面完以后、要有反馈……&lt;/p&gt;&lt;p&gt;这样的干货读起来朗朗上口，写起来触手即得，最大的问题是：这么写谁看？比如&lt;/p&gt;&lt;p&gt;唐僧去西天取经可以写成「走、停、给、收、回」，&lt;br&gt;红楼梦可以写成「一个男人和一群女人的故事」，&lt;br&gt;水浒传可以写成「一个男人和一群男人的故事」，&lt;br&gt;……&lt;/p&gt;&lt;p&gt;干是干，可惜只剩下骨架，没有了血肉和衣装，无法成就有血有肉的故事，自然也就不会有人看。有多少人下副本遇到骷髅怪兽时会搭讪说，「哇，你好瘦，你是怎么做到的？」，基本都是打出一记火球拳，装备都不捡就走掉了。我现在特别理解西游记里的白骨，作为世界上最干的干货，她得多寂寞才会不断幻化人形玩各种角色扮演游戏啊。所以，我们今天批判的主体是水货的对立面，干货！&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;当然，那几个抱怨文章水的童靴也不用担心，很早就有人告诉我，「千万别把批评太当回事」「要虚心接受别人的意见」。&lt;br&gt;虽然有些文章被认为有水份，虽然我当时说了一些类似「想要干货出门右拐上楼找劈柴」的难听话，但静下心来阅读文章，感觉确实有些地方可以精简。这件事我一直没有忘记，所以假期里有时间的时候，我在微信后台里找到了这几个要干货的童靴，选中后，……果断的拉黑了……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;现在看我以前写的博客文章，确实秉承了有事说事，没事别找事的最高境界，大部分文字都是干巴巴的技术诉求，是在 Tell the fact，而不是 Tell the story，但是由于这些文字确实帮助其他技术人员解决了一些问题，所以居然有不小的访问量，真是难为了这些读者。&lt;/p&gt;&lt;p&gt;在持续写了一些东西之后，会对文字本身产生一些思考。难道技术类的文章一定要这么写吗？压缩饼干是干，但你不能认为所有人都会喜欢这种食物，真实的情况可能是更多人的不喜欢。&lt;/p&gt;&lt;p&gt;小时候写作文常常被教育文以载道，文字为主题服务，长大了以后我发现这事挺扯淡的。难道读者没有单独欣赏文字的权利么，很多人解构大话西游、分析悟空传和西游日记，从中收获了很多形而上的东西，这没什么不好，但是你不能想当然的认为当年周星驰和今何在创作这些作品时就是这么想的。甚至读者可以不去理会这些「道」和「干货」，单纯以读故事的心态去欣赏这些作品和文字，未尝不是一件美事。&lt;/p&gt;&lt;p&gt;在知乎看到一个问答，鲁迅先生在《秋夜》里写道：「在我的后院，可以看见墙外有两株树，一株是枣树，还有一株也是枣树」，妙在哪里？&lt;/p&gt;&lt;p&gt;这个问题获得了一百多个回复，有人看到了寂寞，有人感受了孤独，有人解读出了不安，有人想起了自己的青春，还有网友愤怒的抛出了鸡毛无用论：「妙鸡毛啊，这8就是个病句么，如果是韩寒写的早就被口水淹死好几回了……」。&lt;/p&gt;&lt;p&gt;我的感受是，文字一旦问世，就有了自己的生命，读者可以在不同的外部环境和内在心境中获得不同的解读，但当时作者为什么这么写，没有人知道。就算穿越到民国去问鲁迅先生，他老人家的回答也可能是，「我特么怎么知道？」&lt;/p&gt;&lt;p&gt;还有一种体验估计很多经常写字的人也会遇到，你写了10万字交给编辑，她翻翻稿子说，「写了这么多你想说什么呢，能不能写两句话概括一下？」这时你往往是先茫然若失后肝肠寸断，呆呆的看着那几万字，脑海中一个有效的句子都组织不起来，几百句骂人的话倒是在胸中翻腾，「如果两句话能说清楚，老纸写几万字干嘛？」&lt;/p&gt;&lt;p&gt;网络时代的阅读，让文字的传播变得更快更轻更远，但相伴而生的是阅读的功利性。在成功的把自己的博客文章缩减成140个字的微博之后，大家又开始对阅读下手了。每个人都希望去除枝叶和骨血，直抵核心，获取自己最需要的东西。但是很多人在找寻干货的过程中忘记掉了本质，有时候我们走在路上，可能只是为了路本身。在路上，才是全部的意义……&lt;/p&gt;&lt;p&gt;写到这你们就知道了，干货乃万恶之源，它扼杀了文字的速度感和文章的故事性，殊不知好的文字该是无干也无湿，也无风雨也无晴。&lt;/p&gt;&lt;p&gt;很多 IT 人在讨论如何去 IOE（IBM、Oracle、EMC），而我则希望某一天写出了没有干货的文字，竟然有很多人阅读，那时我就可以把这些湿漉漉的文字丢到空中，让他们在晨光中随风飞舞。然后再说一句，去特么的干货！&lt;/p&gt;&lt;p&gt;「为什么要写字？」&lt;br&gt;「不知道」&lt;br&gt;「那为什么要写下去？」&lt;br&gt;「因为不能停……因为还有人读……」&lt;/p&gt;&lt;p&gt;人生就是一条无尽的长路，路上行走的是一代代心怀梦想的人……&lt;br&gt;&lt;br&gt;文章千古事，得失寸心知！&lt;/p&gt;</description><pubDate>2013-10-09T10:07:25+08:00</pubDate></item><item><title>昨日黑莓明日黄花</title><link>http://zhuanlan.zhihu.com/p/19586035</link><description>&lt;p&gt;今天看到一则消息，黑莓正式宣布裁员40%，将近4500人失去了在黑莓工作的机会。根据媒体报道，黑莓第二季度的营收仅为16亿美元，手中的现金只能维持16个月的光景，裁员是避免公司进一步下滑的措施之一。何去何从？已经是摆在黑莓桌面上的生死难题。&lt;/p&gt;&lt;p&gt;黑莓手机一度是智能手机的品牌代表，独特的全键盘用户体验和安全特性，让很多公司为他们的商业精英配备了黑莓手机，他们一边开会一边在黑莓上打字，拇指上下翻飞，一条条短信和邮件顺着手臂、拇指流到键盘和屏幕上，各种事务和业务在黑莓上流转，我曾经看到一位国外的媒体人员用黑莓手机敲敲打打写出了一篇新闻稿，长达几十屏，由于身边没有小伙伴，只好自己惊呆了。&lt;/p&gt;&lt;p&gt;黑莓手机成了个人电脑的有效补充，在智能手机界一时间谈笑有鸿儒，往来无白丁，高端大气不做他想。&lt;/p&gt;&lt;p&gt;如果这个世界上没有出现 iOS 和 Android，现在的黑莓一定风光无限。这个假想同样适用于坚硬的诺基亚和明媚的摩托罗拉。可惜2007年 iOS 伴随着 iPhone 横空出世，一年后 Android 问世。那时候这些手机巨头的想法是：&lt;/p&gt;&lt;p&gt;「现在我们一年要卖出好几百万台智能手机，苹果连一部都还没卖出去」&lt;br&gt;「技术上很难实现，他们的手机续航时间可能只能支持一天，有多少用户会购买这样的手机呢」&lt;br&gt;「他们试图把电脑塞进手机里，太可笑了」&lt;/p&gt;&lt;p&gt;现在的想法是：&lt;/p&gt;&lt;p&gt;「我们再也不是一家充满创新活力的公司」&lt;br&gt;「客观地说，iPhone 的出现让我们措手不及」&lt;br&gt;「他们赢了」&lt;/p&gt;&lt;p&gt;iPhone 从2007年起步，历时6年，时至今日，与 Android 一起横扫天下。历史为这些公司预留了足够的时间，但是非常遗憾，没有人去打开时间之门。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;半冷半暖秋天，熨帖在你身边&lt;br&gt;静静看着流光飞舞&lt;br&gt;那风中一片片红叶，惹心中一片绵绵&lt;br&gt;半醉半醒之间，再忍笑眼千千&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;今日依然流光飞舞，但是昨日黑莓，可能已是明日黄花。（附图是我曾经用过的黑莓9000，希望这个品牌能够重新崛起）&lt;/p&gt;</description><pubDate>2013-09-26T17:29:36+08:00</pubDate></item><item><title>《MacTalk·人生元编程》出版</title><link>http://zhuanlan.zhihu.com/p/19579059</link><description>&lt;p&gt;今天中午得知了电子书正式上线的消息，作为一个没见过世面的70后，做为一个常年为 Apple 和 Mac 写软文没捞着一个子儿的程序员，俺压抑住内心鸡冻的心情，决定为自己的第一本书写一篇软文。当时我正在心潮澎湃思绪万千的想：进城走哪条道能不堵车呢？然后我就没时间写软文了，然后我就堵了两个小时进城了。结果到了客户那他完全不能理解我的心情，一个劲问这问那，从架构问到编码，从难题问到幼稚，足足耗费了两个半小时，然后就到了5点半晚高峰袅，然后俺再一次经历堵到海枯石烂，堵到沧海桑田，堵到死于心碎，于7点半回到家中，啥也没说打开 Mac 就开始写这篇软文，我容易嘛我……&lt;/p&gt;&lt;p&gt;以下是正文&lt;/p&gt;&lt;p&gt;《MacTalk·人生元编程》可以说是一本随笔文集，主要内容来自Mac 君的微信公众平台 【MacTalk By 池建强】。&lt;/p&gt;&lt;p&gt;【MacTalk By 池建强】开通在2012末日前夕。最初只是想每天发送一条Mac技巧，但写起来却并非如此，最终形成了一种技术和人文结合的风格，时而随笔，时而技术，吸引了不少的读者。&lt;/p&gt;&lt;p&gt;那为毛会有这本书的问世呢？因为写到后来越来越多的读者开始碎碎念，「神马这些好的文字不集结成书那真是太可惜了，神马你要是出了书多少钱我都买，神马这么多 MapTips 为毛不整理到一本书里呢，神马你也该出一本书了吧」，等等，不一而足，慢慢的，我就信以为真了，这时候另一个重要角色出现了，那就是一些图书和电子出版行业的朋友恰好也是 MacTalk 的读者，他们也说你的文字该收拾收拾了。于是我终于收起了那颗懒惰的心，硬着头皮开始整理文字。整理工作是枯燥而乏味的，比写文章的感觉差多了，开始动手的时候我已经写了180多篇 MacTalk，还包括一些之前写的没发表东西，需要统一进行梳理，选择那些适合集结成册的文字和文章。所有的文章都需要重新阅读，对内容进行增补、删减和校对，最终形成了五大主题共计五十二篇文章，这五个主题包括：Mac、程序员与编程、科技与人文、人物、工具。每篇文章独立成文，方便读者利用碎片时间阅读。&lt;/p&gt;&lt;p&gt;另外，由于原来写的 Mac 技巧散落在上百篇文章中，需要一条一条的摘出来重新整理校对，最后形成了一篇长文，包含130个 Mac 使用技巧，起名为 MacTips，归并于 Mac 主题。&lt;/p&gt;&lt;p&gt;这还不算，多看电子书针对这部分 Mac 技巧的内容单独做了索引，叫做「MacTips 快速查阅」，大家可以非常方便的根据索引进行检索，如果您是 Mac 用户，绝对不可错过，涨姿势的同时，还能提高工作效率不是？「我觉得光这篇文章就得值3块了吧？」&lt;/p&gt;&lt;p&gt;最后隆重介绍一下本书的推荐序「技术写作与减熵」，由冯大辉先生创作，他是微信公众平台 【小道消息】的作者这种事我就不用说了，我想说的是，原以为他会写一篇像我这样的软文，没想到他写的高屋建瓴高端大气，从微信到技术到写作到王小波到减熵到经济，延续了他一惯的文风，那就是硬、很硬、非常硬，就像刚刚被收购了的诺基亚一样！他在序中无情吹捧 MacTalk 的同时，也猛烈的赞赏了小道消息！「我觉得光这篇文章就得值3块了吧？」&lt;/p&gt;&lt;p&gt;MacTalk 在写作的过程中得到了冯大辉先生的诸多帮助，在此一并谢过。&lt;/p&gt;&lt;p&gt;对，最后就说到本书的价格了，我在和无数读者、出版方进行了多方会谈之后，考虑了图书的传播价值，老读者的感受，新读者的体验，决定去掉最高价50，去掉最高价30，去掉最高价20，去掉最高价12，然后再打个半折再半折，那就是著名的2.99元，2.99元，这就是传说中的白菜价啊……&lt;/p&gt;&lt;p&gt;咦，怎么越写越有电视购物的赶脚了，不管了，就是打折销售的2.99元……&lt;/p&gt;&lt;p&gt;「我说 Mac 君你够了，我们去买不就得了」 「哦，好吧……」&lt;/p&gt;&lt;p&gt;最后我要感谢多看出版的朋友们，他们的敬业和效率让本书保质保量如期出版；感谢 MacTalk 的读者，没有你们的热情和催促，此书无法出版。&lt;/p&gt;&lt;p&gt;另外，下载了《MacTalk·人生元编程》的读者，如果你们发现文中有错漏之处，请在本文下留言，我会统一进行更新。&lt;/p&gt;&lt;p&gt;无论喜不喜欢，请给《MacTalk·人生元编程》打分和评论，一星五星我都喜欢！&lt;/p&gt;&lt;p&gt;点击&lt;a href="https://link.zhihu.com/?target=http%3A//www.duokan.com/mactalk%25C2%25B7%25E4%25BA%25BA%25E7%2594%259F%25E5%2585%2583%25E7%25BC%2596%25E7%25A8%258B/b/40930" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;《MacTalk·人生元编程》&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; 购买本书。&lt;/p&gt;</description><pubDate>2013-09-05T10:53:45+08:00</pubDate></item><item><title>薪水几何？（下）</title><link>http://zhuanlan.zhihu.com/p/19576620</link><description>&lt;p&gt;关于这个话题，我们在上篇中谈了赚钱的能力、工作初期的薪水和真正的知识，不知道各位读者做何感想？&lt;/p&gt;&lt;p&gt;有些小同志问努力就能成功么？除了成功学大师，没人会告诉你努力=成功。只是努力能够让你成长的更快些，机会更多些，仅此而已。对于那些取得了较大成就的人，性格、禀赋、时机、运气等缺一不可，但是这些人有个共同的特点就是，他们能够更早的想清楚一些事情！我们三十岁才想清楚的事情，他们二十岁已经开始实践了。创业成功的，可能在大二就开始卖自己的第一袋化肥了；技术领先的，高中时就是编程高手了；围棋世界冠军，初中已经高段了。这世界残酷而公平，顶尖水平的人物往往会拉下我们十年的身位，你只能在醒悟之后奋力追赶，追赶中当然也可能成就一番事业，这就是所谓的大器晚成。所以，既不妄自菲薄，也不妄自尊大，就是这样。&lt;/p&gt;&lt;p&gt;昨天写了那个小故事之后，有人说穷得瑟啥，又不是成功人士。说的很有道理，人需要更多的看未来，对过去应该回顾而不是沉湎，如果让我回到过去，我最想做的事情就是重新规划大学生活和工作的前五年。如果你正处于这个阶段，要珍惜！&lt;/p&gt;&lt;p&gt;今天我准备聊聊这么几个内容：跳槽、时薪、加班和资源，欢迎斧正。&lt;/p&gt;&lt;h4&gt;跳槽&lt;/h4&gt;&lt;p&gt;跳槽其实就是你人生中的一次选择，只不过相比选书选路选衣服，这种选择能够更为长久的影响到你的生活。&lt;/p&gt;&lt;p&gt;跳槽有时候是理性的，比如经过深思熟虑一个月之后，想到头发都白了一根，最后决定离开 A 公司去创业，或者离开 A 公司去 B 公司。有时候是偶然的，比如和上司吵架了，比如受排挤了，比如猎头找你了，比如呆烦了，都可能一走了之。哪种选择更好呢？没有更好，只有对错。你规划了一年的创业可能半年就失败了，偶尔一次跳槽也可能加盟了一家蒸蒸日上的公司从而享受公司成长的成果。所以，路没有对错，如果错了，那就是你的选择错了。怎么才能选对呢？我也想知道，更多时候我们只能依赖自己的判断，还有运气。&lt;/p&gt;&lt;p&gt;在跳槽这件事上唯一可以说的道理就是，不要频繁跳槽，多久一次算频繁？我觉得至少不要一年一跳，虽然跳槽是加薪升职的最快途径，但不一定是最好的，因为短暂的停留让你在每个领域都浅尝辄止，你会成为一个平庸的半瓶子醋砖家，总有一天会不招人待见而被迫用余生砌砖。当然，如果你的跳槽只是为了磨练意志增长经验锻炼身心，那就另当别论了。&lt;/p&gt;&lt;p&gt;另外，离开一家公司后，公司发展的顺风顺水，又是纳斯达克又是纽交所，没必要后悔，因为你不是公司上升的 Key Person；加盟一家公司后，这家公司风生水起，你也得掂量掂量自己是带来了风的速度还是水的力量，享受成果的同时，认清自己的位置。如果你依靠自己的力量取得了一番事业，那也不要忘了为自己竖起大拇指赞一个。&lt;/p&gt;&lt;h4&gt;时薪&lt;/h4&gt;&lt;p&gt;大部分人都在纠结自己的月薪，我建议大家更多关注一下时薪的概念（每个小时的薪金或工资报酬）。一个人月薪2万，每周工作80小时，累的和牛马一样，除了上班时间就剩下睡觉和吃饭了。另一个人月薪1万，正常工作和生活，有时间交友健身出游，提升个人能力的同时，也没耽误工作。这两个人的时薪是一样的，大家会选择哪一种生活？&lt;/p&gt;&lt;p&gt;我相信不同阶段的人会选择不同的工作和生活方式，但是在选择的同时，时薪应该是一个可以参考的标准。&lt;/p&gt;&lt;p&gt;当然，如果你觉得自己正在开创事业，那就无所谓月薪和时薪了，你所有的时间都可能投在自己喜欢的工作上，那是你的运气！&lt;/p&gt;&lt;h4&gt;加班&lt;/h4&gt;&lt;p&gt;谈到时薪，就引出了加班的概念，对于加班，我既不抵触，也不鼓励，我自己的团队，几乎没有加班，除非有紧急事故或产品发版，总之加班少之又少。由于人天生的注意力因素，长期的加班对工作成果有害无益，这一点不必多言。&lt;/p&gt;&lt;p&gt;但是，年轻的时候谁没有通宵达旦的日子呢？大部分年轻人工作初期都一无所有，有效的加班并不是不可接受的。第一代 iPhone 发布之前，数以百计的研发人员都在为 iPhone 的软件系统和硬件系统加班加点，因为他们知道自己在参与一个伟大产品的诞生过程。&lt;/p&gt;&lt;p&gt;为了自己的梦想和能力提升的加班是不可避免了，为了参与一个伟大产品的加班也是可以接受的。但是，为了捞加班费和磨洋工的加班是可耻的，因为你在浪费自己的生命！&lt;/p&gt;&lt;h4&gt;资源&lt;/h4&gt;&lt;p&gt;之前写过，这个世界上的资源永远是有限的，如果把人作为X轴，资源作为Y轴，那资源基本上符合正态分布曲线，极少数人在资源上极端富有，极少数人极端贫穷，剩下的大区间里的大部分人都是中等水平，区别只是有的偏上有的偏下而已。&lt;/p&gt;&lt;p&gt;兜里的银元同样是资源的一种，银元越多，你会觉得它越像一种资源。记得有一位企业家说过，如果你有一百万元，可能会感觉那是你自己的私人财产，如果你有一亿，无论你是否愿意承认，这一亿已经是社会资源了，你会显而易见的承担更多的责任、权利和义务，当然你可能在某些领域拥有更大的自由度，可以做更多的事情。&lt;/p&gt;&lt;p&gt;每个人都生活在这个正态分布曲线上，每个人都想获得更多的资源。随着你的时间线的拓展，你的资源总会变得更多或变得更少，不必纠结，努力就好！&lt;/p&gt;&lt;p&gt;作为我个人来讲，我同样喜欢有更多的资源和银元，收获更多的捐助和书款，这样我也有动力做更多的事情。其实想清楚了人生就这么点事，舍得获得，挣得花得，见自己，见天地，见众生，最后尘土相随。&lt;/p&gt;&lt;p&gt;文章内容来自微信公众账号：MacTalk&lt;br&gt;· 微信号：sagacity-mac&lt;br&gt;· 回复 m 可以查阅所有历史文章和Mac Tips&lt;br&gt;· 网站：&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;MacTalk-池建强的随想录&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;</description><pubDate>2013-08-30T21:12:52+08:00</pubDate></item><item><title>薪水几何（上）</title><link>http://zhuanlan.zhihu.com/p/19575898</link><description>&lt;p&gt;今天的话题算是规定自选动作，以前就想写，但是一直未动笔，这次又有人提起，那就说说这个主题。谈到钱都会比较敏感，很遗憾我不会谈那些敏感话题，比如「行业薪资分析」，比如「干什么才能挣大钱」，前者是没空儿也没数据，后者是「我也找呢」。&lt;/p&gt;&lt;p&gt;我准备从以下这么几个方面谈谈我对「薪和钱」的看法：&lt;/p&gt;&lt;h4&gt;挣钱的才能&lt;/h4&gt;&lt;p&gt;我把人的才能分为两种，一种是真正的才能，比如代码写的好，销售能力强，商务无敌，运营无双，小李飞刀射的准，降龙掌打的猛，这都算真正的才能，人们依靠这些才能养活自己和家人，开创事业，改变世界，并获得自己的酬劳。世界上大部分人都拥有这样的才能，这些才能和时代背景息息相关。诗人在诗词盛行的唐宋就能吃香的喝辣的，到了没人爱看诗歌的二十一世纪，诗人就得饿肚子。在信息时代能够拿到百万年薪的技术大牛，放到打个喷嚏都能自动生成代码的未来，只能叹息生不逢时，「只剩余生」。&lt;/p&gt;&lt;p&gt;但是还有少数人，他们拥有一种极为特殊的才能，你看到他在编写代码，实际上他在挣钱，你看到他在写网络段子，实际上他在挣钱，你看到他在和客户闲聊，实际上他在挣钱，你看到他坐在黄昏的边缘看夕阳西下，实际上他在挣钱。无论时光流转，形势瞬息万变，他们总能找到挣钱的门路和手段，从古至今历朝历代，总有那些默默无闻的人富甲一方，无论摔倒多少次，他们都会东山再起，再次把他们所做的一切换成银元。&lt;/p&gt;&lt;p&gt;这种才能叫做挣钱的才能，如果你拥有这样的才能，那么永远不需要担心钱的问题，因为你就是为钱而生的。&lt;/p&gt;&lt;p&gt;如果你是第一种人，永远不要和第二种人去比较，尤其是去比钱，比来比去除了心如刀绞万念俱灰之外，没有任何结果，也不要去问「现在你有钱了你幸福吗」这种蠢问题，他们都很幸福的。实在想找个目标或偶像，从第一种人里边踅摸，这里面挣钱多的也不少，比如比尔·盖茨，史蒂夫·乔布斯，史蒂夫·沃兹尼亚克……&lt;/p&gt;&lt;h4&gt;你的薪水还好吗？&lt;/h4&gt;&lt;p&gt;不要纠结和执着于当前的薪水，尤其是在职业生涯的前五年，这段时间是你提升能力的最佳时期，你在一个地方工作的唯一理由就是能够提升自己的能力，当然，这是在完成公司工作的基础之上。如果你能找到一个感兴趣、完成业绩和提升能力同步进行的地方，恭喜你，好好呆着吧，你要做的就是拼命的学习和实践，并且记得抬头看路。&lt;/p&gt;&lt;p&gt;如果没找到这样的地方怎么办？讲个故事给大家听下。有朋友刚毕业的时候薪水是800元，在北京郊区的顺义的郊区的一个工厂工作，厂子里有实验室，但容纳的基本是牛人之子和名校学生，他这样的只能在车间工作，头三个月熟悉车间的测试流程和擦散热器，车间里有唯一的一台计算机，下班后可以玩玩。工作一段时间后，这兄弟决定与散热器分手，专心拥抱计算机编程，但是没环境怎么办？难不倒有心人，丫找了个周末去中关村买了一块10G 的硬盘，可耻的装了盗版的 Windows，每天吃完晚饭就回到车间，装上自己的硬盘学习编程，这么折腾了多半年，他就出去找工作了，然后就到一家软件企业了，月薪2000，那时还没有扣税这种事情。&lt;/p&gt;&lt;p&gt;到了新公司以后，他发现居然每个人一台电脑，做为一个来自郊区工厂的土鳖，这简直让人幸福到眩晕。丫像渴了三天的孩子跳进装了纯净水的浴缸，开始疯狂的汲取知识、练习编程，向每一个牛人请教，给每个程序取一个温暖的名字，不分昼夜的学习和工作，一年之内薪水调了三次。&lt;/p&gt;&lt;p&gt;总之，前五年不要太在意薪水，提升能力是王道，五年之后你已有小成，那时候拔剑四顾眉宇苍茫，无论是走是留是创业，你都游刃有余。银元烁烁放光，就在外面某个地方等你……&lt;/p&gt;&lt;h4&gt;做一个真正有知识的人&lt;/h4&gt;&lt;p&gt;《清醒思考的艺术》一书中讲了一个故事，著名学者普朗克荣获诺贝尔物理奖，随后开始全国巡讲，每次讲的都是量子力学的内容，久而久之，他的司机对这份报告也熟记于心了。有一天司机对他说，Master，讲了这么多遍，您不烦我都烦了，下次不如我来讲您来当听众吧。于是下一次演讲司机上台侃侃而谈长篇大论，讲的正嗨皮，突然有位不识趣的物理学教授提问balabala……这下司机傻眼了，于是指着台下的普朗克对提问者说，「我了个去，你怎么能问这么简单的问题呢，让我的司机回答你吧。」&lt;/p&gt;&lt;p&gt;世界上永远存在一些看起来很牛的人和实际上很牛的人，看起来很牛的人往往口若悬河长篇累牍，但是一遇到问题和细节就原形毕露。而那些真正拥有知识的人，其实看起来也很牛，但是牛的比较低调，他们知道自己的能力范围和边界，他们会努力扩大能力范围和突破边界，但是一旦真正在能力之外，他们要么什么都不说，要么毫不犹豫的说不知道，这一点是那些万事通们永远无法理解的。&lt;/p&gt;&lt;p&gt;想提升自己的薪水？那就做一个看起来牛实际也很牛的人吧。&lt;/p&gt;&lt;p&gt;待续，下篇会谈谈跳槽、时薪、加班和资源……&lt;/p&gt;</description><pubDate>2013-08-29T12:47:10+08:00</pubDate></item><item><title>顾得上就问，是为「顾问」也</title><link>http://zhuanlan.zhihu.com/p/19572116</link><description>&lt;p&gt;MacTalk 开通了九个多月，收到问题和问候无数，其中问的最多的问题有两类。&lt;/p&gt;&lt;p&gt;一种是 Mac 相关的，比如买 Air 还是买 Pro，11寸还是13寸等等，个顶个高端大气。第二种就是职业咨询，比如工作两年怎么才能找到一份感兴趣还不累薪水高责任少的工作？（我的回复是：我也找呢），比如技术转咨询有前途还是一条道走到黑更显英雄本色？比如在铁岭想去北京压力太大买不起房子能抢银行么？当然个别也有求姻缘问星象的，比如作为女程序媛怎样才能找到相伴一生的靠谱男程序猿等等。&lt;/p&gt;&lt;p&gt;总之，自从开启了 MacTalk 之旅，我觉得自己干瘪的人生经历终于丰富起来，上天给你开了这扇小窗，你不能拧巴着非要关上另一扇门。所以，今天我们就来聊聊第二类问题中的第三小类的第五小点，也就是很多技术人员干了很多年，人疲劳了代码也疲劳然后就想转行的职业——顾问！&lt;/p&gt;&lt;p&gt;我们先来看看顾问的百度百科定义：顾问是一个职位，泛指在某件事情的认知上达到专家程度的人，他们可以提供顾问服务。例如品牌顾问、法律顾问、政治顾问、投资顾问、港事顾问、军事顾问、国策顾问、地产顾问、工程顾问、国家安全顾问等。顾问提供的意见以独立、中立为首要。所以读者参考顾问报告之前，首要了解顾问的背景，是否存在利益冲突。&lt;/p&gt;&lt;p&gt;我觉得这是一份完美的定义，首先顾问应该有真知识，装有不行，其次顾问有很多种，再次顾问的意见和建议应该是中立的、独立的。&lt;/p&gt;&lt;p&gt;如果大部分顾问能够做到其中的两点，那这就算是个相当有前途的职业了，然而现实往往是残酷无情的，国内的一些顾问更多的倾向于只说不做，只提方案不顾执行，只忽悠不落地，只有利益没有中立。想想顾问埋下的那些坑那些雷，你和你的小伙伴是不是满眼都是辛酸泪啊？没关系，伤心总是难免的。&lt;/p&gt;&lt;p&gt;我曾经幼稚的以为，做技术咨询起码要写过几万行代码吧，做敏捷顾问至少要做过成功的项目吧，做管理咨询总要管过几十号人吧，做战略规划总要运营过公司吧，然而现实总能轻松突破你的底线。&lt;/p&gt;&lt;p&gt;有一次客户使用的正版中间件出现了执行线程挂起的情况，因为支付了高额的服务费用，所以一个电话就把该司的技术顾问叫来了，顾问来了之后三板斧，打补丁、升级、重启（我擦比修电脑还简单），搞不定就会抛下一句「应该是你们的程序问题」，然后飘然而去，再出马就得是高级技术顾问了，当然费用也会涨的更高！&lt;/p&gt;&lt;p&gt;还有很多项目的咨询方案和项目研发分别由不同的公司承接，这时候就人生只见顾问笑，哪管项目经理哭，运气差碰到倒霉顾问，完全不考虑实际需求、项目研发和实施工作，客户喜欢什么概念，他就堆什么概念，前几年言不离 SOA，现在则是私有云、公有云、混合云、大数据、推荐、移动终端balabala……，什么好看堆什么，而且这样的顾问一般都有成套的方案工具，做出来的文案华丽无比，能把客户的钛合金眼晃瞎。项目经理一看基本要疯掉，一个项目下来杀死项目顾问的心都有了，所以我脑海里经常闪现出项目经理提着刀追砍项目顾问的场景，但是由于两人常年在项目堆里跳来跳去，经验丰富，凌波微步练得七七八八，一时间难分伯仲。但是项目还得进行下去，所以有时候这两人斗到最后把酒言欢也未可知，那样倒霉的可能就是客户了。&lt;/p&gt;&lt;p&gt;另外顾问还有一个必杀技，叫做「好转之前先恶化」原则，这个大招就像降龙十八掌里的亢龙有悔，刚柔并济收放自如，一招既出，你已立于不败之地。当客户问你怎么办的时候，你可以出一个相应的解决方案，不过这不是重点，你要告诉客户，「现在问题很严重，我不能保证帮你解决问题，但我保证好好帮你解决问题，而且在情况好转之前可能会出现反复和恶化，不必担心」。当情况真的恶化了，你就表示一切尽在掌握；如果情况变好，你就表示方案的效果好得出乎意料，无论如何，你总是对的。&lt;/p&gt;&lt;p&gt;好吧，虽然今天忍不住吐槽了顾问这个职业，但从另一个角度看，如果你能做的比这些顾问好一点点，那么就会脱颖而出，所以想从技术转顾问的，不用犹豫请继续！&lt;/p&gt;&lt;p&gt;总结一下，顾问是个好职业，不过好归好，您还得有真东西不是？顾得上就问，顾不上或没能力顾就不闻不问，迟早也会问无可问！&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;em&gt;文章内容来自微信公众账号：MacTalk&lt;br&gt;· 微信号：sagacity-mac&lt;br&gt;· 回复 m 可以查阅所有历史文章和Mac Tips&lt;br&gt;· Web站点：&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;MacTalk-池建强的随想录&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;点击 &lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/%3Fp%3D871" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;顾得上就问，是为「顾问」也&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; 阅读原文&lt;/p&gt;</description><pubDate>2013-08-21T22:36:45+08:00</pubDate></item><item><title>是旅行还是长跑？</title><link>http://zhuanlan.zhihu.com/p/19570863</link><description>&lt;blockquote&gt;&lt;p&gt;你苦战通宵游戏时，布里斯班的灯鱼已划过珊瑚丛；&lt;br&gt;你赶场招聘会时，蒙巴萨的小蟹刚溜出渔夫的掌心；&lt;br&gt;你写程序代码时，布拉格的电车正摇着铃晃过金色夕阳；&lt;br&gt;你挤进汹涌的食堂时，哥本哈根的街头画家完成了第99幅立体画。&lt;br&gt;有一些穿高跟鞋走不到的路，有一些喷着香水闻不到的空气，有一些在楼宇里永远遇不到的人。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;大伙看到这段文字，一定以为我要炖一锅热腾腾的心灵鸡汤了，然而事实的真相是，Mac君不会做饭！&lt;/p&gt;&lt;p&gt;这段文字在网络上流传甚广誉为佳句，其实还有很多类似的文字，比如「放下一段过往，期待一场盛大而华丽的远行」，比如「生活在别处，远离城市的丛林」，比如「背起行囊去远行」等等，总之就是一边戳着你的脑门一边对你说「你看看你现在过得是什么生活，你对得起谁，你为什么不把这些破烂扔掉去面朝大海春暖花开？」&lt;/p&gt;&lt;p&gt;这时候你是不是就忧伤啦，躺在租来的小屋里，手边是一个二手的电脑和已经翻的卷边的编程指南，想想蒙巴萨的小蟹和布拉格的电车，你对自己说，这是人过的日子么？于是就开始自怨自艾，懊悔不迭，为什么当年不让自选爹？但是想归想，除了极少数的二愣子，大部分看完这些话就是忧伤一下，然后洗洗睡了，因为明天还要去找工作或去写代码。&lt;/p&gt;&lt;p&gt;其实每个人在某个城市呆久了都会疲惫，每份工作干多了都会厌倦，为了疲惫和厌倦的改变，那不叫改变，那叫逃避。面对无数的选择和变化，你沉溺其中，但是依然无法获得理想中的生活。&lt;/p&gt;&lt;p&gt;经过这样一番理性加感性的描述之后，你就知道这种文字除了让人感受令人愉悦的忧伤和丧失斗志之外毛用没有，基本上可以定性为精神鸦片！只要你没有一个强悍的爹，就要先忘掉那些小鱼小蟹还有珊瑚丛，那些暂时还不属于你，踏踏实实的练习和提升才是正道，为自己规划一个十年的长跑，可以时不时停下来休息一下，低下头汗水就落入尘埃，抬起头就看看夕阳西下，你抹去疲惫，然后继续前行。十年看似很长，但实在很短，十年以后你回头看看，你究竟是成了人中龙凤，还是小鱼小虾，是你认知了世界，还是世界抛弃了你。&lt;/p&gt;&lt;p&gt;如果你真的烦透了当下，想出去散心旅行的，看看这篇《旅行，写作，编程》（ &lt;a href="https://link.zhihu.com/?target=http%3A//www.aqee.net/traveling-writing-programming/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;旅行，写作，编程&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; ），同样是在全球各处行走，这位兄弟游山玩水的成果是：写了两本关于JavaScript和CoffeeScript的书，参加了一个技术会议，写了大量的开源库，筹划了一个创业公司的框架，旅行结束后背着包去Twitter上班了，那一年他21岁。这叫游历生活。如果你也可以，那就凡事趁早，早去早回，对了，别说我没提醒你把背包里的PC换成Mac！&lt;/p&gt;&lt;p&gt;零零碎碎写了一些东西，是因为最近见了一些悲欢，看了一些生死，我越来越感觉到，生活更像长跑而不是旅行，你不断的前行和奔跑，在长跑中告别青春、告别幻想、告别岁月、然后慢慢开始告别各种人和事……&lt;/p&gt;&lt;p&gt;你不知道什么时候是终点，可能倒下的时候就是终点吧……&lt;/p&gt;&lt;p&gt;&lt;em&gt;文章内容来自微信公众账号：MacTalk&lt;br&gt;· 微信号：sagacity-mac&lt;br&gt;· 回复 m 可以查阅所有历史文章和Mac Tips&lt;br&gt;· Web站点：&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;macshuo.com&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/em&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;点击 &lt;/i&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/%3Fp%3D608" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;是旅行还是长跑？&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;i&gt;访问原文&lt;/i&gt;&lt;/p&gt;</description><pubDate>2013-08-19T23:31:25+08:00</pubDate></item><item><title>品评 OS X Mavericks ——唯快不破</title><link>http://zhuanlan.zhihu.com/p/19567918</link><description>&lt;p&gt;这个系列有三篇，阅读前两篇请点击：&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/%3Fp%3D812" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;品评 OS X Mavericks ——唯快不破（上）&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/%3Fp%3D833" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;品评 OS X Mavericks ——唯快不破（中）&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;首先对第二篇做一下更正：&lt;/p&gt;&lt;p&gt;更正1：Java 从 Lion 开始就不是 OS X 的一等公民了，而是按需安装，但是之前 Lion 和 ML 升级时不会干掉原有的JRE，所以 Mac 君没有觉察，这次他们干得更彻底一些。&lt;/p&gt;&lt;p&gt;更正2：双屏显示的时候，在扩展的桌面空间里也可以出现 Dock，具体操作方式是鼠标在屏幕下方滑动两次，就会呼出该屏幕的 Dock。但是这个功能还不稳定，经常发生呼不出来的现象，等正式版吧。&lt;/p&gt;&lt;p&gt;更正3：Ant 被干掉了，Maven 保留着。看来自古都是「但见新人笑，那闻旧人哭」。依然想使用 Ant 的童靴可以执行以下脚本安装：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;brew install https://raw.github.com/Homebrew/homebrew-dupes/master/ant.rb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1&gt;性能：唯快不破&lt;/h1&gt;&lt;p&gt;一个操作系统除了功能性和安全性之外，考虑最多的就是迅疾如风的响应速度和持久的续航能力，这次 Mavericks 的升级使用了多种技术保证了 OS X 的快和节能。&lt;/p&gt;&lt;p&gt;（一）Kernel&lt;/p&gt;&lt;p&gt;OS X 的内核基于 FreeBSD和 Mach3.0构建，可以通过32位或64位内核启动系统，并充分发挥32位或64位应用程序的运行效能。在64位内核的情况下，Mavericks 经测试可以最大支持 128G 的物理内存，这特么就是个服务器版本啊。&lt;/p&gt;&lt;p&gt;（二）Compressed Memory（内存压缩）&lt;/p&gt;&lt;p&gt;内存压缩技术是 Mavericks 新增加的底层技术，这货彻底提升了整个系统的使用容量和响应速度，也就是说你可以开启几十个应用程序，在联动内存超过80%，物理内存使用几乎达到100%的时候，依然可以像整个系统只打开了一个程序那样，毫无顿挫感的使用每一个打开的程序，这种美妙的感觉让人想想都要流口水的。&lt;/p&gt;&lt;p&gt;具体原则就是永远去满足最需要内存的程序，当内存告急的时候，系统就会根据时间顺序去寻找那些不活跃程序的内存，将其压缩到一半大小，然后把内存倒出来给最需要的程序。当这些被压缩了内存的程序活跃起来的时候，系统会以最快的速度释放内存，让你切换程序毫无顿挫的感觉。&lt;/p&gt;&lt;p&gt;这就像一个家族企业，哥哥姐姐弟弟妹妹各有各的生意，有一天大哥说要干一票大的，这时候其他人就会把手里的闲散资金贡献出来给大哥用，当有其他人也想拓展生意时，也是一样的路数。资源虽然有限，但总能让最需要最活跃的人获得足够的资金。当然前提是活跃的人数是有限制的，都活跃了这个游戏就没法玩了。&lt;/p&gt;&lt;p&gt;Mavericks 的内存压缩采用了 WKdm 算法（&lt;a href="https://link.zhihu.com/?target=http%3A//terpconnect.umd.edu/%7Ebarua/matt-compress-tr.pdf" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;terpconnect.umd.edu/~ba&lt;/span&gt;&lt;span class="invisible"&gt;rua/matt-compress-tr.pdf&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; ），这个算法巨牛无比，压缩和解压缩可以说唯快不破。我查了上面提到的论文，这算法也有年头了，不知道为毛现在才翻出来使用。这种压缩技术比硬盘 Swap 交换技术要快，即使是 SSD 硬盘也无法比拟。内存压缩的使用，在增加内存使用效率的同时，还减少了硬盘的读写次数和 CPU 的占用率，另外，与传统的虚拟内存技术不同，这玩意还能充分利用多核 CPU 的特性，实在是牛到逆天。&lt;/p&gt;&lt;p&gt;所以，大家如果总是把创新定在 UI/UE 的变化上是图样图森破的，没有技术底蕴都是昙花一现。&lt;/p&gt;&lt;p&gt;为了测试内存压缩的效果，我开启了三十个左右的GUI程序，包括各种浏览器、阅读器、办公软件、开发工具（IntelliJ、Eclipse、Xcode 和模拟器），其中 Safari 和 Chrome 分别打开了几十个标签页，整个系统什么感觉都没有，运转如飞。于是开始出大招，打开 Parallels Desktop，开启了三个 Linux 和一个 Win7，整个系统的内存变化如下图所见（见网站），红色部分表示内存压力高的时候，也就是我逐一打开四个虚拟机的阶段。这时系统终于有反应了，程序切换略有卡顿，但是依然不影响独立程序的使用。关掉一个虚机之后，这个系统又恢复如初了，性能远超上一代的10.8 ML。&lt;/p&gt;&lt;p&gt;（三）Power Efficiency（电源效率）&lt;/p&gt;&lt;p&gt;Mavericks 中的电源技术是根据现代处理器的功能和程序需求构建的，可以有效的延长电池的续航时间，简单来说就是当你的电脑在使用电池供电时，系统会把后台程序的功耗降到最低，尽可能只帮你处理激活窗口的程序，并根据 CPU 的具体使用状况尽可能让各处理器处于 idle 状态，一旦有需要再满负荷运行。比如我现在正在打字写文章，CPU 和硬盘都会处于低功耗的状态。系统对大功耗的后台程序做了严格的控制，并且会通过电池状态告诉你哪些程序是不合格的，以方便你随时干掉这些程序。&lt;/p&gt;&lt;p&gt;很牛的技术，但苹果没说怎么实现的，杯具！&lt;/p&gt;&lt;p&gt;（四）App Nap（程序挂起）&lt;/p&gt;&lt;p&gt;这个技术叫程序挂起也好，程序休眠也好，事实上是和Power Efficiency结合使用的。系统会把你暂时不用的程序，或者不可见的程序迅速而强硬的置于休眠状态，比如你开了三个 Safari 窗口，每个窗口开启了30个 标签页，一共访问90个网址，但是你只能同看一个或几个页面，这时候其他标签也都会被置为挂起状态，当你进行标签也切换时再迅速唤醒。并且在你访问 Safari 的时候，其他不可见的程序都会被置为挂起状态，限制程序向 CPU 发出中断请求，降低磁盘和网络 I/O。同时，App Nap技术还降低了 UNIX 基础进程的优先级，以保证系统的低功耗。&lt;/p&gt;&lt;p&gt;写过程序的都知道，这基本上就是一种懒加载技术，使用的时候才加载，但最神奇的是，系统在做了这么多限制之后，一旦某个程序需要处于激活状态，系统就会开足马力将其唤醒并提供足够的资源，让用户完全感觉不到有休眠和挂起这回事，这让我个人感觉非常悲伤，因为完全不知道人家是怎么实现的。&lt;/p&gt;&lt;p&gt;人比人死，货比货扔，没啥说的。&lt;/p&gt;&lt;p&gt;（五）Timer Coalescing（计时器聚合）&lt;/p&gt;&lt;p&gt;最后说说计时器聚合的技术。传统的应用程序在运行的时候向 CPU 发请求是杂乱无章的，这就搞的 CPU 很烦，因为永远不知道什么时候能休息，刚眯一下会就可能被叫醒的程序员你们感受下。&lt;/p&gt;&lt;p&gt;比如一位忙碌的程序员，几十位上级轮番上阵的向程序员要资源要成果，而且不分场合不分时间不分类型，长此以往，代码必将写无可写，因为程序员已经疯掉了。这时候就需要一个秘书出现来梳理这些请求，定时定点分门别类的处理，这样程序员的工作就轻松多了，有了计划性，还能得到休息。计时器聚合就是 CPU 的秘书，它会把请求进行梳理，通过合理的时间管理保证请求的有序性和间歇性，这样 CPU 就会有更多的低功耗休息时间，具体的处理示意图如下，表示处理之前和之后的CPU 时钟对比。同样，用户完全感受不到这位秘书的存在。&lt;/p&gt;&lt;p&gt;好，以上内容根据苹果提供的 OS X Mavericks Core Technologies Overview 演绎而得，如有雷同，必是他人抄袭。&lt;/p&gt;&lt;h1&gt;遗留问题&lt;/h1&gt;&lt;p&gt;目前这个 DP5 的版本已经达到工作机可用的程度，但问题也不少，如下：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;外接显示器启动 Mac 的时候你会看到左右两个灰灰的界面，如果你一直等下去的话，夏去秋来也不会有结果的。拔掉外接插头，你就能看到那张熟悉的脸（登录界面）。&lt;/li&gt;&lt;li&gt;多屏的情况下鼠标经常会失去焦点，如果你发现某个页面怎么也无法滚动时，不要怪罪你的食指，一定是有另一个程序在后面骂娘，「老子已经在后面归隐多时，为毛还要被反反复复的拖来拖去？」&lt;/li&gt;&lt;li&gt;总体来说，Mavericks的 UI 并没有太大的变化，但是时而扁平时而立体的效果，还是容易让人产生困惑，我们期盼两岸尽快统一起来。&lt;/li&gt;&lt;li&gt;程序的稳定性仍需加强，比如 Safari、iBooks等，每天还能崩溃一两回，iBooks 的性能和渲染也是问题，丫经常把自己搞得很慢。日历也经常出问题，你会发现周历和月历突然不能滚动了，或者用着用着事件的颜色被偷偷的修改了，总之，凡做过大手术的程序，都不稳定，Xcode5.0 没敢升级，不作死就不会死。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;希望下一个预览版能够解决这些问题。&lt;/p&gt;&lt;p&gt;另外，应部分童靴的要求，我把Mavericks 10.9 DP4完整镜像包和DP5的升级包的下载链接都放到了这篇文章的后面，感兴趣的可以去试试，尝试新鲜事物永远是保持内心鲜活的动力之一，但这毕竟是给开发者的预览版，记住两点：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;先备份&lt;/li&gt;&lt;li&gt;杯具了就别来找我&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;&lt;p&gt;本文来自微信公众账号 MacTalk，ID：sagacity-mac&lt;/p&gt;&lt;p&gt;阅读原文点击：&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/%3Fp%3D845" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;品评 OS X Mavericks ——唯快不破（下）&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;</description><pubDate>2013-08-15T08:03:22+08:00</pubDate></item><item><title>非同凡想</title><link>http://zhuanlan.zhihu.com/p/19563889</link><description>&lt;p&gt;6月底我在「1984，Mac诞生」中介绍了苹果公司的一则著名广告「1984」，在那篇文章中我描述道：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;1984年1月22日，在第十八届美国职业橄榄球超级碗大赛中，苹果公司播放了这段构思独特的广告片「1984」。广告借用乔治·奥威尔的小说《1984》映射IBM对市场的垄断和不思进取，把Macintosh作为挑战IBM的新生力量，在广告的结尾，屏幕上出现广告词：「1月24日，苹果电脑公司将推出Macintosh电脑，你就明白，为什么今天的1984不会变成《1984》」&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;不过我最喜欢的苹果广告并不是「1984」，而是今天要介绍的「非同凡想——Think Different」。2011年乔布斯辞世的时候，这条广告曾经被广泛的报道过，喧嚣过后，我们再来品位这些充满时间感的黑白画面和优美到极致的文字，想想宇宙苍茫，想想在时间的滚滚洪流中推动人类进步的人、事、欢乐、苦难和疯狂，我们就知道，改变世界不是闹着玩的。&lt;/p&gt;&lt;p&gt;这则广告诞生在乔布斯刚刚回归苹果公司的那段时期（1997年），乔布斯还仅仅是头顶「顾问」头衔的领导者，连临时 CEO 都不是。苹果当时内忧外患，除了要精兵简政，缩减产品线，拓展优势产品之外，还要告诉外界，苹果依然生机勃勃和与众不同，这个重任就落到了「非同凡想」上。&lt;/p&gt;&lt;p&gt;苹果找到了当时知名的广告公司TBWA/Chiat/Day，这个公司也是「1984」的缔造者，大家开始坐在一起寻找创意。与「1984」一样，创意必定伴随痛苦，整个过程充满了争论、反击、争吵、骂娘和痛哭流涕，双方恨不得杀死对方，剧情狗血得能写一个剧本。参与创意的人逐字逐句的推敲文字、画面，选择历史人物，选择旁白者等等，终于，在所有人彻底崩溃之前，广告内容完成了。&lt;/p&gt;&lt;p&gt;在旁白者的选择上，有人推荐乔布斯，但是在当年看来这并不是个好主意，乔布斯那时的成就很难比肩画面中的其他人物。最后大家选择了奥斯卡历史上最年轻的影帝理查德·德莱弗斯，不过，乔布斯也录制了一个版本，所以我们今天才有幸能够听到乔布斯本人旁白的「非同凡想」。&lt;/p&gt;&lt;p&gt;在广告创意和制作接近尾声的时候，乔布斯决定正式接管苹果公司，由顾问变为 iCEO（临时 CEO）。「非同凡想」广告播出后，所有人都知道苹果又活了，他们重新开启了复兴之旅。&lt;/p&gt;&lt;p&gt;16年过去了，让我们再次欣赏一下这则广告的文字版和乔布斯配音的广告片：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;在此向那些疯狂的家伙致敬

他们我行我素，桀骜不驯，惹是生非，就像方孔中的圆钉一样

他们用不同的方式看待世界

他们既不墨守成规，也不安于现状

你尽可以支持他们，反对他们，赞美或诋毁他们

但是唯独不能忽视他们

因为他们改变了世界

他们让人类向前跨越了一大步

他们是别人眼里的疯子

却是我们眼中的天才

因为

只有疯狂到自以为能够改变世界的人

才能真正的改变世界
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;影片中包含的人物有：阿尔伯特·爱因斯坦、鲍勃·迪伦、马丁·路德·金、理察·布兰森、约翰·蓝侬、巴克敏斯特·富勒(Richard Buckminster Fuller)、汤玛斯·爱迪生、穆罕默德·阿里(Muhammad Ali-Haj)、泰德·特纳、玛丽亚·卡拉丝、圣雄甘地、阿梅莉亚·埃尔哈特、亚弗列·希治阁、玛莎·葛兰姆、吉姆·韩森、弗兰克·劳埃德·赖特、毕加索。&lt;/p&gt;&lt;p&gt;广告的结尾，一位青春洋溢的小女孩，睁开了紧闭的双眼，仿佛看到无限可能……&lt;/p&gt;&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//v.youku.com/v_show/id_XMzIwNTMxNTI0.html" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;Think Different 苹果&amp;lt;非同凡想&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;p&gt;&lt;em&gt;文章内容来自微信公众账号：MacTalk&lt;br&gt;· 微信号：sagacity-mac&lt;br&gt;· 回复 m 可以查阅所有历史文章和Mac Tips&lt;br&gt;· 网站：&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;MacTalk-池建强的随想录&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;查看原文点击&lt;/em&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/%3Fp%3D788" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;非同凡想 | MacTalk-池建强的随想录&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;</description><pubDate>2013-08-06T22:21:21+08:00</pubDate></item><item><title>人生元编程</title><link>http://zhuanlan.zhihu.com/p/19563618</link><description>&lt;p&gt;如果你是个诗人，那你的人生就是一场风花雪月的事；如果你是个演员，除了学好《演员的自我修养之外》，你的人生就是一场接一场的剧本；如果你是个侠客，对不起，现代没有侠客，你会被抓起来进行休假式治疗；如果你是个程序员，好吧，你的人生将由一行行飘逸的代码和捉摸不定的bug组成，所谓编程人生，就是你的一生已经与编程密不可分，为代码欢笑，为bug忧伤。&lt;/p&gt;&lt;p&gt;那一年你初入江湖，你不懂什么是汇编什么是语言，你搞不懂Lisp和Smalltalk的区别，为什么C++比C多了两个加号就成了对象，2000年以后那么多人都在用Java，现在却说Objective-C是最贵的语言，这特么又是为毛？&lt;/p&gt;&lt;p&gt;你对着大海说，我要学尽天下武功！大海对你说，你算术不太好~~~&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;孩纸，世界上的编程语言成百上千，常用的也有数十种，光学会这些语言你的时间就得用微积分计算，学完以后估计手抖的都敲不动键盘了，哪还有时间创造奇迹？更别说除了语言你还得掌握前端后端UI体验，这个数据库那个操作系统balabala……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;你在知道了这些真相以后，依然痴心不改，抹干眼泪冲到编程兵器排行榜「TIOBE Index」面前，挑选了前十名开始勤学苦练。你在满天星斗的夜色中编写C程序，在清晨的微光中调试算法，上午你敲打键盘输出日志，中午吃完四又四分之一口米饭之后就匆匆离开，因为你要去看看系统为什么崩溃……你学会了五种语言、三种操作系统和四种数据库，你写了一个MIS两个OA三个App，你觉得你开始了编程人生，其实是你的人生被编程了，你被代码驱动和驱赶，你变得疲惫不堪。&lt;/p&gt;&lt;p&gt;这次你在清晨的寒风里对着高山说，这是为什么？高山对你说，因为你不懂元编程！&lt;/p&gt;&lt;p&gt;好吧，扯了这么多其实是想和大家谈谈元编程的事儿。元编程？估计小白一听又懵了，啥是元编程呢？与云计算、大数据不同，元编程并不是一个抽象的概念和名词，这里面代表了很多务实的技术，相伴而行的概念还有元数据。&lt;/p&gt;&lt;p&gt;元在英文里就是meta，元编程就是meta programming，元数据就是meta data。元编程就是能够操作代码的代码，元数据就是能够描述数据的数据。&lt;/p&gt;&lt;p&gt;听完这样一个介绍，大家是否更加晕菜了呢？如果回答是肯定的，那么效果达到了。&lt;/p&gt;&lt;p&gt;在接着介绍元编程之前，我们先看一下代码的世界。如果把代码比作一座小镇，那么其中的类、函数、方法、变量、代码块、宏，就是小镇上安居乐业的居民，他们相互协作，相互依赖，一起建设着有XX特色的美好家园。&lt;/p&gt;&lt;p&gt;在能够支持元编程的语言世界里，你可以和这些居民打招呼，还可以进行内省（introspection），获取其自身的一些信息和行为，甚至你能够为这些居民动态增加一些能力和行为，或者在这些居民奔跑的时候改变他们的行为，或者创建一些新的居民。这样的语言有Ruby、Python等。&lt;/p&gt;&lt;p&gt;在不支持元编程的语言世界里，大家分为两个状态，编译时和运行时，一旦编译器完成了自己的工作，这些方法和函数就看不见了，他们成为内存中的幽灵，你只能通过固定的方式使用他们，而无法获取他们自身的信息。当然，即使是这样的语言，为了增加编程的灵活性，也通过各种方式来提升元编程的能力，比如Java和C#笨手笨脚的使用反射方式，C++则通过模板方式，但古老的C就无能为力了，因为他没有元编程能力。&lt;/p&gt;&lt;p&gt;现在我们就知道了，编程语言虽然各有侧重，但是语言和语言之间的能力和特点区别还是很大的，不管你现在使用的是什么语言，我都建议你们去学一门具备原生的元编程能力的语言，比如Ruby、Python、Lisp、Objective-C等。&lt;/p&gt;&lt;p&gt;我第一次接触元编程和元数据还是在一家外企，那家外企的名字和火箭有关，他们有很多年纪一大把的老程序员，据说是制定corba标准的牛人，他们在这个火箭公司开发了一套分布式的软件平台，名字不能提，因为老外的版权意识太强袅。我一位前同事移民国外，只是在自己的开源项目引用了一点平台文档，结果一纸法院传票追杀到异国他乡，而且直接导致这个同事的上司被辞退。「好吧，上司不是我，不过我当时确实想过，如果我引用了他们的代码，也许会见到真的杀手吧。」&lt;/p&gt;&lt;p&gt;这套平台的持久化、权限和业务逻辑引擎都采用了元编程和元数据的方式实现，实现语言是Python，当时看到那些优雅的代码，我再次感受到编程的魔力，原来代码还可以这样写！我在那个外企的两点收获，第一是平台和元编程，第二是版权意识。后来当我有机会主导从头构建一个软件开发平台的时候，我吸取了这些思想和经验，基于元编程的思路构建了平台组件数据字典，你可以编写少量代码或不编写代码就生成各种业务应用，这就是操作代码的代码，描述数据的数据。&lt;/p&gt;&lt;p&gt;这时候就有童靴问了，你啰哩啰嗦扯了这么多元编程，干嘛标题叫做人生元编程？&lt;/p&gt;&lt;p&gt;因为无论是编程还是人生，都特么是相通的，想清楚了这一点，你就会觉得百无聊赖，因为万事万物要么是熊样要么是鸟样，都脱不出那个框框。具备元编程的语言就具备更强大的操控自己的能力，可以自省，可以反射，可以动态改变和控制自己；具备人生元编程能力的人，同样有自省能力，随时检查和控制自身的情绪和行为，思考自己的想法，改变大脑的动机。&lt;/p&gt;&lt;p&gt;举个简单的例子，当你的理智告诉自己9点就必须开始看书学习的时候，你的大脑会对你说，「亲，可以再看会电视呦，你看沙发都这么舒服……」&lt;/p&gt;&lt;p&gt;缺乏元编程能力的回答是「那……就再看会」，具备元编程能力的回答是「滚！」&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;em&gt;文章内容来自微信公众账号：MacTalk&lt;br&gt;· 微信号：sagacity-mac&lt;br&gt;· 回复 m 可以查阅所有历史文章和Mac Tips&lt;br&gt;· Web站点：&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;macshuo.com&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;点击&lt;/i&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/%3Fp%3D595" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;人生元编程 | MacTalk-池建强的随想录&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;阅读原文&lt;/p&gt;</description><pubDate>2013-08-06T09:28:16+08:00</pubDate></item><item><title>老兵不死，只能自我提升</title><link>http://zhuanlan.zhihu.com/p/19557386</link><description>&lt;blockquote&gt;&lt;p&gt;广州虽然没下雨，但是天气并没有北京那么热，就是空气比较湿。昨天傍晚抵达广州，从白云机场往市区里行车，看到满天弥漫着五彩的晚霞。广州郊区的山似乎都非常低，已经临近8点，夕阳依然把光芒不屈不挠的发散出来，于是那些高远的云被镀上了各种色彩，一片一片，层叠着，幻化着，每片云都镶着深浅不一的金边，非常迷人。&lt;/p&gt;&lt;p&gt;昨晚快凌晨才打开电脑，看到很多人问怎么不更新，我觉得大家没必要每天都等，这玩意毕竟不能当饭吃，写了这么多，我也开始更多的追求文字质量和内容，不一定天天更新，但希望有更多精品。&lt;/p&gt;&lt;/blockquote&gt;&lt;h1&gt;今天的主题是：老兵不死，只能自我提升&lt;/h1&gt;&lt;p&gt;按照现代人的生存环境，我觉得70岁可以算人生的有效年龄，所以说35岁人生过半并不为过。对于喜欢思考的人来说，人生过半还能够听进人言的，我觉得有圣贤之心，当然能否成就圣贤之事要另说。常年读书、思考，并每日三省其身的人，30多岁基本都形成了自己的完整三观，至于三观正与不正，就仁者见仁了。这样的人你试图以旁观者清的理由告诉他一些人一些事，提些建议或给些意见，得到的反馈基本都是面带笑容频频点头和若有所思，心里不骂娘、手里不攥紧诺记手机已经算是对你客气了。&lt;/p&gt;&lt;p&gt;我和身边的朋友、同事探讨过这个问题，大家都有同感，一个问题只有自己想清楚了，悟了，才会去回顾之前别人的那些碎碎念，哪些是建议哪些是垃圾，哪些是牛人哪些是吊丝，然后给别人分分类排排序，以为自己下次会更多采纳那些优质建议，其实下次还是一个德行。伟大如乔布斯者，经常对苹果的那些牛人提出的建议、意见、创意和想法抛出硬邦邦的两个字，狗屎，掷地有声后飘然离去，两周后一准喜滋滋的把大家召集在一起说，哥有个好主意 balabala……这时就会有个倒霉蛋在后面骂娘「这特么不是我两周前的点子么？」说起来都是眼泪……&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;注：看了这篇文章不要试图和你的领导去探讨意见和建议的事，无论是工作中的还是家里的，他/她们的处理原则是不变的：有意见可以提，保留就是了。不听劝非要去争取自由的，生死由命富贵在天，MacTalk 不负担任何法律责任！&lt;/p&gt;&lt;p&gt;其实更稳妥的做法是让他/她们订阅 MacTalk……&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;为毛会这样，给大家讲个故事先：&lt;/p&gt;&lt;p&gt;话说唐僧师徒四人取经成功位列仙班，第一天去上班时进大雄宝殿，被看门的拦住了。大家一看，原来是当年悟空大闹天庭时揍过的一个罗汉，罗汉说：&lt;/p&gt;&lt;p&gt;「虽然你们都成仙了，但是还得回答一个问题才能进去。」然后问唐僧，「你信佛吗？」&lt;/p&gt;&lt;p&gt;唐僧心里说，尼玛信不信都得说信啊，于是回答，「信」，然后就进去了，猪八戒和沙和尚也是这问题，分分钟都进去了。猴子心想，这特么太简单了，正准备整整虎皮战衣抬腿进殿，罗汉问道：&lt;/p&gt;&lt;p&gt;「大圣，你知道世界上有多少只猴子吗？」 「你大爷……」&lt;/p&gt;&lt;p&gt;这个故事当然是我编的，中心思想就是，我们每个人都是那个罗汉，在判断一个人或一件事或一句话的时候，已经根据以往的经验教训进行了预判，为不同的人和事设立了不同的准则，我们只相信那些愿意相信的东西。这玩意有个术语叫做「确认偏误」，英文叫Confirmation Bias，一旦有了这种偏见，我们就很难改变主意和接受他人意见了。&lt;/p&gt;&lt;p&gt;比如那些愿意相信气功大师的人，如果你说气功大师都是骗子，他就会问你「猴子」的问题，如果你说气功大师是国学国粹的传承者，那么他就会问你「佛」的问题。如果你说气功大师能隔几条街戳死谁，他就会两眼放光说，我擦不是真的吧……&lt;/p&gt;&lt;p&gt;现实如此，网络上更是乌烟瘴气，网络骂战几乎分不出胜负，大部分人都在相信自己原来相信的东西，只有那些一直积极思考并且愿意接受新思想的人才有可能改变，这部分人的比例是极少的，如果你是，那就是大幸！&lt;/p&gt;&lt;p&gt;写到这我对古代那些当谋士的人充满绝望的缅怀，想碰到一个上马可杀敌下马可治国还能纳谏如流的明主，基本上和现代中彩票的几率差不多，悲乎！&lt;/p&gt;&lt;p&gt;想清楚这些之后，我目前的行为准则是这样的：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;如果别人需要我的意见，知无不言，但不要去追寻结果，不要以为你的建议是金科玉律不听不行，更不要事后说，「我早就说过……」。&lt;/li&gt;&lt;li&gt;如果我需要别人的意见和建议，那就把自己放空，暂时扔掉偏见和预判，认真听好好学，争取融会贯通，提升自我，如果确实无法接受，那也不必抱怨，最后要记的说「谢谢」。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;老兵不死，只能自我提升，人生能做到大通达，小拧巴，就行了……&lt;/p&gt;&lt;p&gt;&lt;em&gt;文章内容来自微信公众账号：MacTalk，微信号：sagacity-mac&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;点击「&lt;/em&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/%3Fp%3D744" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;老兵不死，只能自我提升&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;em&gt;」阅读原文&lt;/em&gt;&lt;/p&gt;</description><pubDate>2013-07-31T20:14:12+08:00</pubDate></item><item><title>终极 Shell——ZSH</title><link>http://zhuanlan.zhihu.com/p/19556676</link><description>&lt;p&gt;在开始今天的 MacTalk 之前，先问两个问题吧：&lt;/p&gt;&lt;p&gt;1、相对于其他系统，Mac 的主要优势是什么？&lt;br&gt;2、你们平时用哪种 Shell？&lt;br&gt;……&lt;/p&gt;&lt;p&gt;第一个童靴可以坐下了，Mac 的最大优势是 GUI 和命令行的完美结合，不要把所有注意力放在 Mac 性感的腰身和明媚的显示屏上好吧，这不是妹纸！第二个童靴你可以出去面壁了，讲了这么多期 MacTalk 你告诉我还在用 Windows 的 cmd， 你让 Mac 君情何以堪？哪怕你就说在用 Linux 的 Bash 我也就原谅你了，踢飞！&lt;/p&gt;&lt;p&gt;上次在「如何学习一门编程语言」里提到了 Shell，也有读者问到 Shell 的问题，所以这次给大家说说 Shell 的事。&lt;/p&gt;&lt;p&gt;我在「趣谈个人建站」里介绍过一点 Shell，自己的东西借用下不丢人，把扯淡的拿掉，干货留下，就是如下内容：&lt;/p&gt;&lt;p&gt;Shell是Linux/Unix的一个外壳，你理解成衣服也行。它负责外界与Linux内核的交互，接收用户或其他应用程序的命令，然后把这些命令转化成内核能理解的语言，传给内核，内核是真正干活的，干完之后再把结果返回用户或应用程序。&lt;/p&gt;&lt;p&gt;Linux/Unix提供了很多种Shell，为毛要这么多Shell？难道用来炒着吃么？那我问你，你同类型的衣服怎么有那么多件？花色，质地还不一样。写程序比买衣服复杂多了，而且程序员往往负责把复杂的事情搞简单，简单的事情搞复杂。牛程序员看到不爽的Shell，就会自己重新写一套，慢慢形成了一些标准，常用的Shell有这么几种，sh、bash、csh等，想知道你的系统有几种shell，可以通过以下命令查看：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;cat /etc/shells
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;显示如下：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;/bin/bash
/bin/csh
/bin/ksh
/bin/sh
/bin/tcsh
/bin/zsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 Linux 里执行这个命令和 Mac 略有不同，你会发现 Mac 多了一个 zsh，也就是说 OS X 系统预装了个 zsh，这是个神马 Shell 呢？&lt;/p&gt;&lt;p&gt;目前常用的 Linux 系统和 OS X 系统的默认 Shell 都是 bash，但是真正强大的 Shell 是深藏不露的 zsh， 这货绝对是马车中的跑车，跑车中的飞行车，史称『终极 Shell』，但是由于配置过于复杂，所以初期无人问津，很多人跑过来看看 zsh 的配置指南，什么都不说转身就走了。直到有一天，国外有个穷极无聊的程序员开发出了一个能够让你快速上手的zsh项目，叫做「oh my zsh」，Github 网址是：&lt;a href="https://link.zhihu.com/?target=https%3A//github.com/robbyrussell/oh-my-zsh" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;https://&lt;/span&gt;&lt;span class="visible"&gt;github.com/robbyrussell&lt;/span&gt;&lt;span class="invisible"&gt;/oh-my-zsh&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;。这玩意就像「X天叫你学会 C++」系列，可以让你神功速成，而且是真的。&lt;/p&gt;&lt;p&gt;好，下面我们看看如何安装、配置和使用 zsh。&lt;/p&gt;&lt;b&gt;&lt;u&gt;安装zsh&lt;/u&gt;&lt;/b&gt;&lt;p&gt;如果你用 Mac，就可以直接看下一节&lt;br&gt;如果你用 Redhat Linux，执行：sudo yum install zsh&lt;br&gt;如果你用 Ubuntu Linux，执行：sudo apt-get install zsh&lt;br&gt;如果你用 Windows……去洗洗睡吧。&lt;/p&gt;&lt;p&gt;安装完成后设置当前用户使用 zsh：chsh -s /bin/zsh，根据提示输入当前用户的密码就可以了。&lt;/p&gt;安装oh my zsh&lt;p&gt;首先安装 git，安装方式同上，把 zsh 换成 git 即可。&lt;/p&gt;&lt;p&gt;安装「oh my zsh」可以自动安装也可以手动安装。&lt;/p&gt;&lt;p&gt;自动安装：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;手动安装：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh
cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;都不复杂，安装完成之后退出当前会话重新打开一个终端窗口，你就可以见到这个彩色的提示了：&lt;/p&gt;&lt;img src="https://pic3.zhimg.com/6bc76a6bbbac6267781dc9e59496d2ce_b.jpg" data-rawwidth="682" data-rawheight="274" class="origin_image zh-lightbox-thumb" width="682" data-original="https://pic3.zhimg.com/6bc76a6bbbac6267781dc9e59496d2ce_r.jpg"&gt;&lt;br&gt;&lt;u&gt;&lt;b&gt;配置&lt;/b&gt;&lt;/u&gt;&lt;p&gt;zsh 的配置主要集中在用户当前目录的.zshrc里，用 vim 或你喜欢的其他编辑器打开.zshrc，在最下面会发现这么一行字：&lt;/p&gt;&lt;p&gt;# Customize to your needs…&lt;/p&gt;&lt;p&gt;可以在此处定义自己的环境变量和别名，当然，oh my zsh 在安装时已经自动读取当前的环境变量并进行了设置，你可以继续追加其他环境变量。&lt;/p&gt;&lt;p&gt;接下来进行别名的设置，我自己的部分配置如下：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;alias cls='clear'
alias ll='ls -l'
alias la='ls -a'
alias vi='vim'
alias javac="javac -J-Dfile.encoding=utf8"
alias grep="grep --color=auto"
alias -s html=mate   # 在命令行直接输入后缀为 html 的文件名，会在 TextMate 中打开
alias -s rb=mate     # 在命令行直接输入 ruby 文件，会在 TextMate 中打开
alias -s py=vi       # 在命令行直接输入 python 文件，会用 vim 中打开，以下类似
alias -s js=vi
alias -s c=vi
alias -s java=vi
alias -s txt=vi
alias -s gz='tar -xzvf'
alias -s tgz='tar -xzvf'
alias -s zip='unzip'
alias -s bz2='tar -xjvf'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;zsh 的牛粪之处在于不仅可以设置通用别名，还能针对文件类型设置对应的打开程序，比如：&lt;/p&gt;&lt;p&gt;alias -s html=mate，意思就是你在命令行输入 hello.html，zsh会为你自动打开 TextMat 并读取 hello.html； alias -s gz='tar -xzvf'，表示自动解压后缀为 gz 的压缩包。&lt;/p&gt;&lt;p&gt;总之，只有想不到，木有做不到。&lt;/p&gt;&lt;p&gt;设置完环境变量和别名之后，基本上就可以用了，如果你是个主题控，还可以玩玩 zsh 的主题。在 .zshrc 里找到ZSH_THEME，就可以设置主题了，默认主题是：&lt;/p&gt;&lt;p&gt;ZSH_THEME=”robbyrussell”&lt;/p&gt;&lt;p&gt;oh my zsh 提供了数十种主题，相关文件在~/.oh-my-zsh/themes目录下，你可以随意选择，也可以编辑主题满足自己的变态需求，我采用了默认主题robbyrussell，不过做了一点小小的改动：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;PROMPT='%{$fg_bold[red]%}➜ %{$fg_bold[green]%}%p%{$fg[cyan]%}%d %{$fg_bold[blue]%}$(git_prompt_info)%{$fg_bold[blue]%}% %{$reset_color%}&amp;gt;'
#PROMPT='%{$fg_bold[red]%}➜ %{$fg_bold[green]%}%p %{$fg[cyan]%}%c %{$fg_bold[blue]%}$(git_prompt_info)%{$fg_bold[blue]%} % %{$reset_color%}'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对照原来的版本，我把 c 改为 d，c 表示当前目录，d 表示绝对路径，另外在末尾增加了一个「 &amp;gt; 」，改完之后的效果是这样的：&lt;/p&gt;&lt;p&gt;大家可以尝试进行改造，也算个趣事。&lt;/p&gt;&lt;p&gt;最后我们来说说插件。&lt;/p&gt;&lt;u&gt;&lt;b&gt;插件&lt;/b&gt;&lt;/u&gt;&lt;p&gt;oh my zsh 项目提供了完善的插件体系，相关的文件在~/.oh-my-zsh/plugins目录下，默认提供了100多种，大家可以根据自己的实际学习和工作环境采用，想了解每个插件的功能，只要打开相关目录下的 zsh 文件看一下就知道了。插件也是在.zshrc里配置，找到plugins关键字，你就可以加载自己的插件了，系统默认加载 git ，你可以在后面追加内容，如下：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;plugins=(git textmate ruby autojump osx mvn gradle)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面简单介绍几个：&lt;/p&gt;&lt;p&gt;1、git：当你处于一个 git 受控的目录下时，Shell 会明确显示 「git」和 branch，如上图所示，另外对 git 很多命令进行了简化，例如 gco=’git checkout’、gd=’git diff’、gst=’git status’、g=’git’等等，熟练使用可以大大减少 git 的命令长度，命令内容可以参考~/.oh-my-zsh/plugins/git/git.plugin.zsh&lt;/p&gt;&lt;p&gt;2、textmate：mr可以创建 ruby 的框架项目，tm finename 可以用 textmate 打开指定文件。&lt;/p&gt;&lt;p&gt;3、osx：tab 增强，quick-look filename 可以直接预览文件，man-preview grep 可以生成 grep手册 的pdf 版本等。&lt;/p&gt;&lt;p&gt;4、autojump：zsh 和 autojump 的组合形成了 zsh 下最强悍的插件，今天我们主要说说这货。&lt;/p&gt;&lt;p&gt;首先安装autojump，如果你用 Mac，可以使用 brew 安装：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;brew install autojump
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果是 Linux，去下载 autojump 的最新版本，比如：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;wget https://github.com/downloads/joelthelion/autojump/autojump_v21.1.2.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;解压缩后进入目录，执行&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;./install.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后把以下代码加入.zshrc：&lt;/p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;code class="language-text"&gt;[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] &amp;amp;&amp;amp; . ~/.autojump/etc/profile.d/autojump.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;至此，安装、配置、插件三位一体，终极 Shell 全面登场。退出终端会话重新登录，开始感受 zsh 的训疾如风！&lt;/p&gt;&lt;b&gt;&lt;u&gt;使用 zsh&lt;/u&gt;&lt;/b&gt;&lt;p&gt;1、兼容 bash，原来使用 bash 的兄弟切换过来毫无压力，该咋用咋用。&lt;/p&gt;&lt;p&gt;2、强大的历史纪录功能，输入 grep 然后用上下箭头可以翻阅你执行的所有 grep 命令。&lt;/p&gt;&lt;p&gt;3、智能拼写纠正，输入gtep mactalk * -R，系统会提示：zsh: correct ‘gtep’ to ‘grep’ [nyae]? 比妹纸贴心吧，她们向来都是让你猜的……&lt;/p&gt;&lt;p&gt;4、各种补全：路径补全、命令补全，命令参数补全，插件内容补全等等。触发补全只需要按一下或两下 tab 键，补全项可以使用 ctrl+n/p/f/b上下左右切换。比如你想杀掉 java 的进程，只需要输入 kill java + tab键，如果只有一个 java 进程，zsh 会自动替换为进程的 pid，如果有多个则会出现选择项供你选择。ssh + 空格 + 两个tab键，zsh会列出所有访问过的主机和用户名进行补全&lt;/p&gt;&lt;p&gt;5、智能跳转，安装了autojump之后，zsh 会自动记录你访问过的目录，通过 j + 目录名 可以直接进行目录跳转，而且目录名支持模糊匹配和自动补全，例如你访问过hadoop-1.0.0目录，输入j hado 即可正确跳转。j –stat 可以看你的历史路径库。&lt;/p&gt;&lt;p&gt;6、目录浏览和跳转：输入 d，即可列出你在这个会话里访问的目录列表，输入列表前的序号，即可直接跳转。&lt;/p&gt;&lt;p&gt;7、在当前目录下输入 .. 或 … ，或直接输入当前目录名都可以跳转，你甚至不再需要输入 cd 命令了。&lt;/p&gt;&lt;p&gt;8、通配符搜索：ls -l **/*.sh，可以递归显示当前目录下的 shell 文件，文件少时可以代替 find，文件太多就歇菜了。&lt;/p&gt;&lt;p&gt;9、更强的别名：请参考配置一节。&lt;/p&gt;&lt;p&gt;10、插件支持：请参考插件一节。&lt;/p&gt;&lt;p&gt;……&lt;/p&gt;&lt;p&gt;看完这篇文章，你就知道，zsh一出，无人再与争锋！终极二字不是盖的。&lt;/p&gt;&lt;p&gt;如果你是个正在使用 shell程序员，如果你依然准备使用 bash，那就去面壁和忏悔吧，别说你订阅过 MacTalk！&lt;/p&gt;&lt;p&gt;感谢那位开发了 oh my zsh 的无聊程序员，他可能没有因此收获物质上的利益，但是他的代码提升了无数程序员的效率，节省了大量的时间，我们说，程序员改变世界！&lt;/p&gt;&lt;p&gt;MacTalk 写的多了，朋友和家人都不太理解，这玩意赚不了钱争不了名，写来何用？我想，能够学习、编码、写作，并做出一点帮助别人的东西，总好过炒股炒房的价值吧……&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;em&gt;文章内容来自微信公众账号：MacTalk&lt;br&gt;· 微信号：sagacity-mac&lt;br&gt;· 回复 m 可以查阅所有历史文章和Mac Tips&lt;br&gt;· Web站点：&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;macshuo.com&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;点击{&lt;/em&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/%3Fp%3D676" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;macshuo.com/?&lt;/span&gt;&lt;span class="invisible"&gt;p=676&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;em&gt;}查看原文。&lt;/em&gt;&lt;/p&gt;</description><pubDate>2013-07-29T09:38:48+08:00</pubDate></item><item><title>锤子和钉子</title><link>http://zhuanlan.zhihu.com/p/19554666</link><description>&lt;p&gt;曾经有位古人说过，如果你手里有一把锤子，所有东西看上去都像钉子。还有一位今人说过，如果你有一个钉子，就会满大街找锤子！&lt;/p&gt;&lt;p&gt;哪位读者说说这话是什么意思？好，就这位穿黄衣服的童靴，请把手里的锤子放下到前面来「……此处省略一万字」。&lt;/p&gt;&lt;p&gt;这位童靴讲的非常好，不过我要纠正两点，第一，诺基亚不是锤子，虽然少数型号可以当锤子用。第二，锤子不是老罗手机，虽然他的手机叫锤子。&lt;/p&gt;&lt;p&gt;如果你们以为我今天要讲的是手里有锤心中无锤不要见人就锤，工具是死的人是活的，不要被工具禁锢balabala……你们就图样图森破了，Mac君今天要讲的是：&lt;/p&gt;&lt;p&gt;&lt;u&gt;&lt;b&gt;1、尽可能去做开发工具的人&lt;/b&gt;&lt;/u&gt;&lt;/p&gt;&lt;p&gt;无论是锤子还是钉子，都是工具，如果让我来选择，是去做锤子和钉子本身，还是去用锤子把钉子敲进木板，我显然会选择前者。一个团队里最容易被低估的就是做锤子的人，尤其是做内部用的锤子，因为他们并不直接创造利润，无论做出来的是雷神之锤还是天马流星锤，只要不是作为产品直接销售，那么就是公司买单，而那些拿着工具到处晃的人则更容易出彩，因为客户买单。&lt;/p&gt;&lt;p&gt;从做工具和使用工具这两件事的认知程度上来说，前者更容易知其所以然。从长远来看，个人以为工具和平台是推动人类发展的原动力，业务和应用则构建于工具和平台之上，相辅相成。&lt;/p&gt;&lt;p&gt;以前我说过一句：「阿里玩的是平台，顺道把电商做了；京东玩的就是电商，顺手搞搞技术」大概表达的也是这个意思（当然京东现在也开始做平台了）。你以为阿里在做电商，其实人家在做电商平台，你以为苹果在做电脑和手机，其实人家在打造App平台。&lt;/p&gt;&lt;p&gt;有了做工具的人和工具，才有可能实现几十倍甚至成千上百倍效率的提升，所以，有机会的时候，去做工具吧。&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;u&gt;2、用好工具&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;写到这估计有同学开始愤愤不平了，不是说不要去造轮子吗？注意，人家说的是不要重新发明轮子，不是不要造轮子！如果有了好的工具和平台，那就去用好了，不要重写一个，尽可能的复用，而不是犯NIH综合症（Not Invented Here，就是非我所创、不是爷搞的就不用的意思）。&lt;/p&gt;&lt;p&gt;用工具，而且要用好工具。用好工具的基础是对工具有足够的了解并刻意练习。很多人从Windows转到Mac上没用两下就开始抱怨了：天塌了地陷了，开始菜单不见了！妈妈开始菜单不见了我该怎么开始？桌面图标在右边怎么办？键盘变了怎么办？找不到文件怎么办？&lt;/p&gt;&lt;p&gt;对于这样的使用者，首先用一记360°回旋踢让其冷静下来，然后再告诉他，你知道Dock吗，了解Finder吗，会用Mission Control吗，那么宽的触摸板不是让你烤红薯的好吧，找文件要用Spotlight，神器Alfred一定要装上，什么都不了解您拿着鼠标里三层外三层的戳能不累吗？&lt;/p&gt;&lt;p&gt;我见过最神奇的Mac用户是把Spotlight关掉了，问之何为？答曰因为每次建索引太慢袅。仔细一问才知道，此仁兄从来就没有完成过一次完整的索引，每次装系统建索引的时候感觉费时费力就把Spotlight关掉了，真实的情况是Spotlight只有第一次全索引慢点，只要建完之后就是增量索引，用户基本无感的。这种用户我们只能说图样图欠揍了。&lt;/p&gt;&lt;p&gt;后来我告诉了他解决方案后，他连声惊呼，太神奇了，太神奇了。好吧，他在Spotlight关掉的情况下用了一年Mac！&lt;/p&gt;&lt;br&gt;&lt;p&gt;好，总结一下，今天的话题是去做工具，并用好工具。&lt;/p&gt;</description><pubDate>2013-07-27T10:11:39+08:00</pubDate></item><item><title>如何学习一门编程语言</title><link>http://zhuanlan.zhihu.com/p/19554368</link><description>关于学习编程这个主题，有各种读者多次要求写一写，而且要求文艺的写、抒情的写、充满社会主义特色的写，要做到：问题看起来巨复杂，读起来巨简单，学起来巨容易！看把你们惯成什么样子了，Mac 君你继续去面壁吧。&lt;br&gt;&lt;br&gt;好吧不管他，我们接着聊。&lt;br&gt;&lt;br&gt;如果你准备未来投身到 IT 江湖从事编码这份有前途的职业，学习一门语言显然是远远不够滴，就像你初入江湖，告诉别人，&lt;br&gt;&lt;br&gt;「兄弟只会太祖长拳！」&lt;br&gt;问，「Level 可及乔峰？」&lt;br&gt;答曰，「不及万一」&lt;br&gt;&lt;br&gt;人家一看你就是P2的命，PK 时一个大招直接秒掉。写到这我想起了一个叫做冰河的兄弟，也是奇葩一朵，在程序语言方面一生只爱 Lisp（Lisp号称编程语言的祖宗），在人类语言方面则除了中英文，还在同时学习意、法、西、德四门语言，而且不是随便学学，而且神志没有错乱，这一点让我简直佩服到逆天，一门英语已经从初中折磨我到现在了，在人类语言层面，我常常是被秒杀的。&lt;br&gt;&lt;br&gt;所以，如果编程有可能成为你的职业，那么5-10年的学习和实践时间是需要的，因为你可能要学习编程语言、操作系统、算法、数据库（Sql 的 NoSql 的）、Web 开发等等，还有各种数不清的引擎和架构，特别令人发指的是当你熟练的掌握了一门技术之后，就会有位赤脚大仙走过来告诉你，孩纸，你学的技术已经不是方向袅，然后在你绝望的眼神里飘然离去……写 Java 的兄弟感受一下……&lt;br&gt;&lt;br&gt;如果你的职业发展与编程无关，只是想学习一门语言磨练人生意志，那么这事就比较容易了，比如 Python、Shell、AppleScript、Ruby 等，根据自己常用的操作系统选一个就好，如果你用 Mac，这些语言可以任选，而且环境都是现成的，如果你用其他操作系统……，对不起，MacTalk 只说 Mac。这些语言除了能够帮助你锻炼意志和提高逻辑思维能力的同时，还可以在某些关键时刻帮助你处理各种繁琐复杂的工作，比如大量文本、定时任务、自动化任务、编写常用小工具等等，还可以引发跨界编程的轰动效应，不信的话去百度搜索「Python 女神」便知。&lt;br&gt;&lt;br&gt;好的，写到这如果还没有打消你学习编程的热情，那就可以继续往下读，下面才是正文：&lt;br&gt;&lt;br&gt;&lt;u&gt;&lt;b&gt;要有光&lt;/b&gt;&lt;/u&gt;&lt;br&gt;无论学习什么，一定要有明确的目的和目标，如果是抱着玩票的心态，最多能够「知道」而不是「学以致用」，所以搞清楚自己为什么要学习编程，准备学习哪门语言，要达到什么程度，想用多长时间等等，这些问题在你的头脑里有个大概的思路和计划，就基本解决了 Why 和 What 的问题，下面我们来找 How。&lt;br&gt;多说一句，其实学什么都有用的，大部分时间你只是不知道会在什么时候什么地方用。&lt;br&gt;&lt;br&gt;&lt;b&gt;&lt;u&gt;经典教程&lt;/u&gt;&lt;/b&gt;&lt;br&gt;选定了语言不要着急去网上搜索各种秘籍、评价和下载各类盗版电子书，每个技术领域都会有一些经典的圣经级别的图书，找到它们，购买一本纸质书或电子书，最好是带练习题的，可以边学边做。&lt;br&gt;如何找到这些图书，豆瓣读书网应该是个不错的选择，虽然豆瓣的电影评价过于小清新口味，但图书评价还是值得信赖的，另外找乐于分享的老鸟推荐一下也是个不错的选择。&lt;br&gt;&lt;br&gt;&lt;b&gt;&lt;u&gt;掌握基础，持续练习&lt;/u&gt;&lt;/b&gt;&lt;br&gt;每一门编程语言的学习内容都会涉及：基础运行环境、数据类型（数字、字符串、数组、集合、字典等）、表达式、函数、流程控制、类、方法等等，不同的语言还有一些不同的特性，这些内容并不复杂，尽快通过大量的练习击倒它们，然后再去深入了解面向对象、并发、异常、文件与目录、网络、标准库等内容，并辅以持续的练习，这些内容才能够让你真正进入编程领域并做出实际的软件。&lt;br&gt;初学者每天花1-2个小时是需要的，尽量保证阅读和练习的持续性和时间长度。其实1-2个小时根本不算什么，想想你们花费在看电视和刷微博上的时间吧，如果还说没时间，那就是不抽不舒服斯基了。&lt;br&gt;&lt;br&gt;记住那句话：一边憎恶虚荣，一边找各种机会虚荣，在应该为了虚荣而努力的时候，丫拖延症犯了。&lt;br&gt;&lt;br&gt;&lt;b&gt;&lt;u&gt;外事不决问 Google&lt;/u&gt;&lt;/b&gt;&lt;br&gt;现代人的生活和学习是如此的方便，因为我们有 Google！俗话说内事不决问百度，外事不决问 Google，技术绝对属于外事，你要是去问度娘技术问题，被人家的回旋踢踢飞可别怪我没告诉过你。&lt;br&gt;以前学习技术只能通过技术图书和口口相传，现在遇到问题从Google 那里就可以找到答案，所以用好 Google 你就能如猛虎加之羽翼而翱翔四海。如果你还在认为 Google 就是个搜索框，那就图样图森破了，Mac 君今天为你推荐这两篇文章：&lt;br&gt;「Google，Google，再Google」 &lt;a href="https://link.zhihu.com/?target=http%3A//wordpress.lixiaolai.com/archives/7572.html" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;wordpress.lixiaolai.com&lt;/span&gt;&lt;span class="invisible"&gt;/archives/7572.html&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;「如何用好 Google 搜索引擎」 &lt;a href="http://www.zhihu.com/question/20161362" class="internal"&gt;&lt;span class="invisible"&gt;http://www.&lt;/span&gt;&lt;span class="visible"&gt;zhihu.com/question/2016&lt;/span&gt;&lt;span class="invisible"&gt;1362&lt;/span&gt;&lt;span class="ellipsis"&gt;&lt;/span&gt;&lt;/a&gt;&lt;br&gt;让你的搜索与众不同。&lt;br&gt;&lt;br&gt;&lt;b&gt;&lt;u&gt;用好工具&lt;/u&gt;&lt;/b&gt;&lt;br&gt;俗话说的好，欲练神功挥剑自宫，sorry 不是这句，工欲善其事必先利其器，想要学习编程一定要写代码，我们不提倡咬破手指写bloody code，所以一定要找到趁手的武器。我个人把工具分为三种，第一种是部分程序语言自带的 shell，第二种是文本编辑器，第三种是集成开发环境（IDE）。&lt;br&gt;&lt;br&gt;1、Shell，如果你在学习 Python，那么python shell，bpython 和 ipython 都是不错的选择；如果你在学习 Ruby，那么irb就是 ruby 的 shell；如果你在学习 Shell，打开终端（Terminal）就是 shell；如果你在学习 Java 或Objective-C，对不起，这些语言没有 shell。&lt;br&gt;Shell 能够单步执行你的编程语句并给出即时反馈，这种交互式编程方式非常适合初学者，所见即所得，所以凡是提供 shell 工具的语言，推荐大家优先使用shell学习。&lt;br&gt;&lt;br&gt;2、文本编辑器，这个领域向来是「猿家必争之地」，溢美之词和吐槽之声交相辉映，从古至今绵延不绝，说起来都是眼泪，比如Emacs和Vim程序猿，大家沿着不同的道路和目标前进，但总是会在某个点交叉相遇，见面就扔石头和臭鸡蛋，砸得对方鼻青脸肿，然后擦擦眼泪和口水继续前行。还有 IDEer 说 Vimer 装逼，Emacser 说 IDEer 垃圾balabala……种种血淋淋的事实足以拍一部惊悚科幻动作言情片。&lt;br&gt;我自己比较喜欢文本编辑器，但是也不排斥 IDE，这种人俗称两边不待见，但我还是那句话，不为自己设限，不同的环境应该选择最好的工具。下面给大家推荐几款文本编辑器：&lt;br&gt;（1）VIM：号称编辑器之神，全键盘操作，充满速度感，良好的插件体系，几乎满足一切程序语言的编写需求。&lt;br&gt;（2）Emacs：神的编辑器，捆绑了文本编辑器的操作系统。没了，大家感受一下……&lt;br&gt;（3）TextMate：Mac 专有编辑器，号称 Ruby 程序员最爱，当年1.0版一份39欧元，总共卖了十几万份拷贝，现在2.0免费开源，原来的开发者已经消失无踪，据说挣足银子去太平洋的小岛晒太阳去袅。&lt;br&gt;（4）Sublime Text：文本编辑器的后起之秀，发展迅猛，媲美 TextMate，跨平台，比 Vim 和 Emacs 容易上手，号称性感编辑器。&lt;br&gt;以上四款自成体系，都有完善的插件生态环境，诸君可任意选择。&lt;br&gt;对于TextMate 开发者赚了钱就跑的恶劣行径，大家完全可以批判，有时我们不得不痛苦的承认，国外程序员的鸡贼是我泱泱大国之IT民工永远无法理解滴「泪」。&lt;br&gt;&lt;br&gt;3、集成开发环境（IDE）&lt;br&gt;IDE 是图形化的集成开发工具，具备精准的词法分析、编程提示、调试等功能，功能之繁复用户自知，如果做工业级编程和团队协作的话，还是推荐使用 IDE。&lt;br&gt;在这里推荐几个系列：&lt;br&gt;（1）Eclipse 系列，通过插件方式几乎支持所有的常用编程语言，免费。&lt;br&gt;（2）JetBrains 系列，产品线丰富，几乎都是精品，Java、Python、Ruby、Php、Objective-C、Web 等一应俱全，收费。&lt;br&gt;（3）Xcode，Mac 上优秀的集成开发工具，所有的 Mac App 和 iOS App 都出自此货之手，免费。&lt;br&gt;&lt;br&gt;微软的技术不懂，就不推荐了，嘿嘿……&lt;br&gt;&lt;br&gt;除了写代码的工具，你还需要记录、阅读和查询，所以再为大家推荐三款应用：Evernote（笔记）、Pocket（以后读）和Dash（代码检索）。具体介绍和用法就不说了，不要忘了上一篇提到的Google君。&lt;br&gt;&lt;br&gt;&lt;b&gt;&lt;u&gt;找到你的 Master&lt;/u&gt;&lt;/b&gt;&lt;br&gt;小时候看西游记发现，师傅原来是用来人肉的；后来看天龙八部发现，牛人都不需要师傅，即使有也是要被别人一掌震飞的；再后来看射雕英雄传发现，愚钝的人首先得有师傅，其次得有很多师傅，再次每增加一个师傅功力都以指数级别增长，2、4、8、16……&lt;br&gt;&lt;br&gt;所以，如果有人告诉你三人行，一个老师都没有，你至少要质疑这一观点，同时考虑自己会不会筋斗云，是否天赋异禀以一当百等等。如果不成，那还是去找师傅好了。&lt;br&gt;有老师的好处有这么几个：&lt;br&gt;&lt;br&gt;（1）老师能够看到你自己看不到的地方，人这一辈子，很少人能给自己一个清晰的评价和认知，要么高估自己，要么低估自己，而旁观者，尤其是老师，往往能够看到你的弱点、长处、威胁、变化，并给你适时的提醒和指导，少走弯路。&lt;br&gt;（2）所有领域的知识都是成体系的，如果有这个领域的行家里手在你早期的学习阶段进行指导甚至设计练习技巧，与自己琢磨的效果是不可同日而语的。估计每个人都会有这样的经历，一个问题自己，想到心碎想到梦醒也没有结果，别人过来抽丝剥茧条理清晰的一讲，不仅你懂了，连你的小伙伴都懂了。这就是听君一席话胜读十年书的道理。&lt;br&gt;（3）好处多多，余不一一。&lt;br&gt;&lt;br&gt;但是走出校门之后再想找传统意义的师傅就很难了，像绝地武士那样和 Master 出双入对同生共死更无可能，这时你就需要把身边的朋友、同事当做老师和资源，不耻下问，而且要问的有智慧，让人有回答欲望，那么如何提问呢，请参考我之前写的一篇「&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/%3Fp%3D367" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;如何提问&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;」。&lt;br&gt;&lt;br&gt;&lt;b&gt;&lt;u&gt;参与社区和技术会议&lt;/u&gt;&lt;/b&gt;&lt;br&gt;&lt;br&gt;自己学习和同事交流之余，可以参与一些网络社区的交流，推荐：&lt;br&gt;技术问答社区：&lt;a href="https://link.zhihu.com/?target=http%3A//stackoverflow.com" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;stackoverflow.com&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; ，在技术领域几乎包括万象，无所不知。 GitHub：&lt;a href="https://link.zhihu.com/?target=https%3A//github.com" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;https://&lt;/span&gt;&lt;span class="visible"&gt;github.com&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; ，几乎全世界优秀的开源软件作品都在上面。&lt;br&gt;另外还可以参与一些群组，订阅一些优秀的个人博客，这个时代依然有人愿意贡献优质内容。&lt;br&gt;选择性参与一些技术会议，比如 QCon，不指望在会场能学到什么，但可以了解技术趋势，并看看别人在做什么。&lt;br&gt;&lt;br&gt;&lt;b&gt;&lt;u&gt;刻意练习&lt;/u&gt;&lt;/b&gt;&lt;br&gt;之前写过两篇「&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/%3Ftag%3D%25E5%2588%25BB%25E6%2584%258F%25E7%25BB%2583%25E4%25B9%25A0" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;刻意练习&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;」的文章，自感对学习编程有一定帮助，大家可以去读一下。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;&lt;u&gt;逃离舒适区&lt;/u&gt;&lt;/b&gt;&lt;blockquote&gt;这一部分适合已经有一定编程基础的童靴&lt;br&gt;&lt;/blockquote&gt;什么是舒适区？如果你是个新手，你就没什么舒适区，什么都不懂嘛舒适个毛，在磕磕绊绊的学习中懵懂前行，期间可能还伴随着老鸟的嘲笑和进度的压力，终于有一天你武功精进，乾坤大挪移练到了第五重，工作中开始得心应手游刃有余，不断有新人或老人来找你解决问题，你微笑着迎接挑战，淡淡的送走难题，你挥一挥手，不带走一片云彩，这是什么境界？这就是你的舒适区，这和靠在沙发上看电视的舒适不是一回事，通常进入舒适区需要花费你很多的时间和精力，需要你不断的练习，一旦进入，你会enjoy it！&lt;br&gt;&lt;br&gt;这时候，如果有人胆敢让你脱离舒适区，可算要了亲命了，你会勃然大怒，轻则争吵，重则离职。这种事遇到太多了，一个写前端的你让他学习一些后端技术，一个写Java的你让他学习一下C，得到的答复可能会，Sorry, I feel very uncomfortable!&lt;br&gt;&lt;br&gt;没有人学新东西的时候非常舒服，一旦经历过从新人到老鸟的过程，再让你进入陌生的领域，那种痛苦会让你自发的去抗拒。但是一个人不可能永远躲在舒适区里，逃离舒适区会有助于你从不同的角度看问题，视野会更加开阔。人总要往前走的。&lt;br&gt;很多人在某个地方待久了就会非常懈怠，没退休就像在养老，这时候你就知道，他们在舒适区太久了，与在哪个地方无关。&lt;br&gt;&lt;br&gt;&lt;b&gt;&lt;u&gt;最后一招「见龙在田」&lt;/u&gt;&lt;/b&gt;&lt;br&gt;实战总是很重要，为大家推荐一个在线学习编程网站：&lt;br&gt;&lt;a href="https://link.zhihu.com/?target=http%3A//www.codecademy.com/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;http://www.codecademy.com&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;&lt;br&gt;假以时日，各位必定武功大成，那时横刀立马、拔剑四顾，说英雄谁是英雄！&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;em&gt;文章内容来自微信公众账号：MacTalk&lt;br&gt;· 微信号：sagacity-mac&lt;br&gt;· 回复 m 可以查阅所有历史文章和Mac Tips&lt;br&gt;· Web站点：&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;macshuo.com&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/em&gt;&lt;br&gt;*如果希望持续听MacTalk，点击{&lt;a href="https://link.zhihu.com/?target=https%3A//me.alipay.com/sagacity" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;https://&lt;/span&gt;&lt;span class="visible"&gt;me.alipay.com/sagacity&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;}对作者进行小额赞助</description><pubDate>2013-07-26T11:07:38+08:00</pubDate></item><item><title>为何而写？</title><link>http://zhuanlan.zhihu.com/p/19554294</link><description>&lt;blockquote&gt;在盛夏的这个周末，我在杭州度过了一段美好的时光，见到了很多老朋友，还有几位热情的读者，参加了一个夜聊的节目，认识了很多新朋友，领略了夜行西湖的美妙风光，此行非虚。&lt;br&gt;杭州的天气和北京截然不同，北京要么是热烈的阳光直射大地，干燥温暖，要么是大风裹挟着暴雨席卷京城，要么以漫天的雾霭夹杂着浓浓的PM2.5气息为你带来这特么才是北京的直观感受。杭州就温和多了，阳光似乎总被一层薄雾笼罩，温度很高，但空气中总夹杂着水汽，出去转一圈浑身湿漉漉回来的一定是北方土鳖，偶尔碰到一个PM2.5，它会告诉你，「我要旅行去北方，那里才是我的家」，想想让人颇为绝望。说是有台风，但台风也只是轻轻略过杭州上空，带来了些许清凉，带走了一些红尘。&lt;br&gt;现在我即将离开这座美好的城市，坐在开向北方的列车上，颇为惆怅的写今天的 MacTalk，今天的主题是：为何而写？&lt;/blockquote&gt;&lt;br&gt;在阿里嘉年华的『夜聊』节目中，有一个问题是「你为什么要写东西？」，换个文艺一点的说法就是，你就是个写代码的，不去好好做程序员这份有前途的职业，为什么要来写文章呢？谁让你写了，能挣钱吗，有人看吗？你爸爸妈妈知道吗？你的老板允许吗？balabala……&lt;br&gt;&lt;br&gt;每个嘉宾都谈了自己的看法，我整理一下自己的思路，看能不能把这事说的清楚一点。&lt;br&gt;&lt;br&gt;1、我觉得程序员这个群体是非常幸运的一群人，我们生在一个技术改变世界的时代，而我们可能正在做着能够改变世界的技术，这是何等的荣耀和机遇。想想Apple的终端设备、Google的眼镜和汽车、Amazon的电子阅读、阿里的电商和金融梦，难以想象10年以后这个世界会发生什么样的改变。更不用提那些还在车库里酝酿的各种奇思妙想，而这些改变，程序员都将参与其中。&lt;br&gt;虽然我们现在依然会遭遇到这样的烦恼：&lt;br&gt;&lt;br&gt;「大哥听说你是搞电脑的？」&lt;br&gt;「我做了十年技术了」&lt;br&gt;「好的，能帮我装个XP 吗？要番茄版的」&lt;br&gt;&lt;br&gt;这时候就可以把兜里准备好的西红柿扔出去了，如果不会扭到自己的老腰，再加个360°回旋踢就更加完美。&lt;br&gt;&lt;br&gt;2、不要给自己设限。谁说程序员只能写代码了，谁说程序员是都宅男了？程序员里才华横溢的多了去了，无论是《黑客与画家》还是《乔布斯传》都描述了很多具备文艺气息的技术大师，他们要么作画、要么弹琴、要么写作、要么运动，同时还写的一手好代码。其实万事万物都是想通的，要么熊样要么鸟样，如果你能够把代码写的很好，那么为什么不去把自己的思想和设计通过文字表达出来呢？如果你能够把技术文章写好，慢慢就能写出人文类的文字，慢慢你就会发现自己已经站在科技与人文的十字路口了。最高境界就是，你站在哪，哪里就有一个刻着科技和人文路标的十字路口。&lt;br&gt;在 MacTalk 之前，我写博客，也为一些媒体写文章，最好的时候一个月会写2-3篇，每次约稿都要拖到最后才能完成，但是开始写 MacTalk 之后，到今天为止，近8个月的时间我写了160多篇有效文章，平均每周5篇左右，文字总量在15万到20万，这个惊人的数量是我从来没想到的，而且花费的时间是我剪切了刷微博、浏览网页、扯淡、看电视的时间，粘贴到 MacTalk上的，每个人时间就那么多，我觉得我并没有损失什么。&lt;br&gt;所以，不要为自己设限！&lt;br&gt;&lt;br&gt;3、写作即思考。写作其实就代表思考，你需要言之有物，需要架构需要梳理，要有开端有结尾有结论有主题，特别神奇的是你构思了一篇文章，写完后发现文章像具备了生命一样生长出了很多奇异的果实，它们就在那些文字中间微微颤动，闪烁着独特的光泽，放佛被岁月冲刷过的鹅卵石一样，而这一切你可能完全没有想过的，而且不可复制。所以有时候我们去看之前写的文章，会产生两种感觉，要么是觉得写的太烂了，怎么会写的如此臭不可闻；要么是觉得写的太好了，妈妈我再也写不出这么牛逼的文字了，我觉得这种两种感觉，都挺好。&lt;br&gt;优秀的写作者不仅能让事情变的容易理解，而且能够换位思考，沟通顺畅思维敏捷。与这样的程序员交流是赏心悦目的。遇到问题时他会抽丝剥茧，告诉你问题的前因后果，由表及里，并且把能够反映问题的各种信息等都提供给你，包括他自己尝试解决问题的措施和结果。&lt;br&gt;&lt;br&gt;所以，为自己写作！&lt;br&gt;&lt;br&gt;4、附加值。写 MacTalk 的初衷是给大家介绍一些 Mac 相关的技术和技巧，从来没想过商业化和媒体属性，但是做到现在，积累了几万读者，每天都有用户的反馈和赞助，你们告诉我这些文字为你们带来了欢乐、思考和启发，解决了问题，我告诉你们开心就好。MacTalk 还为我带来了很多好朋友，有知名大公司的，也有不知名的小公司的，还有在创业的。天地悠悠过客匆匆，能认识这些朋友，真好！&lt;br&gt;所以，为读者写作，附加值会随之而来。但行好事，莫问前程。河狭水急，人急计生。&lt;br&gt;&lt;br&gt;&lt;br&gt;最后回答一个问题：你为什么不坐飞机？&lt;br&gt;因为「世界上最遥远的距离，不是我站在你面前你却不知道我爱你，而是我有一张机票却被飞机放飞机。问君被放啥飞机，恰似波音787」——答案摘自《空中非人》&lt;a href="https://link.zhihu.com/?target=http%3A//lihuazhi.com/550" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;lihuazhi.com/550&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;。&lt;br&gt;&lt;br&gt;其是还有一个原因就是，在高铁上可以非常舒服的写 MacTalk！&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;em&gt;文章内容来自微信公众账号：MacTalk&lt;br&gt;· 微信号：sagacity-mac&lt;br&gt;· 回复 m 可以查阅所有历史文章和Mac Tips&lt;br&gt;· Web站点：&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com/" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;http://macshuo.com&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/em&gt;&lt;br&gt;*点击{&lt;a href="https://link.zhihu.com/?target=https%3A//me.alipay.com/sagacity" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;http://macshuo.com/?p=638&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;}阅读原文。</description><pubDate>2013-07-25T13:23:59+08:00</pubDate></item><item><title>选择 Mac</title><link>http://zhuanlan.zhihu.com/p/19554286</link><description>今天去苹果官网上扫了一眼，发现Macbook 的价格比我之前购买的优惠了不少，加上有不少朋友让我说说如何选择 Mac，那就简单说两句。&lt;br&gt;&lt;br&gt;苹果目前 Mac 系列的产品有MacBook Air，MacBook Pro，Mac mini，iMac，Mac Pro。&lt;br&gt;&lt;br&gt;1、首先来说说 MBA，如果追求轻薄便携的话，当然首选 Air 系列，如果选 Air 系列，首推11英寸系列，因为11英寸的键盘宽度和13英寸差不多，13英寸只是增加了屏幕高度，所以在输入性上二者并无太大区别，但在移动方面11寸就能落13寸的几条街了。Air系列 目前是续航能力最强的笔记本，11英寸款续航时间长达 9 小时。全系列采用了 SSD硬盘，性能无需担心，打开程序文档基本秒开，所以不仅是商务人士，程序员一样可以选择 Air，你可以随时随地拿出 11寸的 Air 进行编程、写作、浏览，无需担心热量、重量和续航。同时，如果需要使用大屏编程，接上蓝牙键盘、鼠标和外界显示器，即可打造一台强劲的台式电脑。&lt;br&gt;目前 MBA 全系列不支持Retina 显示屏，应该是技术上还没有解决如此轻薄的笔记本如何适配视网膜屏。&lt;br&gt;&lt;br&gt;2、MacBook Pro是 Mac 系列里的中坚力量，深得广大人民群众的喜爱。如果你想追求更强的性能、更好的体验、更清晰的画面，那么我推荐你购买配备了 Retina 显示屏的 MBP15，MBP 系列里的顶配，也就是传说中的 RMBP15，笔记本中的跑车，跑车里的战斗机！如果你选择了足够大的内存和硬盘，可谓一本在手走遍天下都有，画面之清晰性能之强悍让你恨不得贫贱不能移威武不能屈，你可以编程可以作画可以视频可以阅读，你还可以建三个虚拟机并且同时启动，然后搭一个夹杂着私有云和公有云的混合云，什么 LVS、Cloud Foundry、Hadoop、NoSql，能用的都给丫用上，当客户问你们的私有云有 demo 吗，你沉默着指着自己的包包，都在这里，无比的高端大气！&lt;br&gt;当然 RMBP15 的缺点是价位较高，虽然已经变得轻薄了，但依然不适合手提斜跨奔波街头，电池的续航能力也是个问题，只能支撑4-6小时。退而求其次是 RMBP13，屏幕、性能、CPU、重量、价位同步降级，也算个上选。旧版的 MBP 就不推荐了，基本上都是过渡产品。&lt;br&gt;&lt;br&gt;3、Mac mini分为普通版和 Server 版，操作系统也分为OS X Mountain Lion和OS X Server，和普通 PC 不同，mini 就是一个铝合金的漂亮盒子，除了一堆接口啥都没有，但是价位低廉，性能强劲，适合学生或在经济性上考虑较多的用户，配上外置键盘、鼠标和显示器，应该是个Mac很好的解决方案。&lt;br&gt;&lt;br&gt;4、iMac 是Mac的一体机，外观看上去就是一台帅到逆天的显示器（今天的配图），其中低调隐藏了主机和各种外设，屏幕分为21.5英寸和27英寸。购买前者还是后者，我觉得主要看你自己的书房和书桌大小，在苹果店看起来不算什么的 iMac27，放到自己书房，就特么一个字，大！有了 iMac 27，神马双显示器，什么9个 Space都弱爆了，你只要把自己的窗口平铺开放到屏幕上就行了，还是那个字，大！如果是穷人家的孩子，第一次用 iMac 会眩晕的，你会说妈妈我再也不用窗口最大化了……&lt;br&gt;iMac 主要是在工作室或家用，配合一个 11寸 MBA 似乎是不错的选择。&lt;br&gt;&lt;br&gt;5、最后介绍一下 Mac Pro，这货是 Mac 系列中动力最为强劲的机型，号称战斗机里的宇宙飞船，而且是桶装的……它那忧郁的光泽，浑圆的腰身，神乎其技的性能和存储，还有那基于 Xeon E5芯片组的12核 CPU，都掩饰不住Mac Pro的出众，它代表了专业台式电脑的未来……&lt;br&gt;如果你们不信，看看这个：&lt;a href="https://link.zhihu.com/?target=http%3A//www.apple.com.cn/mac-pro/" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://www.&lt;/span&gt;&lt;span class="visible"&gt;apple.com.cn/mac-pro/&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt; ，如果不是专业人士，我不告诉他！&lt;br&gt;&lt;br&gt;发现虾米 for Mac 上线了，于是推荐了一下，我对国内好的 Mac 应用总是充满敬意的。有位童靴回复：「已下，就差 Mac 了」。我觉得这种革命乐观主义精神非常值得赞赏。我的下一个理想就是开发一款牛叉的 Mac 应用，不挣钱，但能够让无数人使用和分享。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;em&gt;文章内容来自微信公众账号：MacTalk&lt;br&gt;· 微信号：sagacity-mac&lt;br&gt;· 回复 m 可以查阅所有历史文章和Mac Tips&lt;br&gt;· Web站点：&lt;a href="https://link.zhihu.com/?target=http%3A//macshuo.com" class=" external" target="_blank" rel="nofollow noreferrer"&gt;&lt;span class="invisible"&gt;http://&lt;/span&gt;&lt;span class="visible"&gt;macshuo.com&lt;/span&gt;&lt;span class="invisible"&gt;&lt;/span&gt;&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/em&gt;&lt;br&gt;*点击{&lt;a href="https://link.zhihu.com/?target=https%3A//me.alipay.com/sagacity" class=" wrap external" target="_blank" rel="nofollow noreferrer"&gt;http://macshuo.com/?p=642&lt;i class="icon-external"&gt;&lt;/i&gt;&lt;/a&gt;}阅读原文。</description><pubDate>2013-07-25T13:19:11+08:00</pubDate></item><item><title>明天的科技</title><link>http://zhuanlan.zhihu.com/p/19551798</link><description>在人类漫长的历史长河中，科技的发展其实一直是缓慢的，从穴居山洞、茹毛饮血，到拔剑四顾、踏马江湖，再到汽车飞机、一日万里，整个过程历经上百万年，科技就像一头年迈的耕牛在时光的地垄间缓缓前行。直到20世纪中叶，计算机被整出来了，随后互联网诞生，从此人类的科技开始快马轻裘，进入了发展的快车道。昨天还是电灯电话楼上楼下，今天已经是智能手机和平板电脑的天下，明天的科技属于谁呢？Google 的 Glass 和无人驾驶汽车，还是 Apple 的可穿戴智能设备？亦或是马斯克的超音速管道和火箭飞机……&lt;br&gt;有诗吟到：北方有佳人，绝世而独立。一顾倾人城，再顾倾人国。今天我们还能找到倾国倾城的科技么？今日佳人，明日黄花，2010年被推崇备至的 iPad 和 iPhone 已经被批评没有创新了，更早的微软和 IBM 已经被说成是没落英雄了，时至今日，说英雄谁是英雄？&lt;br&gt;上次和 Google 的朋友聊天的时候他们让我评价一下 Google 和 Apple，我说，这两个公司开发出了我每天使用最多的产品和服务，比如Apple 的 iPhone、iPad、Mac和 App Store，Google 的Search、Gmail、Analytics、Map等，所以它们是我最喜欢的两个公司。&lt;br&gt;Google呢，精深而充满未来感，他们有世界上最庞大的数据、平台和搜索能力，但却并不迷恋于此，而是把领域拓展到未来，开发出了 Google Class 和无人驾驶汽车，虽然这两个产品的盈利还不可预期，但是很多人看到了 Google 的眼界和探索精神，这也是其股票一直稳步增长的原因。&lt;br&gt;关于 Google 眼镜我要插一句，为毛老外戴上总是帅帅的，中国人民一戴总是土气四溢傻气逼人？我觉得要么是这货专门为老外脸型设计了，要么是国内那些眼镜男都不够洋气。哎，有时我被自己崇洋媚外的心理活动搞的什么都吃不下，最后只好去吃海底捞，悲剧啊。&lt;br&gt;Apple 则是不创新就去死的公司，很多人指责苹果这几年没有创新，但是不要忘了，创新是需要时间的，在你刷微博吐口水扔臭鸡蛋的时候，真正的创新者都在踏踏实实的用锤子钉钉子，用电烙铁焊板子。如果我们从2000年开始回顾的话，Apple 的每个创新大概都要经历3-5年的时间，2001年的 iPod，到2006年的 Macbook，2007年的 iPhone，2010年的 iPad，现在是2013年，我想是到了创新可期的时候了（iWatch？）。&lt;br&gt;一个产品从无到有是困难的，从有到精是艰难的，而当你站上一个巅峰之后，哪怕是做最微小的改进和提升，都需要花费大量的人力物力，同时还要承受失败的风险。我们都知道，可能很多人、很多公司穷尽一生都无法达到卓越的境地。所以对 Apple 来说，我们只是需要一点耐心，在把我们自己的事情做好的同时，再等等。&lt;br&gt;今天之所以想写这个话题，是因为这几天正在玩Jawbone Up手环。智能穿戴设备似乎已经成为未来的主流趋势，但是 Google Class 在国内似乎还是个高端玩具，尤其是我们这种读书读成近视眼「高端人士」，看见别人带 Google 眼镜耍酷心中就有几万头泥马翻腾奔涌。iWatch 呢，除了一堆效果图毛都没有，所以玩玩健康手环是个不错的贴近未来的选择。&lt;br&gt;&lt;img src="https://pic3.zhimg.com/ef552d38394b63baa5e5dc184e58a9da_b.jpg" data-rawwidth="1024" data-rawheight="706" class="origin_image zh-lightbox-thumb" width="1024" data-original="https://pic3.zhimg.com/ef552d38394b63baa5e5dc184e58a9da_r.jpg"&gt;&lt;br&gt;我个人除了对 Apple 的产品抵抗力稍弱之外，在其他方面基本上土的掉渣渣，自然不知道有这种手环，这是上次参加阿里技术嘉年华获赠的，回来就开始折腾，用了一周多，感觉不错，手环和 iPhone 或 Andorid 平台上的 App 配合，可以记录你每天运动了多少步，睡眠质量，睡眠时间，还有智能睡眠闹钟，空闲提醒等功能。长时间使用还可以记录你的生命线和趋势。&lt;br&gt;当然有个功能比较鸡肋就是记录饮食信息和热量，全特么是英文，您要是吃了个土豆炖牛肉，根本就不知道填啥，所以，目前基本没用。&lt;br&gt;用这玩意的另一个好处就是，如果需要徒步去做点什么，以前的反映是「我了个擦，怎么这么远」。现在的反映是，「好，又可以增加几千步了」。&lt;br&gt;扯了这么多，明天的科技到底是什么样子呢？没人知道，未来的事情谁说的准呢，不过我觉得，软件与硬件的整合，硬件与人的整合，人与自然的整合，可能是未来科技的发展之路吧……</description><pubDate>2013-07-23T13:55:36+08:00</pubDate></item></channel></rss>
